/*! For license information please see main.bundle.js.LICENSE.txt */
(self.webpackChunksavvy_cv=self.webpackChunksavvy_cv||[]).push([[179],{793:(e,t,n)=>{"use strict";var r=n(294),a=n(745),o=n(379),i=n.n(o),l=n(795),u=n.n(l),c=n(569),s=n.n(c),d=n(565),f=n.n(d),p=n(216),m=n.n(p),g=n(589),h=n.n(g),v=n(426),b={};b.styleTagTransform=h(),b.setAttributes=f(),b.insert=s().bind(null,"head"),b.domAPI=u(),b.insertStyleElement=m(),i()(v.Z,b),v.Z&&v.Z.locals&&v.Z.locals;let A=(e=21)=>crypto.getRandomValues(new Uint8Array(e)).reduce(((e,t)=>e+((t&=63)<36?t.toString(36):t<62?(t-26).toString(36).toUpperCase():t>62?"-":"_")),"");function y(e){return y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},y(e)}function E(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function w(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function C(e,t){return C=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},C(e,t)}function x(e,t){if(t&&("object"===y(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function S(e){return S=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},S(e)}const k=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&C(e,t)}(l,e);var t,n,a,o,i=(a=l,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=S(a);if(o){var n=S(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return x(this,e)});function l(){return E(this,l),i.apply(this,arguments)}return t=l,(n=[{key:"render",value:function(){var e=this;return r.createElement("nav",null,r.createElement("div",{className:"logo"},r.createElement("h1",null,"CV Savvy"),r.createElement("p",null,"A CV building app")),r.createElement("ul",null,r.createElement("li",null,r.createElement("i",{className:"far fa-save",onClick:function(){return e.props.navToPage(0)}})),r.createElement("li",null,r.createElement("i",{className:"far fa-edit",onClick:function(){return e.props.navToPage(1)}})),r.createElement("li",null,r.createElement("i",{className:"far fa-trash-alt",onClick:function(){return e.props.navToPage(2)}}))))}}])&&w(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),l}(r.Component),D=function(e){if(1===e.page)return r.createElement("aside",null,r.createElement("div",{className:"strikethrough"}),r.createElement("ul",{className:"tabs"},r.createElement("li",{className:"tab"},r.createElement("p",null,"About"),r.createElement("i",{className:"fas fa-check-circle aside-check-ab"},r.createElement("div",{className:"icon-bg"}))),r.createElement("li",{className:"tab"},r.createElement("p",null,"Statement"),r.createElement("i",{className:"fas fa-check-circle aside-check-ps"},r.createElement("div",{className:"icon-bg"}))),r.createElement("li",{className:"tab"},r.createElement("p",null,"Education"),r.createElement("i",{className:"fas fa-check-circle aside-check-ed"},r.createElement("div",{className:"icon-bg"}))),r.createElement("li",{className:"tab"},r.createElement("p",null,"Experience"),r.createElement("i",{className:"fas fa-check-circle aside-check-xp"},r.createElement("div",{className:"icon-bg"})))))};function I(e){return I="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},I(e)}function P(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function B(e,t){return B=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},B(e,t)}function O(e,t){if(t&&("object"===I(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function N(e){return N=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},N(e)}const R=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&B(e,t)}(l,e);var t,n,a,o,i=(a=l,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=N(a);if(o){var n=N(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return O(this,e)});function l(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,l),i.call(this,e)}return t=l,(n=[{key:"render",value:function(){var e=this.props,t=e.id,n=e.type,a=e.value,o=e.placeholder,i=e.label;return r.createElement(r.Fragment,null,r.createElement("label",{htmlFor:t},r.createElement("span",null,i),r.createElement("input",{id:t,type:n,value:a,required:!0,placeholder:o,onChange:this.props.handleInput})))}}])&&P(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),l}(r.Component);function _(e){return _="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_(e)}function T(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function F(e,t){return F=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},F(e,t)}function j(e,t){if(t&&("object"===_(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return L(e)}function L(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function M(e){return M=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},M(e)}function z(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var U=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&F(e,t)}(l,e);var t,n,a,o,i=(a=l,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=M(a);if(o){var n=M(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return j(this,e)});function l(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,l),z(L(t=i.call(this,e)),"clearFields",(function(e){return t.setState({first:"",last:"",email:"",telephone:""})})),z(L(t),"lockData",(function(e){return t.setState({lock:!t.state.lock})})),t.state={first:"",last:"",email:"",telephone:"",lock:!1},t}return t=l,n=[{key:"componentDidMount",value:function(){}},{key:"componentDidUpdate",value:function(e,t){var n=this;if(t!==this.state){var r=0,a=document.querySelector(".state-about"),o=[document.querySelector(".check-about"),document.querySelector(".aside-check-ab")],i=this.state,l=[i.first,i.last,i.email,i.telephone];l.map((function(e){a.classList.remove("fa-lock"),a.classList.add("fa-unlock"),e.length&&n.state.lock&&(a.classList.remove("fa-unlock"),a.classList.add("fa-lock")),!e.length&&n.state.lock&&n.setState({lock:!1})})),l.map((function(e){return""!==e?r++:r})),o.map((function(e){e.style.color="green",4!==r&&(e.style.color="lightgrey")})),4===r&&this.state.lock&&this.props.cb("about",{first:i.first,last:i.last,email:i.email,telephone:i.telephone})}}},{key:"render",value:function(){var e=this;return r.createElement(r.Fragment,null,r.createElement("div",{className:"section-nav"},r.createElement("h2",null,"About"),r.createElement("ul",null,r.createElement("i",{className:"fas fa-unlock state-about",onClick:this.lockData}),r.createElement("li",null,r.createElement("i",{className:"fas fa-check-circle check-about"})),r.createElement("li",null,r.createElement("i",{className:"far fa-trash-alt clear-about",onClick:this.clearFields})))),r.createElement("fieldset",{id:"about"},r.createElement("legend",null),r.createElement(R,{id:"first",type:"text",placeholder:"First Name(s)",label:"First Name(s)",value:this.state.first,handleInput:function(t){e.state.lock||e.setState({first:t.target.value})}}),r.createElement(R,{id:"email",type:"email",placeholder:"Email",label:"Email",value:this.state.email,handleInput:function(t){e.state.lock||e.setState({email:t.target.value})}}),r.createElement(R,{id:"last",type:"text",placeholder:"Last Name",label:"Last Name",value:this.state.last,handleInput:function(t){e.state.lock||e.setState({last:t.target.value})}}),r.createElement(R,{id:"telephone",type:"tel",placeholder:"Telephone",label:"Telephone",value:this.state.telephone,handleInput:function(t){e.state.lock||e.setState((function(){if(Number(t.target.value)||0===t.target.value.length)return{telephone:t.target.value};t.target.value=""}))}})))}}],n&&T(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),l}(r.Component);const G=U;function W(e){return W="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},W(e)}function q(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function H(e,t){return H=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},H(e,t)}function V(e,t){if(t&&("object"===W(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return $(e)}function $(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function Q(e){return Q=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},Q(e)}function Y(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}const J=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&H(e,t)}(l,e);var t,n,a,o,i=(a=l,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=Q(a);if(o){var n=Q(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return V(this,e)});function l(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,l),Y($(t=i.call(this,e)),"processStatement",(function(){t.props.cb("statement",t.state.statement)})),Y($(t),"lockData",(function(e){})),Y($(t),"clearFields",(function(e){return t.setState({statement:""})})),t.state={statement:"",statements:[]},t}return t=l,(n=[{key:"componentDidMount",value:function(){}},{key:"componentDidUpdate",value:function(e,t){var n=this;[document.querySelector(".check-statement"),document.querySelector(".aside-check-ps")].map((function(e){e.style.color="lightgrey",n.state.statement.length>0&&(e.style.color="green")}))}},{key:"render",value:function(){var e=this;return r.createElement(r.Fragment,null,r.createElement("div",{className:"section-nav"},r.createElement("h2",null,"Personal Statement"),r.createElement("ul",null,r.createElement("li",null,r.createElement("i",{className:"fas fa-unlock",onClick:this.lockData})),r.createElement("li",null,r.createElement("i",{className:"fas fa-plus-circle add-exp",onClick:this.processStatement})),r.createElement("li",null,r.createElement("i",{className:"fas fa-check-circle check-statement"})),r.createElement("li",null,r.createElement("i",{className:"far fa-trash-alt clear-statement",onClick:this.clearFields})))),r.createElement("fieldset",{id:"statement"},r.createElement("textarea",{name:"statement",value:this.state.statement,placeholder:"Your personal statement",onChange:function(t){return e.setState({statement:t.target.value})}})),r.createElement("ul",{className:"add-list"}))}}])&&q(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),l}(r.Component);function K(e){return K="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},K(e)}function X(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function Z(e,t){return Z=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},Z(e,t)}function ee(e,t){if(t&&("object"===K(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return te(e)}function te(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function ne(e){return ne=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},ne(e)}function re(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var ae=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&Z(e,t)}(l,e);var t,n,a,o,i=(a=l,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=ne(a);if(o){var n=ne(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return ee(this,e)});function l(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,l),re(te(t=i.call(this,e)),"validateInputs",(function(){})),re(te(t),"addQualification",(function(e){return t.state.quals.concat(e)})),re(te(t),"updateQualification",(function(e){return t.state.quals.map((function(n,r){return r===t.state.index.qual&&(n=e),n}))})),re(te(t),"submitQualification",(function(){var e=t.state.qualification;if(!t.state.quals.includes(e)&&""!==e){var n=t.state.edit.qual?t.updateQualification:t.addQualification;t.setState({quals:n(t.state.qualification),qualification:"",index:{qual:"",edu:t.state.index.edu},edit:{qual:!1,edu:t.state.edit.edu}})}})),re(te(t),"editQual",(function(e,n){t.setState({qualification:e,index:{qual:n,edu:t.state.index.edu},edit:{qual:!0,edu:t.state.edit.edu}})})),re(te(t),"removeQual",(function(e){var n=t.state,r=n.qualification,a=n.quals,o=n.index,i=n.edit;t.setState({qualification:r,index:{qual:"",edu:o.edu},edit:{qual:!1,edu:i.edu},quals:a.filter((function(t){return e!==t}))})})),re(te(t),"addEducation",(function(e){return t.state.education.concat(e)})),re(te(t),"updateEducation",(function(e){return t.state.education.map((function(n,r){return r===t.state.index.edu&&(n=e),n}))})),re(te(t),"processEducation",(function(e){var n=t.state,r=n.name,a=n.start,o=n.end,i=n.quals;if(r.length&&a.length&&o.length&&i.length){var l={name:r,date:{start:a,end:o},quals:i},u=t.state.edit.edu?t.updateEducation:t.addEducation;t.setState({education:u(l),name:"",start:"",end:"",qualification:"",quals:[],index:{qual:"",edu:""},edit:{qual:!1,edu:!1}})}})),re(te(t),"editEducation",(function(e,n){t.setState({index:{qual:t.state.index.qual,edu:n},edit:{qual:!1,edu:!0},name:e.name,start:e.date.start,end:e.date.end,quals:e.quals})})),re(te(t),"removeEducation",(function(e,n){n===t.state.index.edu&&t.setState({name:"",start:"",end:"",qualification:"",quals:[],index:{qual:"",edu:""},edit:{qual:!1,edu:!1}}),t.setState({education:t.state.education.filter((function(t){return e!==t}))})})),re(te(t),"clearFields",(function(e){t.setState({name:"",start:"",end:"",quals:[],qualification:""})})),re(te(t),"lockData",(function(e){})),t.state={name:"",start:"",end:"",quals:[],qualification:"",education:[],edit:{qual:!1,edu:!1},index:{qual:"",edu:""}},t}return t=l,(n=[{key:"componentDidUpdate",value:function(e,t){var n=document.querySelector(".check-edu");n.style.color="lightgrey",this.state.education.length>0&&(n.style.color="green")}},{key:"render",value:function(){var e=this;return r.createElement(r.Fragment,null,r.createElement("div",{className:"section-nav"},r.createElement("h2",null,"Education"),r.createElement("ul",null,r.createElement("li",null,r.createElement("i",{className:"fas fa-unlock",onClick:this.lockData})),r.createElement("li",null,r.createElement("i",{className:"fas fa-plus-circle add-edu",onClick:this.processEducation})),r.createElement("li",null,r.createElement("i",{className:"fas fa-check-circle check-edu"})),r.createElement("li",null,r.createElement("i",{className:"far fa-trash-alt clear-edu",onClick:this.clearFields})))),r.createElement("fieldset",{id:"education"},r.createElement("legend",null),r.createElement(R,{id:"institution",type:"text",value:this.state.name,placeholder:"Institution",label:"Institution",handleInput:function(t){return e.setState({name:t.target.value})}}),r.createElement("div",{className:"study-dates"},r.createElement(R,{id:"study-date-start",className:"study-date",type:"date",value:this.state.start,label:"Start",placeholder:"Start",handleInput:function(t){return e.setState({start:t.target.value})}}),r.createElement(R,{id:"study-date-end",className:"study-date",value:this.state.end,type:"date",label:"End",placeholder:"End",handleInput:function(t){return e.setState({end:t.target.value})}})),r.createElement("div",{className:"qualifications"},r.createElement(R,{id:"qualification",type:"text",value:this.state.qualification,placeholder:"Qualification",label:"Qualifications",handleInput:function(t){return e.setState({qualification:t.target.value})}}),r.createElement("i",{className:"fas fa-plus-circle",onClick:function(){return e.submitQualification()}}),r.createElement("ul",{className:"quals-container"},this.state.quals.map((function(t,n){return r.createElement("li",{key:n,className:"add-list-title"},r.createElement("p",{onClick:function(){return e.editQual(t,n)}},t),r.createElement("i",{className:"fas fa-times-circle tag-icon",onClick:function(){return e.removeQual(t)}}))}))))),r.createElement("ul",{className:"add-list"},this.state.education.map((function(t,n){return r.createElement("li",{key:n,className:"add-list-title"},r.createElement("p",{onClick:function(){return e.editEducation(t,n)}},t.name),r.createElement("i",{className:"fas fa-times-circle tag-icon",onClick:function(){return e.removeEducation(t,n)}}))}))))}}])&&X(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),l}(r.Component);const oe=ae;function ie(e){return ie="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},ie(e)}function le(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function ue(e,t){return ue=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},ue(e,t)}function ce(e,t){if(t&&("object"===ie(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return se(e)}function se(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function de(e){return de=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},de(e)}function fe(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var pe=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&ue(e,t)}(l,e);var t,n,a,o,i=(a=l,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=de(a);if(o){var n=de(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return ce(this,e)});function l(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,l),fe(se(t=i.call(this,e)),"addJob",(function(e){return t.state.jobs.concat(e)})),fe(se(t),"updateJob",(function(e){return t.state.jobs.map((function(n,r){return r===t.state.index.job&&(n=e),n}))})),fe(se(t),"submitJob",(function(){var e=t.state.job;if(!t.state.jobs.includes(e)&&""!==e.title){var n=t.state.edit.job?t.updateJob:t.addJob;t.setState({jobs:n(t.state.job),title:"",description:"",job:{},index:{title:"",jobs:t.state.index.edu},edit:{title:!1,jobs:t.state.edit.edu}})}})),fe(se(t),"editJob",(function(e,n){t.setState({title:e.title,description:e.description,job:e,index:{job:n,exp:t.state.index.exp},edit:{job:!0,exp:t.state.edit.exp}})})),fe(se(t),"removeJob",(function(e){var n=t.state,r=n.title,a=n.description,o=n.jobs,i=n.index,l=n.edit;t.setState({title:r,description:a,job:{title:r,description:a},index:{job:"",exp:i.exp},edit:{job:!1,exp:l.exp},jobs:o.filter((function(t){return e!==t}))})})),fe(se(t),"addExperience",(function(e){return t.state.experience.concat(e)})),fe(se(t),"updateExperience",(function(e){return t.state.experience.map((function(n,r){return r===t.state.index.exp&&(n=e),n}))})),fe(se(t),"processExperience",(function(e){var n=t.state,r=n.company,a=n.start,o=n.end,i=n.jobs;if(r.length&&a.length&&o.length&&i.length){var l={company:r,date:{start:a,end:o},jobs:i},u=t.state.edit.exp?t.updateExperience:t.addExperience;t.setState({experience:u(l),company:"",start:"",end:"",title:"",description:"",job:{},jobs:[],index:{job:"",exp:""},edit:{job:!1,exp:!1}})}})),fe(se(t),"editExperience",(function(e,n){t.setState({index:{job:t.state.index.job,exp:n},edit:{job:!1,exp:!0},company:e.company,start:e.date.start,end:e.date.end,jobs:e.jobs})})),fe(se(t),"removeExperience",(function(e,n){n===t.state.index.exp&&t.setState({company:"",start:"",end:"",title:"",description:"",job:{},jobs:[],index:{job:"",exp:""},edit:{job:!1,exp:!1}}),t.setState({experience:t.state.experience.filter((function(t){return e!==t}))})})),fe(se(t),"clearFields",(function(e){t.setState({company:"",start:"",end:"",title:"",description:"",job:{},jobs:[]})})),fe(se(t),"lockData",(function(e){})),t.state={company:"",start:"",end:"",title:"",description:"",job:{},jobs:[],experience:[],edit:{job:!1,exp:!1},index:{job:"",exp:""}},t}return t=l,(n=[{key:"componentDidMount",value:function(){}},{key:"componentDidUpdate",value:function(e,t){var n=this.state,r=n.title,a=n.description;t.title===r&&t.description===a||this.setState({job:{title:r,description:a}});var o=document.querySelector(".check-exp");o.style.color="lightgrey",this.state.experience.length>0&&(o.style.color="green")}},{key:"render",value:function(){var e=this;return r.createElement(r.Fragment,null,r.createElement("div",{className:"section-nav"},r.createElement("h2",null,"Experience"),r.createElement("ul",null,r.createElement("li",null,r.createElement("i",{className:"fas fa-unlock",onClick:this.lockData})),r.createElement("li",null,r.createElement("i",{className:"fas fa-plus-circle add-exp",onClick:this.processExperience})),r.createElement("li",null,r.createElement("i",{className:"fas fa-check-circle check-exp"})),r.createElement("li",null,r.createElement("i",{className:"far fa-trash-alt clear-exp",onClick:this.clearFields})))),r.createElement("fieldset",{id:"experience"},r.createElement("legend",null),r.createElement(R,{id:"company",type:"text",value:this.state.company,placeholder:"Company Name",label:"Company",handleInput:function(t){return e.setState({company:t.target.value})}}),r.createElement("div",{className:"study-dates"},r.createElement(R,{id:"work-date-start",className:"study-date",type:"date",value:this.state.start,label:"Start",placeholder:"Start",handleInput:function(t){return e.setState({start:t.target.value})}}),r.createElement(R,{id:"work-date-end",className:"study-date",type:"date",value:this.state.end,label:"End",placeholder:"End",handleInput:function(t){return e.setState({end:t.target.value})}})),r.createElement("div",{className:"jobs"},r.createElement("div",{className:"job-inputs"},r.createElement(R,{id:"job-title",type:"text",value:this.state.title,placeholder:"Job Title",label:"Title",handleInput:function(t){return e.setState({title:t.target.value})}}),r.createElement("textarea",{name:"job-description",value:this.state.description,placeholder:"Job description",onChange:function(t){return e.setState({description:t.target.value})}})),r.createElement("i",{className:"fas fa-plus-circle",onClick:function(){return e.submitJob()}}),r.createElement("ul",{className:"jobs-container"},this.state.jobs.map((function(t,n){return r.createElement("li",{key:n,className:"add-list-title"},r.createElement("p",{onClick:function(){return e.editJob(t,n)}},t.title),r.createElement("i",{className:"fas fa-times-circle tag-icon",onClick:function(){return e.removeJob(t)}}))}))))),r.createElement("ul",{className:"add-list"},this.state.experience.map((function(t,n){return r.createElement("li",{key:n,className:"add-list-title"},r.createElement("p",{onClick:function(){return e.editExperience(t,n)}},t.company),r.createElement("i",{className:"fas fa-times-circle tag-icon",onClick:function(){return e.removeExperience(t,n)}}))}))))}}])&&le(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),l}(r.Component);const me=pe;function ge(e){return ge="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},ge(e)}function he(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function ve(e,t){return ve=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},ve(e,t)}function be(e,t){if(t&&("object"===ge(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return Ae(e)}function Ae(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function ye(e){return ye=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},ye(e)}function Ee(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var we=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&ve(e,t)}(l,e);var t,n,a,o,i=(a=l,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=ye(a);if(o){var n=ye(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return be(this,e)});function l(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,l),Ee(Ae(t=i.call(this,e)),"updateAppCvData",(function(){var e=t.state,n=e.about,r=e.links,a=e.statement,o=e.skills,i=e.education,l=e.experience;t.props.setFormData({about:n,links:r,skills:o,statement:a,education:i,experience:l})})),Ee(Ae(t),"setData",(function(e,n){switch(e){case"about":t.setState({about:n});break;case"links":t.setState({links:t.state.links.concat(n)});break;case"skills":t.setState({skills:t.state.skills.concat(n)});break;case"education":t.setState({education:t.state.education.concat(n)});break;case"experience":t.setState({experience:t.state.experience.concat(n)});break;case"statement":t.setState({statement:n})}})),t.state={sections:[],statement:"",links:[],skills:[],education:[],experience:[],about:{first:"",last:"",email:"",telephone:""}},t}return t=l,(n=[{key:"componentDidMount",value:function(){this.setState({sections:[r.createElement(G,{input:this.state.about,cb:this.setData}),r.createElement(J,{input:this.state.statement,cb:this.setData}),r.createElement(oe,{input:this.state.education,cb:this.setData}),r.createElement(me,{input:this.state.experience,cb:this.setData})]})}},{key:"componentDidUpdate",value:function(e,t){if(t!==this.state)return this.updateAppCvData()}},{key:"render",value:function(){if(1===this.props.page)return r.createElement("form",null,r.createElement("ul",{className:"form-ul"},this.state.sections.map((function(e,t){return r.createElement("li",{key:t},r.createElement("div",{className:"section-bypass-mask"}),e)}))))}}])&&he(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),l}(r.Component);const Ce=we;function xe(e,t){return xe=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},xe(e,t)}function Se(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,xe(e,t)}function ke(){return ke=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},ke.apply(this,arguments)}function De(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function Ie(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function Pe(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?Ie(Object(n),!0).forEach((function(t){De(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):Ie(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function Be(e){return"Minified Redux error #"+e+"; visit https://redux.js.org/Errors?code="+e+" for the full message or use the non-minified dev environment for full errors. "}var Oe="function"==typeof Symbol&&Symbol.observable||"@@observable",Ne=function(){return Math.random().toString(36).substring(7).split("").join(".")},Re={INIT:"@@redux/INIT"+Ne(),REPLACE:"@@redux/REPLACE"+Ne(),PROBE_UNKNOWN_ACTION:function(){return"@@redux/PROBE_UNKNOWN_ACTION"+Ne()}};function _e(e){if("object"!=typeof e||null===e)return!1;for(var t=e;null!==Object.getPrototypeOf(t);)t=Object.getPrototypeOf(t);return Object.getPrototypeOf(e)===t}function Te(e,t,n){var r;if("function"==typeof t&&"function"==typeof n||"function"==typeof n&&"function"==typeof arguments[3])throw new Error(Be(0));if("function"==typeof t&&void 0===n&&(n=t,t=void 0),void 0!==n){if("function"!=typeof n)throw new Error(Be(1));return n(Te)(e,t)}if("function"!=typeof e)throw new Error(Be(2));var a=e,o=t,i=[],l=i,u=!1;function c(){l===i&&(l=i.slice())}function s(){if(u)throw new Error(Be(3));return o}function d(e){if("function"!=typeof e)throw new Error(Be(4));if(u)throw new Error(Be(5));var t=!0;return c(),l.push(e),function(){if(t){if(u)throw new Error(Be(6));t=!1,c();var n=l.indexOf(e);l.splice(n,1),i=null}}}function f(e){if(!_e(e))throw new Error(Be(7));if(void 0===e.type)throw new Error(Be(8));if(u)throw new Error(Be(9));try{u=!0,o=a(o,e)}finally{u=!1}for(var t=i=l,n=0;n<t.length;n++)(0,t[n])();return e}function p(e){if("function"!=typeof e)throw new Error(Be(10));a=e,f({type:Re.REPLACE})}function m(){var e,t=d;return(e={subscribe:function(e){if("object"!=typeof e||null===e)throw new Error(Be(11));function n(){e.next&&e.next(s())}return n(),{unsubscribe:t(n)}}})[Oe]=function(){return this},e}return f({type:Re.INIT}),(r={dispatch:f,subscribe:d,getState:s,replaceReducer:p})[Oe]=m,r}function Fe(e,t){return function(){return t(e.apply(this,arguments))}}function je(e,t){if("function"==typeof e)return Fe(e,t);if("object"!=typeof e||null===e)throw new Error(Be(16));var n={};for(var r in e){var a=e[r];"function"==typeof a&&(n[r]=Fe(a,t))}return n}function Le(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return 0===t.length?function(e){return e}:1===t.length?t[0]:t.reduce((function(e,t){return function(){return e(t.apply(void 0,arguments))}}))}var Me=r.createContext(null),ze=function(e){e()},Ue=function(){return ze},Ge={notify:function(){},get:function(){return[]}};function We(e,t){var n,r=Ge;function a(){i.onStateChange&&i.onStateChange()}function o(){n||(n=t?t.addNestedSub(a):e.subscribe(a),r=function(){var e=Ue(),t=null,n=null;return{clear:function(){t=null,n=null},notify:function(){e((function(){for(var e=t;e;)e.callback(),e=e.next}))},get:function(){for(var e=[],n=t;n;)e.push(n),n=n.next;return e},subscribe:function(e){var r=!0,a=n={callback:e,next:null,prev:n};return a.prev?a.prev.next=a:t=a,function(){r&&null!==t&&(r=!1,a.next?a.next.prev=a.prev:n=a.prev,a.prev?a.prev.next=a.next:t=a.next)}}}}())}var i={addNestedSub:function(e){return o(),r.subscribe(e)},notifyNestedSubs:function(){r.notify()},handleChangeWrapper:a,isSubscribed:function(){return Boolean(n)},trySubscribe:o,tryUnsubscribe:function(){n&&(n(),n=void 0,r.clear(),r=Ge)},getListeners:function(){return r}};return i}var qe="undefined"!=typeof window&&void 0!==window.document&&void 0!==window.document.createElement?r.useLayoutEffect:r.useEffect;const He=function(e){var t=e.store,n=e.context,a=e.children,o=(0,r.useMemo)((function(){var e=We(t);return{store:t,subscription:e}}),[t]),i=(0,r.useMemo)((function(){return t.getState()}),[t]);qe((function(){var e=o.subscription;return e.onStateChange=e.notifyNestedSubs,e.trySubscribe(),i!==t.getState()&&e.notifyNestedSubs(),function(){e.tryUnsubscribe(),e.onStateChange=null}}),[o,i]);var l=n||Me;return r.createElement(l.Provider,{value:o},a)};function Ve(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}var $e=n(679),Qe=n.n($e),Ye=n(973),Je=["getDisplayName","methodName","renderCountProp","shouldHandleStateChanges","storeKey","withRef","forwardRef","context"],Ke=["reactReduxForwardedRef"],Xe=[],Ze=[null,null];function et(e,t){var n=e[1];return[t.payload,n+1]}function tt(e,t,n){qe((function(){return e.apply(void 0,t)}),n)}function nt(e,t,n,r,a,o,i){e.current=r,t.current=a,n.current=!1,o.current&&(o.current=null,i())}function rt(e,t,n,r,a,o,i,l,u,c){if(e){var s=!1,d=null,f=function(){if(!s){var e,n,f=t.getState();try{e=r(f,a.current)}catch(e){n=e,d=e}n||(d=null),e===o.current?i.current||u():(o.current=e,l.current=e,i.current=!0,c({type:"STORE_UPDATED",payload:{error:n}}))}};return n.onStateChange=f,n.trySubscribe(),f(),function(){if(s=!0,n.tryUnsubscribe(),n.onStateChange=null,d)throw d}}}var at=function(){return[null,0]};function ot(e,t){void 0===t&&(t={});var n=t,a=n.getDisplayName,o=void 0===a?function(e){return"ConnectAdvanced("+e+")"}:a,i=n.methodName,l=void 0===i?"connectAdvanced":i,u=n.renderCountProp,c=void 0===u?void 0:u,s=n.shouldHandleStateChanges,d=void 0===s||s,f=n.storeKey,p=void 0===f?"store":f,m=(n.withRef,n.forwardRef),g=void 0!==m&&m,h=n.context,v=void 0===h?Me:h,b=Ve(n,Je),A=v;return function(t){var n=t.displayName||t.name||"Component",a=o(n),i=ke({},b,{getDisplayName:o,methodName:l,renderCountProp:c,shouldHandleStateChanges:d,storeKey:p,displayName:a,wrappedComponentName:n,WrappedComponent:t}),u=b.pure,s=u?r.useMemo:function(e){return e()};function f(n){var a=(0,r.useMemo)((function(){var e=n.reactReduxForwardedRef,t=Ve(n,Ke);return[n.context,e,t]}),[n]),o=a[0],l=a[1],u=a[2],c=(0,r.useMemo)((function(){return o&&o.Consumer&&(0,Ye.isContextConsumer)(r.createElement(o.Consumer,null))?o:A}),[o,A]),f=(0,r.useContext)(c),p=Boolean(n.store)&&Boolean(n.store.getState)&&Boolean(n.store.dispatch);Boolean(f)&&Boolean(f.store);var m=p?n.store:f.store,g=(0,r.useMemo)((function(){return function(t){return e(t.dispatch,i)}(m)}),[m]),h=(0,r.useMemo)((function(){if(!d)return Ze;var e=We(m,p?null:f.subscription),t=e.notifyNestedSubs.bind(e);return[e,t]}),[m,p,f]),v=h[0],b=h[1],y=(0,r.useMemo)((function(){return p?f:ke({},f,{subscription:v})}),[p,f,v]),E=(0,r.useReducer)(et,Xe,at),w=E[0][0],C=E[1];if(w&&w.error)throw w.error;var x=(0,r.useRef)(),S=(0,r.useRef)(u),k=(0,r.useRef)(),D=(0,r.useRef)(!1),I=s((function(){return k.current&&u===S.current?k.current:g(m.getState(),u)}),[m,w,u]);tt(nt,[S,x,D,u,I,k,b]),tt(rt,[d,m,v,g,S,x,D,k,b,C],[m,v,g]);var P=(0,r.useMemo)((function(){return r.createElement(t,ke({},I,{ref:l}))}),[l,t,I]);return(0,r.useMemo)((function(){return d?r.createElement(c.Provider,{value:y},P):P}),[c,P,y])}var m=u?r.memo(f):f;if(m.WrappedComponent=t,m.displayName=f.displayName=a,g){var h=r.forwardRef((function(e,t){return r.createElement(m,ke({},e,{reactReduxForwardedRef:t}))}));return h.displayName=a,h.WrappedComponent=t,Qe()(h,t)}return Qe()(m,t)}}function it(e,t){return e===t?0!==e||0!==t||1/e==1/t:e!=e&&t!=t}function lt(e,t){if(it(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(var a=0;a<n.length;a++)if(!Object.prototype.hasOwnProperty.call(t,n[a])||!it(e[n[a]],t[n[a]]))return!1;return!0}function ut(e){return function(t,n){var r=e(t,n);function a(){return r}return a.dependsOnOwnProps=!1,a}}function ct(e){return null!==e.dependsOnOwnProps&&void 0!==e.dependsOnOwnProps?Boolean(e.dependsOnOwnProps):1!==e.length}function st(e,t){return function(t,n){n.displayName;var r=function(e,t){return r.dependsOnOwnProps?r.mapToProps(e,t):r.mapToProps(e)};return r.dependsOnOwnProps=!0,r.mapToProps=function(t,n){r.mapToProps=e,r.dependsOnOwnProps=ct(e);var a=r(t,n);return"function"==typeof a&&(r.mapToProps=a,r.dependsOnOwnProps=ct(a),a=r(t,n)),a},r}}const dt=[function(e){return"function"==typeof e?st(e):void 0},function(e){return e?void 0:ut((function(e){return{dispatch:e}}))},function(e){return e&&"object"==typeof e?ut((function(t){return function(e,t){var n={},r=function(r){var a=e[r];"function"==typeof a&&(n[r]=function(){return t(a.apply(void 0,arguments))})};for(var a in e)r(a);return n}(e,t)})):void 0}],ft=[function(e){return"function"==typeof e?st(e):void 0},function(e){return e?void 0:ut((function(){return{}}))}];function pt(e,t,n){return ke({},n,e,t)}const mt=[function(e){return"function"==typeof e?function(e){return function(t,n){n.displayName;var r,a=n.pure,o=n.areMergedPropsEqual,i=!1;return function(t,n,l){var u=e(t,n,l);return i?a&&o(u,r)||(r=u):(i=!0,r=u),r}}}(e):void 0},function(e){return e?void 0:function(){return pt}}];var gt=["initMapStateToProps","initMapDispatchToProps","initMergeProps"];function ht(e,t,n,r){return function(a,o){return n(e(a,o),t(r,o),o)}}function vt(e,t,n,r,a){var o,i,l,u,c,s=a.areStatesEqual,d=a.areOwnPropsEqual,f=a.areStatePropsEqual,p=!1;return function(a,m){return p?function(a,p){var m,g,h=!d(p,i),v=!s(a,o);return o=a,i=p,h&&v?(l=e(o,i),t.dependsOnOwnProps&&(u=t(r,i)),c=n(l,u,i)):h?(e.dependsOnOwnProps&&(l=e(o,i)),t.dependsOnOwnProps&&(u=t(r,i)),c=n(l,u,i)):v?(m=e(o,i),g=!f(m,l),l=m,g&&(c=n(l,u,i)),c):c}(a,m):(l=e(o=a,i=m),u=t(r,i),c=n(l,u,i),p=!0,c)}}function bt(e,t){var n=t.initMapStateToProps,r=t.initMapDispatchToProps,a=t.initMergeProps,o=Ve(t,gt),i=n(e,o),l=r(e,o),u=a(e,o);return(o.pure?vt:ht)(i,l,u,e,o)}var At=["pure","areStatesEqual","areOwnPropsEqual","areStatePropsEqual","areMergedPropsEqual"];function yt(e,t,n){for(var r=t.length-1;r>=0;r--){var a=t[r](e);if(a)return a}return function(t,r){throw new Error("Invalid value of type "+typeof e+" for "+n+" argument when connecting component "+r.wrappedComponentName+".")}}function Et(e,t){return e===t}function wt(e){var t=void 0===e?{}:e,n=t.connectHOC,r=void 0===n?ot:n,a=t.mapStateToPropsFactories,o=void 0===a?ft:a,i=t.mapDispatchToPropsFactories,l=void 0===i?dt:i,u=t.mergePropsFactories,c=void 0===u?mt:u,s=t.selectorFactory,d=void 0===s?bt:s;return function(e,t,n,a){void 0===a&&(a={});var i=a,u=i.pure,s=void 0===u||u,f=i.areStatesEqual,p=void 0===f?Et:f,m=i.areOwnPropsEqual,g=void 0===m?lt:m,h=i.areStatePropsEqual,v=void 0===h?lt:h,b=i.areMergedPropsEqual,A=void 0===b?lt:b,y=Ve(i,At),E=yt(e,o,"mapStateToProps"),w=yt(t,l,"mapDispatchToProps"),C=yt(n,c,"mergeProps");return r(d,ke({methodName:"connect",getDisplayName:function(e){return"Connect("+e+")"},shouldHandleStateChanges:Boolean(e),initMapStateToProps:E,initMapDispatchToProps:w,initMergeProps:C,pure:s,areStatesEqual:p,areOwnPropsEqual:g,areStatePropsEqual:v,areMergedPropsEqual:A},y))}}const Ct=wt();var xt,St=n(935);function kt(e,t){var n=(0,r.useState)((function(){return{inputs:t,result:e()}}))[0],a=(0,r.useRef)(!0),o=(0,r.useRef)(n),i=a.current||Boolean(t&&o.current.inputs&&function(e,t){if(e.length!==t.length)return!1;for(var n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}(t,o.current.inputs))?o.current:{inputs:t,result:e()};return(0,r.useEffect)((function(){a.current=!1,o.current=i}),[i]),i.result}xt=St.unstable_batchedUpdates,ze=xt;var Dt=kt,It=function(e,t){return kt((function(){return e}),t)},Pt=function(e){var t=e.top,n=e.right,r=e.bottom,a=e.left;return{top:t,right:n,bottom:r,left:a,width:n-a,height:r-t,x:a,y:t,center:{x:(n+a)/2,y:(r+t)/2}}},Bt=function(e,t){return{top:e.top-t.top,left:e.left-t.left,bottom:e.bottom+t.bottom,right:e.right+t.right}},Ot=function(e,t){return{top:e.top+t.top,left:e.left+t.left,bottom:e.bottom-t.bottom,right:e.right-t.right}},Nt={top:0,right:0,bottom:0,left:0},Rt=function(e){var t=e.borderBox,n=e.margin,r=void 0===n?Nt:n,a=e.border,o=void 0===a?Nt:a,i=e.padding,l=void 0===i?Nt:i,u=Pt(Bt(t,r)),c=Pt(Ot(t,o)),s=Pt(Ot(c,l));return{marginBox:u,borderBox:Pt(t),paddingBox:c,contentBox:s,margin:r,border:o,padding:l}},_t=function(e){var t=e.slice(0,-2);if("px"!==e.slice(-2))return 0;var n=Number(t);return isNaN(n)&&function(e,t){throw new Error("Invariant failed")}(),n},Tt=function(e,t){var n,r,a=e.borderBox,o=e.border,i=e.margin,l=e.padding,u=(r=t,{top:(n=a).top+r.y,left:n.left+r.x,bottom:n.bottom+r.y,right:n.right+r.x});return Rt({borderBox:u,border:o,margin:i,padding:l})},Ft=function(e,t){return void 0===t&&(t={x:window.pageXOffset,y:window.pageYOffset}),Tt(e,t)},jt=function(e,t){var n={top:_t(t.marginTop),right:_t(t.marginRight),bottom:_t(t.marginBottom),left:_t(t.marginLeft)},r={top:_t(t.paddingTop),right:_t(t.paddingRight),bottom:_t(t.paddingBottom),left:_t(t.paddingLeft)},a={top:_t(t.borderTopWidth),right:_t(t.borderRightWidth),bottom:_t(t.borderBottomWidth),left:_t(t.borderLeftWidth)};return Rt({borderBox:e,margin:n,padding:r,border:a})},Lt=function(e){var t=e.getBoundingClientRect(),n=window.getComputedStyle(e);return jt(t,n)},Mt=Number.isNaN||function(e){return"number"==typeof e&&e!=e};function zt(e,t){if(e.length!==t.length)return!1;for(var n=0;n<e.length;n++)if(!((r=e[n])===(a=t[n])||Mt(r)&&Mt(a)))return!1;var r,a;return!0}const Ut=function(e,t){var n;void 0===t&&(t=zt);var r,a=[],o=!1;return function(){for(var i=[],l=0;l<arguments.length;l++)i[l]=arguments[l];return o&&n===this&&t(i,a)||(r=e.apply(this,i),o=!0,n=this,a=i),r}},Gt=function(e){var t=[],n=null,r=function(){for(var r=arguments.length,a=new Array(r),o=0;o<r;o++)a[o]=arguments[o];t=a,n||(n=requestAnimationFrame((function(){n=null,e.apply(void 0,t)})))};return r.cancel=function(){n&&(cancelAnimationFrame(n),n=null)},r};function Wt(e,t){}function qt(){}function Ht(e,t,n){var r=t.map((function(t){var r,a,o=(r=n,a=t.options,ke({},r,{},a));return e.addEventListener(t.eventName,t.fn,o),function(){e.removeEventListener(t.eventName,t.fn,o)}}));return function(){r.forEach((function(e){e()}))}}Wt.bind(null,"warn"),Wt.bind(null,"error");function Vt(e){this.message=e}function $t(e,t){if(!e)throw new Vt("Invariant failed")}Vt.prototype.toString=function(){return this.message};var Qt=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),a=0;a<n;a++)r[a]=arguments[a];return(t=e.call.apply(e,[this].concat(r))||this).callbacks=null,t.unbind=qt,t.onWindowError=function(e){var n=t.getCallbacks();n.isDragging()&&n.tryAbort(),e.error instanceof Vt&&e.preventDefault()},t.getCallbacks=function(){if(!t.callbacks)throw new Error("Unable to find AppCallbacks in <ErrorBoundary/>");return t.callbacks},t.setCallbacks=function(e){t.callbacks=e},t}Se(t,e);var n=t.prototype;return n.componentDidMount=function(){this.unbind=Ht(window,[{eventName:"error",fn:this.onWindowError}])},n.componentDidCatch=function(e){if(!(e instanceof Vt))throw e;this.setState({})},n.componentWillUnmount=function(){this.unbind()},n.render=function(){return this.props.children(this.setCallbacks)},t}(r.Component),Yt=function(e){return e+1},Jt=function(e,t){var n=e.droppableId===t.droppableId,r=Yt(e.index),a=Yt(t.index);return n?"\n      You have moved the item from position "+r+"\n      to position "+a+"\n    ":"\n    You have moved the item from position "+r+"\n    in list "+e.droppableId+"\n    to list "+t.droppableId+"\n    in position "+a+"\n  "},Kt=function(e,t,n){return t.droppableId===n.droppableId?"\n      The item "+e+"\n      has been combined with "+n.draggableId:"\n      The item "+e+"\n      in list "+t.droppableId+"\n      has been combined with "+n.draggableId+"\n      in list "+n.droppableId+"\n    "},Xt=function(e){return"\n  The item has returned to its starting position\n  of "+Yt(e.index)+"\n"},Zt=function(e){return"\n  You have lifted an item in position "+Yt(e.source.index)+"\n"},en=function(e){var t=e.destination;if(t)return Jt(e.source,t);var n=e.combine;return n?Kt(e.draggableId,e.source,n):"You are over an area that cannot be dropped on"},tn=function(e){if("CANCEL"===e.reason)return"\n      Movement cancelled.\n      "+Xt(e.source)+"\n    ";var t=e.destination,n=e.combine;return t?"\n      You have dropped the item.\n      "+Jt(e.source,t)+"\n    ":n?"\n      You have dropped the item.\n      "+Kt(e.draggableId,e.source,n)+"\n    ":"\n    The item has been dropped while not over a drop area.\n    "+Xt(e.source)+"\n  "},nn={x:0,y:0},rn=function(e,t){return{x:e.x+t.x,y:e.y+t.y}},an=function(e,t){return{x:e.x-t.x,y:e.y-t.y}},on=function(e,t){return e.x===t.x&&e.y===t.y},ln=function(e){return{x:0!==e.x?-e.x:0,y:0!==e.y?-e.y:0}},un=function(e,t,n){var r;return void 0===n&&(n=0),(r={})[e]=t,r["x"===e?"y":"x"]=n,r},cn=function(e,t){return Math.sqrt(Math.pow(t.x-e.x,2)+Math.pow(t.y-e.y,2))},sn=function(e,t){return Math.min.apply(Math,t.map((function(t){return cn(e,t)})))},dn=function(e){return function(t){return{x:e(t.x),y:e(t.y)}}},fn=function(e,t){return{top:e.top+t.y,left:e.left+t.x,bottom:e.bottom+t.y,right:e.right+t.x}},pn=function(e){return[{x:e.left,y:e.top},{x:e.right,y:e.top},{x:e.left,y:e.bottom},{x:e.right,y:e.bottom}]},mn=function(e,t){return t&&t.shouldClipSubject?function(e,t){var n=Pt({top:Math.max(t.top,e.top),right:Math.min(t.right,e.right),bottom:Math.min(t.bottom,e.bottom),left:Math.max(t.left,e.left)});return n.width<=0||n.height<=0?null:n}(t.pageMarginBox,e):Pt(e)},gn=function(e){var t=e.page,n=e.withPlaceholder,r=e.axis,a=e.frame,o=function(e,t){return t?fn(e,t.scroll.diff.displacement):e}(t.marginBox,a),i=function(e,t,n){var r;return n&&n.increasedBy?ke({},e,((r={})[t.end]=e[t.end]+n.increasedBy[t.line],r)):e}(o,r,n);return{page:t,withPlaceholder:n,active:mn(i,a)}},hn=function(e,t){e.frame||$t(!1);var n=e.frame,r=an(t,n.scroll.initial),a=ln(r),o=ke({},n,{scroll:{initial:n.scroll.initial,current:t,diff:{value:r,displacement:a},max:n.scroll.max}});return ke({},e,{frame:o,subject:gn({page:e.subject.page,withPlaceholder:e.subject.withPlaceholder,axis:e.axis,frame:o})})};function vn(e){return Object.values?Object.values(e):Object.keys(e).map((function(t){return e[t]}))}function bn(e,t){if(e.findIndex)return e.findIndex(t);for(var n=0;n<e.length;n++)if(t(e[n]))return n;return-1}function An(e,t){if(e.find)return e.find(t);var n=bn(e,t);return-1!==n?e[n]:void 0}function yn(e){return Array.prototype.slice.call(e)}var En=Ut((function(e){return e.reduce((function(e,t){return e[t.descriptor.id]=t,e}),{})})),wn=Ut((function(e){return e.reduce((function(e,t){return e[t.descriptor.id]=t,e}),{})})),Cn=Ut((function(e){return vn(e)})),xn=Ut((function(e){return vn(e)})),Sn=Ut((function(e,t){var n=xn(t).filter((function(t){return e===t.descriptor.droppableId})).sort((function(e,t){return e.descriptor.index-t.descriptor.index}));return n}));function kn(e){return e.at&&"REORDER"===e.at.type?e.at.destination:null}function Dn(e){return e.at&&"COMBINE"===e.at.type?e.at.combine:null}var In=Ut((function(e,t){return t.filter((function(t){return t.descriptor.id!==e.descriptor.id}))})),Pn=function(e,t){return e.descriptor.droppableId===t.descriptor.id},Bn={point:nn,value:0},On={invisible:{},visible:{},all:[]},Nn={displaced:On,displacedBy:Bn,at:null},Rn=function(e,t){return function(n){return e<=n&&n<=t}},_n=function(e){var t=Rn(e.top,e.bottom),n=Rn(e.left,e.right);return function(r){if(t(r.top)&&t(r.bottom)&&n(r.left)&&n(r.right))return!0;var a=t(r.top)||t(r.bottom),o=n(r.left)||n(r.right);if(a&&o)return!0;var i=r.top<e.top&&r.bottom>e.bottom,l=r.left<e.left&&r.right>e.right;return!(!i||!l)||i&&o||l&&a}},Tn=function(e){var t=Rn(e.top,e.bottom),n=Rn(e.left,e.right);return function(e){return t(e.top)&&t(e.bottom)&&n(e.left)&&n(e.right)}},Fn={direction:"vertical",line:"y",crossAxisLine:"x",start:"top",end:"bottom",size:"height",crossAxisStart:"left",crossAxisEnd:"right",crossAxisSize:"width"},jn={direction:"horizontal",line:"x",crossAxisLine:"y",start:"left",end:"right",size:"width",crossAxisStart:"top",crossAxisEnd:"bottom",crossAxisSize:"height"},Ln=function(e){var t=e.target,n=e.destination,r=e.viewport,a=e.withDroppableDisplacement,o=e.isVisibleThroughFrameFn,i=a?function(e,t){var n=t.frame?t.frame.scroll.diff.displacement:nn;return fn(e,n)}(t,n):t;return function(e,t,n){return!!t.subject.active&&n(t.subject.active)(e)}(i,n,o)&&function(e,t,n){return n(t)(e)}(i,r,o)},Mn=function(e){return Ln(ke({},e,{isVisibleThroughFrameFn:Tn}))};function zn(e){var t=e.afterDragging,n=e.destination,r=e.displacedBy,a=e.viewport,o=e.forceShouldAnimate,i=e.last;return t.reduce((function(e,t){var l=function(e,t){var n=e.page.marginBox,r={top:t.point.y,right:0,bottom:0,left:t.point.x};return Pt(Bt(n,r))}(t,r),u=t.descriptor.id;if(e.all.push(u),!Ln(ke({},{target:l,destination:n,viewport:a,withDroppableDisplacement:!0},{isVisibleThroughFrameFn:_n})))return e.invisible[t.descriptor.id]=!0,e;var c=function(e,t,n){if("boolean"==typeof n)return n;if(!t)return!0;var r=t.invisible,a=t.visible;if(r[e])return!1;var o=a[e];return!o||o.shouldAnimate}(u,i,o),s={draggableId:u,shouldAnimate:c};return e.visible[u]=s,e}),{all:[],visible:{},invisible:{}})}function Un(e){var t=e.insideDestination,n=e.inHomeList,r=e.displacedBy,a=e.destination,o=function(e,t){if(!e.length)return 0;var n=e[e.length-1].descriptor.index;return t.inHomeList?n:n+1}(t,{inHomeList:n});return{displaced:On,displacedBy:r,at:{type:"REORDER",destination:{droppableId:a.descriptor.id,index:o}}}}function Gn(e){var t=e.draggable,n=e.insideDestination,r=e.destination,a=e.viewport,o=e.displacedBy,i=e.last,l=e.index,u=e.forceShouldAnimate,c=Pn(t,r);if(null==l)return Un({insideDestination:n,inHomeList:c,displacedBy:o,destination:r});var s=An(n,(function(e){return e.descriptor.index===l}));if(!s)return Un({insideDestination:n,inHomeList:c,displacedBy:o,destination:r});var d=In(t,n),f=n.indexOf(s);return{displaced:zn({afterDragging:d.slice(f),destination:r,displacedBy:o,last:i,viewport:a.frame,forceShouldAnimate:u}),displacedBy:o,at:{type:"REORDER",destination:{droppableId:r.descriptor.id,index:l}}}}function Wn(e,t){return Boolean(t.effected[e])}var qn=function(e,t){return t.margin[e.start]+t.borderBox[e.size]/2},Hn=function(e,t,n){return t[e.crossAxisStart]+n.margin[e.crossAxisStart]+n.borderBox[e.crossAxisSize]/2},Vn=function(e){var t=e.axis,n=e.moveRelativeTo,r=e.isMoving;return un(t.line,n.marginBox[t.end]+qn(t,r),Hn(t,n.marginBox,r))},$n=function(e){var t=e.axis,n=e.moveRelativeTo,r=e.isMoving;return un(t.line,n.marginBox[t.start]-function(e,t){return t.margin[e.end]+t.borderBox[e.size]/2}(t,r),Hn(t,n.marginBox,r))},Qn=function(e,t){var n=e.frame;return n?rn(t,n.scroll.diff.displacement):t},Yn=function(e){var t=function(e){var t=e.impact,n=e.draggable,r=e.droppable,a=e.draggables,o=e.afterCritical,i=n.page.borderBox.center,l=t.at;return r&&l?"REORDER"===l.type?function(e){var t=e.impact,n=e.draggable,r=e.draggables,a=e.droppable,o=e.afterCritical,i=Sn(a.descriptor.id,r),l=n.page,u=a.axis;if(!i.length)return function(e){var t=e.axis,n=e.moveInto,r=e.isMoving;return un(t.line,n.contentBox[t.start]+qn(t,r),Hn(t,n.contentBox,r))}({axis:u,moveInto:a.page,isMoving:l});var c=t.displaced,s=t.displacedBy,d=c.all[0];if(d){var f=r[d];if(Wn(d,o))return $n({axis:u,moveRelativeTo:f.page,isMoving:l});var p=Tt(f.page,s.point);return $n({axis:u,moveRelativeTo:p,isMoving:l})}var m=i[i.length-1];if(m.descriptor.id===n.descriptor.id)return l.borderBox.center;if(Wn(m.descriptor.id,o)){var g=Tt(m.page,ln(o.displacedBy.point));return Vn({axis:u,moveRelativeTo:g,isMoving:l})}return Vn({axis:u,moveRelativeTo:m.page,isMoving:l})}({impact:t,draggable:n,draggables:a,droppable:r,afterCritical:o}):function(e){var t=e.afterCritical,n=e.impact,r=e.draggables,a=Dn(n);a||$t(!1);var o=a.draggableId,i=r[o].page.borderBox.center,l=function(e){var t=e.displaced,n=e.afterCritical,r=e.combineWith,a=e.displacedBy,o=Boolean(t.visible[r]||t.invisible[r]);return Wn(r,n)?o?nn:ln(a.point):o?a.point:nn}({displaced:n.displaced,afterCritical:t,combineWith:o,displacedBy:n.displacedBy});return rn(i,l)}({impact:t,draggables:a,afterCritical:o}):i}(e),n=e.droppable;return n?Qn(n,t):t},Jn=function(e,t){var n=an(t,e.scroll.initial),r=ln(n);return{frame:Pt({top:t.y,bottom:t.y+e.frame.height,left:t.x,right:t.x+e.frame.width}),scroll:{initial:e.scroll.initial,max:e.scroll.max,current:t,diff:{value:n,displacement:r}}}};function Kn(e,t){return e.map((function(e){return t[e]}))}var Xn=function(e){var t,n,r=e.pageBorderBoxCenter,a=e.draggable,o=(t=e.viewport,n=r,rn(t.scroll.diff.displacement,n)),i=an(o,a.page.borderBox.center);return rn(a.client.borderBox.center,i)},Zn=function(e){var t=e.draggable,n=e.destination,r=e.newPageBorderBoxCenter,a=e.viewport,o=e.withDroppableDisplacement,i=e.onlyOnMainAxis,l=void 0!==i&&i,u=an(r,t.page.borderBox.center),c={target:fn(t.page.borderBox,u),destination:n,withDroppableDisplacement:o,viewport:a};return l?function(e){return Ln(ke({},e,{isVisibleThroughFrameFn:(t=e.destination.axis,function(e){var n=Rn(e.top,e.bottom),r=Rn(e.left,e.right);return function(e){return t===Fn?n(e.top)&&n(e.bottom):r(e.left)&&r(e.right)}})}));var t}(c):Mn(c)},er=function(e){var t=e.isMovingForward,n=e.draggable,r=e.destination,a=e.draggables,o=e.previousImpact,i=e.viewport,l=e.previousPageBorderBoxCenter,u=e.previousClientSelection,c=e.afterCritical;if(!r.isEnabled)return null;var s=Sn(r.descriptor.id,a),d=Pn(n,r),f=function(e){var t=e.isMovingForward,n=e.draggable,r=e.destination,a=e.insideDestination,o=e.previousImpact;if(!r.isCombineEnabled)return null;if(!kn(o))return null;function i(e){var t={type:"COMBINE",combine:{draggableId:e,droppableId:r.descriptor.id}};return ke({},o,{at:t})}var l=o.displaced.all,u=l.length?l[0]:null;if(t)return u?i(u):null;var c=In(n,a);if(!u)return c.length?i(c[c.length-1].descriptor.id):null;var s=bn(c,(function(e){return e.descriptor.id===u}));-1===s&&$t(!1);var d=s-1;return d<0?null:i(c[d].descriptor.id)}({isMovingForward:t,draggable:n,destination:r,insideDestination:s,previousImpact:o})||function(e){var t=e.isMovingForward,n=e.isInHomeList,r=e.draggable,a=e.draggables,o=e.destination,i=e.insideDestination,l=e.previousImpact,u=e.viewport,c=e.afterCritical,s=l.at;if(s||$t(!1),"REORDER"===s.type){var d=function(e){var t=e.isMovingForward,n=e.isInHomeList,r=e.insideDestination,a=e.location;if(!r.length)return null;var o=a.index,i=t?o+1:o-1,l=r[0].descriptor.index,u=r[r.length-1].descriptor.index;return i<l||i>(n?u:u+1)?null:i}({isMovingForward:t,isInHomeList:n,location:s.destination,insideDestination:i});return null==d?null:Gn({draggable:r,insideDestination:i,destination:o,viewport:u,last:l.displaced,displacedBy:l.displacedBy,index:d})}var f=function(e){var t=e.isMovingForward,n=e.draggables,r=e.combine,a=e.afterCritical;if(!e.destination.isCombineEnabled)return null;var o=r.draggableId,i=n[o].descriptor.index;return Wn(o,a)?t?i:i-1:t?i+1:i}({isMovingForward:t,destination:o,displaced:l.displaced,draggables:a,combine:s.combine,afterCritical:c});return null==f?null:Gn({draggable:r,insideDestination:i,destination:o,viewport:u,last:l.displaced,displacedBy:l.displacedBy,index:f})}({isMovingForward:t,isInHomeList:d,draggable:n,draggables:a,destination:r,insideDestination:s,previousImpact:o,viewport:i,afterCritical:c});if(!f)return null;var p=Yn({impact:f,draggable:n,droppable:r,draggables:a,afterCritical:c});if(Zn({draggable:n,destination:r,newPageBorderBoxCenter:p,viewport:i.frame,withDroppableDisplacement:!1,onlyOnMainAxis:!0}))return{clientSelection:Xn({pageBorderBoxCenter:p,draggable:n,viewport:i}),impact:f,scrollJumpRequest:null};var m=an(p,l),g=function(e){var t=e.impact,n=e.viewport,r=e.destination,a=e.draggables,o=e.maxScrollChange,i=Jn(n,rn(n.scroll.current,o)),l=r.frame?hn(r,rn(r.frame.scroll.current,o)):r,u=t.displaced,c=zn({afterDragging:Kn(u.all,a),destination:r,displacedBy:t.displacedBy,viewport:i.frame,last:u,forceShouldAnimate:!1}),s=zn({afterDragging:Kn(u.all,a),destination:l,displacedBy:t.displacedBy,viewport:n.frame,last:u,forceShouldAnimate:!1}),d={},f={},p=[u,c,s];return u.all.forEach((function(e){var t=function(e,t){for(var n=0;n<t.length;n++){var r=t[n].visible[e];if(r)return r}return null}(e,p);t?f[e]=t:d[e]=!0})),ke({},t,{displaced:{all:u.all,invisible:d,visible:f}})}({impact:f,viewport:i,destination:r,draggables:a,maxScrollChange:m});return{clientSelection:u,impact:g,scrollJumpRequest:m}},tr=function(e){var t=e.subject.active;return t||$t(!1),t},nr=function(e,t){var n=e.page.borderBox.center;return Wn(e.descriptor.id,t)?an(n,t.displacedBy.point):n},rr=function(e,t){var n=e.page.borderBox;return Wn(e.descriptor.id,t)?fn(n,ln(t.displacedBy.point)):n},ar=Ut((function(e,t){var n=t[e.line];return{value:n,point:un(e.line,n)}})),or=function(e,t){return ke({},e,{scroll:ke({},e.scroll,{max:t})})},ir=function(e,t,n){var r=e.frame;Pn(t,e)&&$t(!1),e.subject.withPlaceholder&&$t(!1);var a=ar(e.axis,t.displaceBy).point,o=function(e,t,n){var r=e.axis;if("virtual"===e.descriptor.mode)return un(r.line,t[r.line]);var a=e.subject.page.contentBox[r.size],o=Sn(e.descriptor.id,n).reduce((function(e,t){return e+t.client.marginBox[r.size]}),0)+t[r.line]-a;return o<=0?null:un(r.line,o)}(e,a,n),i={placeholderSize:a,increasedBy:o,oldFrameMaxScroll:e.frame?e.frame.scroll.max:null};if(!r)return ke({},e,{subject:gn({page:e.subject.page,withPlaceholder:i,axis:e.axis,frame:e.frame})});var l=o?rn(r.scroll.max,o):r.scroll.max,u=or(r,l);return ke({},e,{subject:gn({page:e.subject.page,withPlaceholder:i,axis:e.axis,frame:u}),frame:u})},lr=function(e){var t=e.at;return t?"REORDER"===t.type?t.destination.droppableId:t.combine.droppableId:null},ur=function(e){var t=e.state,n=e.type,r=function(e,t){var n=lr(e);return n?t[n]:null}(t.impact,t.dimensions.droppables),a=Boolean(r),o=t.dimensions.droppables[t.critical.droppable.id],i=r||o,l=i.axis.direction,u="vertical"===l&&("MOVE_UP"===n||"MOVE_DOWN"===n)||"horizontal"===l&&("MOVE_LEFT"===n||"MOVE_RIGHT"===n);if(u&&!a)return null;var c="MOVE_DOWN"===n||"MOVE_RIGHT"===n,s=t.dimensions.draggables[t.critical.draggable.id],d=t.current.page.borderBoxCenter,f=t.dimensions,p=f.draggables,m=f.droppables;return u?er({isMovingForward:c,previousPageBorderBoxCenter:d,draggable:s,destination:i,draggables:p,viewport:t.viewport,previousClientSelection:t.current.client.selection,previousImpact:t.impact,afterCritical:t.afterCritical}):function(e){var t=e.isMovingForward,n=e.previousPageBorderBoxCenter,r=e.draggable,a=e.isOver,o=e.draggables,i=e.droppables,l=e.viewport,u=e.afterCritical,c=function(e){var t=e.isMovingForward,n=e.pageBorderBoxCenter,r=e.source,a=e.droppables,o=e.viewport,i=r.subject.active;if(!i)return null;var l=r.axis,u=Rn(i[l.start],i[l.end]),c=Cn(a).filter((function(e){return e!==r})).filter((function(e){return e.isEnabled})).filter((function(e){return Boolean(e.subject.active)})).filter((function(e){return _n(o.frame)(tr(e))})).filter((function(e){var n=tr(e);return t?i[l.crossAxisEnd]<n[l.crossAxisEnd]:n[l.crossAxisStart]<i[l.crossAxisStart]})).filter((function(e){var t=tr(e),n=Rn(t[l.start],t[l.end]);return u(t[l.start])||u(t[l.end])||n(i[l.start])||n(i[l.end])})).sort((function(e,n){var r=tr(e)[l.crossAxisStart],a=tr(n)[l.crossAxisStart];return t?r-a:a-r})).filter((function(e,t,n){return tr(e)[l.crossAxisStart]===tr(n[0])[l.crossAxisStart]}));if(!c.length)return null;if(1===c.length)return c[0];var s=c.filter((function(e){return Rn(tr(e)[l.start],tr(e)[l.end])(n[l.line])}));return 1===s.length?s[0]:s.length>1?s.sort((function(e,t){return tr(e)[l.start]-tr(t)[l.start]}))[0]:c.sort((function(e,t){var r=sn(n,pn(tr(e))),a=sn(n,pn(tr(t)));return r!==a?r-a:tr(e)[l.start]-tr(t)[l.start]}))[0]}({isMovingForward:t,pageBorderBoxCenter:n,source:a,droppables:i,viewport:l});if(!c)return null;var s=Sn(c.descriptor.id,o),d=function(e){var t=e.pageBorderBoxCenter,n=e.viewport,r=e.destination,a=e.afterCritical,o=e.insideDestination.filter((function(e){return Mn({target:rr(e,a),destination:r,viewport:n.frame,withDroppableDisplacement:!0})})).sort((function(e,n){var o=cn(t,Qn(r,nr(e,a))),i=cn(t,Qn(r,nr(n,a)));return o<i?-1:i<o?1:e.descriptor.index-n.descriptor.index}));return o[0]||null}({pageBorderBoxCenter:n,viewport:l,destination:c,insideDestination:s,afterCritical:u}),f=function(e){var t=e.previousPageBorderBoxCenter,n=e.moveRelativeTo,r=e.insideDestination,a=e.draggable,o=e.draggables,i=e.destination,l=e.viewport,u=e.afterCritical;if(!n){if(r.length)return null;var c={displaced:On,displacedBy:Bn,at:{type:"REORDER",destination:{droppableId:i.descriptor.id,index:0}}},s=Yn({impact:c,draggable:a,droppable:i,draggables:o,afterCritical:u}),d=Pn(a,i)?i:ir(i,a,o);return Zn({draggable:a,destination:d,newPageBorderBoxCenter:s,viewport:l.frame,withDroppableDisplacement:!1,onlyOnMainAxis:!0})?c:null}var f,p=Boolean(t[i.axis.line]<=n.page.borderBox.center[i.axis.line]),m=(f=n.descriptor.index,n.descriptor.id===a.descriptor.id||p?f:f+1);return Gn({draggable:a,insideDestination:r,destination:i,viewport:l,displacedBy:ar(i.axis,a.displaceBy),last:On,index:m})}({previousPageBorderBoxCenter:n,destination:c,draggable:r,draggables:o,moveRelativeTo:d,insideDestination:s,viewport:l,afterCritical:u});if(!f)return null;var p=Yn({impact:f,draggable:r,droppable:c,draggables:o,afterCritical:u});return{clientSelection:Xn({pageBorderBoxCenter:p,draggable:r,viewport:l}),impact:f,scrollJumpRequest:null}}({isMovingForward:c,previousPageBorderBoxCenter:d,draggable:s,isOver:i,draggables:p,droppables:m,viewport:t.viewport,afterCritical:t.afterCritical})};function cr(e){return"DRAGGING"===e.phase||"COLLECTING"===e.phase}function sr(e){var t=Rn(e.top,e.bottom),n=Rn(e.left,e.right);return function(e){return t(e.y)&&n(e.x)}}var dr=function(e,t){return Pt(fn(e,t))};function fr(e){var t=e.displaced,n=e.id;return Boolean(t.visible[n]||t.invisible[n])}var pr=function(e){var t=e.pageOffset,n=e.draggable,r=e.draggables,a=e.droppables,o=e.previousImpact,i=e.viewport,l=e.afterCritical,u=dr(n.page.borderBox,t),c=function(e){var t=e.pageBorderBox,n=e.draggable,r=e.droppables,a=Cn(r).filter((function(e){if(!e.isEnabled)return!1;var n,r,a=e.subject.active;if(!a)return!1;if(r=a,!((n=t).left<r.right&&n.right>r.left&&n.top<r.bottom&&n.bottom>r.top))return!1;if(sr(a)(t.center))return!0;var o=e.axis,i=a.center[o.crossAxisLine],l=t[o.crossAxisStart],u=t[o.crossAxisEnd],c=Rn(a[o.crossAxisStart],a[o.crossAxisEnd]),s=c(l),d=c(u);return!s&&!d||(s?l<i:u>i)}));return a.length?1===a.length?a[0].descriptor.id:function(e){var t=e.pageBorderBox,n=e.candidates,r=e.draggable.page.borderBox.center,a=n.map((function(e){var n=e.axis,a=un(e.axis.line,t.center[n.line],e.page.borderBox.center[n.crossAxisLine]);return{id:e.descriptor.id,distance:cn(r,a)}})).sort((function(e,t){return t.distance-e.distance}));return a[0]?a[0].id:null}({pageBorderBox:t,draggable:n,candidates:a}):null}({pageBorderBox:u,draggable:n,droppables:a});if(!c)return Nn;var s=a[c],d=Sn(s.descriptor.id,r),f=function(e,t){var n=e.frame;return n?dr(t,n.scroll.diff.value):t}(s,u);return function(e){var t=e.draggable,n=e.pageBorderBoxWithDroppableScroll,r=e.previousImpact,a=e.destination,o=e.insideDestination,i=e.afterCritical;if(!a.isCombineEnabled)return null;var l=a.axis,u=ar(a.axis,t.displaceBy),c=u.value,s=n[l.start],d=n[l.end],f=An(In(t,o),(function(e){var t=e.descriptor.id,n=e.page.borderBox,a=n[l.size]/4,o=Wn(t,i),u=fr({displaced:r.displaced,id:t});return o?u?d>n[l.start]+a&&d<n[l.end]-a:s>n[l.start]-c+a&&s<n[l.end]-c-a:u?d>n[l.start]+c+a&&d<n[l.end]+c-a:s>n[l.start]+a&&s<n[l.end]-a}));return f?{displacedBy:u,displaced:r.displaced,at:{type:"COMBINE",combine:{draggableId:f.descriptor.id,droppableId:a.descriptor.id}}}:null}({pageBorderBoxWithDroppableScroll:f,draggable:n,previousImpact:o,destination:s,insideDestination:d,afterCritical:l})||function(e){var t=e.pageBorderBoxWithDroppableScroll,n=e.draggable,r=e.destination,a=e.insideDestination,o=e.last,i=e.viewport,l=e.afterCritical,u=r.axis,c=ar(r.axis,n.displaceBy),s=c.value,d=t[u.start],f=t[u.end],p=function(e){var t=e.draggable,n=e.closest;return n?e.inHomeList&&n.descriptor.index>t.descriptor.index?n.descriptor.index-1:n.descriptor.index:null}({draggable:n,closest:An(In(n,a),(function(e){var t=e.descriptor.id,n=e.page.borderBox.center[u.line],r=Wn(t,l),a=fr({displaced:o,id:t});return r?a?f<=n:d<n-s:a?f<=n+s:d<n})),inHomeList:Pn(n,r)});return Gn({draggable:n,insideDestination:a,destination:r,viewport:i,last:o,displacedBy:c,index:p})}({pageBorderBoxWithDroppableScroll:f,draggable:n,destination:s,insideDestination:d,last:o.displaced,viewport:i,afterCritical:l})},mr=function(e,t){var n;return ke({},e,((n={})[t.descriptor.id]=t,n))},gr=function(e){var t=e.state,n=e.clientSelection,r=e.dimensions,a=e.viewport,o=e.impact,i=e.scrollJumpRequest,l=a||t.viewport,u=r||t.dimensions,c=n||t.current.client.selection,s=an(c,t.initial.client.selection),d={offset:s,selection:c,borderBoxCenter:rn(t.initial.client.borderBoxCenter,s)},f={selection:rn(d.selection,l.scroll.current),borderBoxCenter:rn(d.borderBoxCenter,l.scroll.current),offset:rn(d.offset,l.scroll.diff.value)},p={client:d,page:f};if("COLLECTING"===t.phase)return ke({phase:"COLLECTING"},t,{dimensions:u,viewport:l,current:p});var m=u.draggables[t.critical.draggable.id],g=o||pr({pageOffset:f.offset,draggable:m,draggables:u.draggables,droppables:u.droppables,previousImpact:t.impact,viewport:l,afterCritical:t.afterCritical}),h=function(e){var t=e.draggable,n=e.draggables,r=e.droppables,a=e.impact,o=function(e){var t=e.previousImpact,n=e.impact,r=e.droppables,a=lr(t),o=lr(n);if(!a)return r;if(a===o)return r;var i=r[a];if(!i.subject.withPlaceholder)return r;var l=function(e){var t=e.subject.withPlaceholder;t||$t(!1);var n=e.frame;if(!n)return ke({},e,{subject:gn({page:e.subject.page,axis:e.axis,frame:null,withPlaceholder:null})});var r=t.oldFrameMaxScroll;r||$t(!1);var a=or(n,r);return ke({},e,{subject:gn({page:e.subject.page,axis:e.axis,frame:a,withPlaceholder:null}),frame:a})}(i);return mr(r,l)}({previousImpact:e.previousImpact,impact:a,droppables:r}),i=lr(a);if(!i)return o;var l=r[i];if(Pn(t,l))return o;if(l.subject.withPlaceholder)return o;var u=ir(l,t,n);return mr(o,u)}({draggable:m,impact:g,previousImpact:t.impact,draggables:u.draggables,droppables:u.droppables});return ke({},t,{current:p,dimensions:{draggables:u.draggables,droppables:h},impact:g,viewport:l,scrollJumpRequest:i||null,forceShouldAnimate:!i&&null})},hr=function(e){var t=e.impact,n=e.viewport,r=e.draggables,a=e.destination,o=e.forceShouldAnimate,i=t.displaced,l=function(e,t){return e.map((function(e){return t[e]}))}(i.all,r);return ke({},t,{displaced:zn({afterDragging:l,destination:a,displacedBy:t.displacedBy,viewport:n.frame,forceShouldAnimate:o,last:i})})},vr=function(e){var t=e.impact,n=e.draggable,r=e.droppable,a=e.draggables,o=e.viewport,i=e.afterCritical,l=Yn({impact:t,draggable:n,draggables:a,droppable:r,afterCritical:i});return Xn({pageBorderBoxCenter:l,draggable:n,viewport:o})},br=function(e){var t=e.state,n=e.dimensions,r=e.viewport;"SNAP"!==t.movementMode&&$t(!1);var a=t.impact,o=r||t.viewport,i=n||t.dimensions,l=i.draggables,u=i.droppables,c=l[t.critical.draggable.id],s=lr(a);s||$t(!1);var d=u[s],f=hr({impact:a,viewport:o,destination:d,draggables:l}),p=vr({impact:f,draggable:c,droppable:d,draggables:l,viewport:o,afterCritical:t.afterCritical});return gr({impact:f,clientSelection:p,state:t,dimensions:i,viewport:o})},Ar=function(e){var t=e.draggable,n=e.home,r=e.draggables,a=e.viewport,o=ar(n.axis,t.displaceBy),i=Sn(n.descriptor.id,r),l=i.indexOf(t);-1===l&&$t(!1);var u,c=i.slice(l+1),s=c.reduce((function(e,t){return e[t.descriptor.id]=!0,e}),{}),d={inVirtualList:"virtual"===n.descriptor.mode,displacedBy:o,effected:s};return{impact:{displaced:zn({afterDragging:c,destination:n,displacedBy:o,last:null,viewport:a.frame,forceShouldAnimate:!1}),displacedBy:o,at:{type:"REORDER",destination:(u=t.descriptor,{index:u.index,droppableId:u.droppableId})}},afterCritical:d}},yr=function(e){return"SNAP"===e.movementMode},Er=function(e,t,n){var r=function(e,t){return{draggables:e.draggables,droppables:mr(e.droppables,t)}}(e.dimensions,t);return!yr(e)||n?gr({state:e,dimensions:r}):br({state:e,dimensions:r})};function wr(e){return e.isDragging&&"SNAP"===e.movementMode?ke({phase:"DRAGGING"},e,{scrollJumpRequest:null}):e}var Cr={phase:"IDLE",completed:null,shouldFlush:!1},xr=function(e,t){if(void 0===e&&(e=Cr),"FLUSH"===t.type)return ke({},Cr,{shouldFlush:!0});if("INITIAL_PUBLISH"===t.type){"IDLE"!==e.phase&&$t(!1);var n=t.payload,r=n.critical,a=n.clientSelection,o=n.viewport,i=n.dimensions,l=n.movementMode,u=i.draggables[r.draggable.id],c=i.droppables[r.droppable.id],s={selection:a,borderBoxCenter:u.client.borderBox.center,offset:nn},d={client:s,page:{selection:rn(s.selection,o.scroll.initial),borderBoxCenter:rn(s.selection,o.scroll.initial),offset:rn(s.selection,o.scroll.diff.value)}},f=Cn(i.droppables).every((function(e){return!e.isFixedOnPage})),p=Ar({draggable:u,home:c,draggables:i.draggables,viewport:o}),m=p.impact;return{phase:"DRAGGING",isDragging:!0,critical:r,movementMode:l,dimensions:i,initial:d,current:d,isWindowScrollAllowed:f,impact:m,afterCritical:p.afterCritical,onLiftImpact:m,viewport:o,scrollJumpRequest:null,forceShouldAnimate:null}}if("COLLECTION_STARTING"===t.type)return"COLLECTING"===e.phase||"DROP_PENDING"===e.phase?e:("DRAGGING"!==e.phase&&$t(!1),ke({phase:"COLLECTING"},e,{phase:"COLLECTING"}));if("PUBLISH_WHILE_DRAGGING"===t.type)return"COLLECTING"!==e.phase&&"DROP_PENDING"!==e.phase&&$t(!1),function(e){var t=e.state,n=e.published,r=n.modified.map((function(e){var n=t.dimensions.droppables[e.droppableId];return hn(n,e.scroll)})),a=ke({},t.dimensions.droppables,{},En(r)),o=wn(function(e){var t=e.additions,n=e.updatedDroppables,r=e.viewport,a=r.scroll.diff.value;return t.map((function(e){var t=e.descriptor.droppableId,o=function(e){var t=e.frame;return t||$t(!1),t}(n[t]),i=o.scroll.diff.value,l=function(e){var t=e.draggable,n=e.offset,r=e.initialWindowScroll,a=Tt(t.client,n),o=Ft(a,r);return ke({},t,{placeholder:ke({},t.placeholder,{client:a}),client:a,page:o})}({draggable:e,offset:rn(a,i),initialWindowScroll:r.scroll.initial});return l}))}({additions:n.additions,updatedDroppables:a,viewport:t.viewport})),i=ke({},t.dimensions.draggables,{},o);n.removals.forEach((function(e){delete i[e]}));var l={droppables:a,draggables:i},u=lr(t.impact),c=u?l.droppables[u]:null,s=l.draggables[t.critical.draggable.id],d=l.droppables[t.critical.droppable.id],f=Ar({draggable:s,home:d,draggables:i,viewport:t.viewport}),p=f.impact,m=f.afterCritical,g=c&&c.isCombineEnabled?t.impact:p,h=pr({pageOffset:t.current.page.offset,draggable:l.draggables[t.critical.draggable.id],draggables:l.draggables,droppables:l.droppables,previousImpact:g,viewport:t.viewport,afterCritical:m}),v=ke({phase:"DRAGGING"},t,{phase:"DRAGGING",impact:h,onLiftImpact:p,dimensions:l,afterCritical:m,forceShouldAnimate:!1});return"COLLECTING"===t.phase?v:ke({phase:"DROP_PENDING"},v,{phase:"DROP_PENDING",reason:t.reason,isWaiting:!1})}({state:e,published:t.payload});if("MOVE"===t.type){if("DROP_PENDING"===e.phase)return e;cr(e)||$t(!1);var g=t.payload.client;return on(g,e.current.client.selection)?e:gr({state:e,clientSelection:g,impact:yr(e)?e.impact:null})}if("UPDATE_DROPPABLE_SCROLL"===t.type){if("DROP_PENDING"===e.phase)return wr(e);if("COLLECTING"===e.phase)return wr(e);cr(e)||$t(!1);var h=t.payload,v=h.id,b=h.newScroll,A=e.dimensions.droppables[v];if(!A)return e;var y=hn(A,b);return Er(e,y,!1)}if("UPDATE_DROPPABLE_IS_ENABLED"===t.type){if("DROP_PENDING"===e.phase)return e;cr(e)||$t(!1);var E=t.payload,w=E.id,C=E.isEnabled,x=e.dimensions.droppables[w];x||$t(!1),x.isEnabled===C&&$t(!1);var S=ke({},x,{isEnabled:C});return Er(e,S,!0)}if("UPDATE_DROPPABLE_IS_COMBINE_ENABLED"===t.type){if("DROP_PENDING"===e.phase)return e;cr(e)||$t(!1);var k=t.payload,D=k.id,I=k.isCombineEnabled,P=e.dimensions.droppables[D];P||$t(!1),P.isCombineEnabled===I&&$t(!1);var B=ke({},P,{isCombineEnabled:I});return Er(e,B,!0)}if("MOVE_BY_WINDOW_SCROLL"===t.type){if("DROP_PENDING"===e.phase||"DROP_ANIMATING"===e.phase)return e;cr(e)||$t(!1),e.isWindowScrollAllowed||$t(!1);var O=t.payload.newScroll;if(on(e.viewport.scroll.current,O))return wr(e);var N=Jn(e.viewport,O);return yr(e)?br({state:e,viewport:N}):gr({state:e,viewport:N})}if("UPDATE_VIEWPORT_MAX_SCROLL"===t.type){if(!cr(e))return e;var R=t.payload.maxScroll;if(on(R,e.viewport.scroll.max))return e;var _=ke({},e.viewport,{scroll:ke({},e.viewport.scroll,{max:R})});return ke({phase:"DRAGGING"},e,{viewport:_})}if("MOVE_UP"===t.type||"MOVE_DOWN"===t.type||"MOVE_LEFT"===t.type||"MOVE_RIGHT"===t.type){if("COLLECTING"===e.phase||"DROP_PENDING"===e.phase)return e;"DRAGGING"!==e.phase&&$t(!1);var T=ur({state:e,type:t.type});return T?gr({state:e,impact:T.impact,clientSelection:T.clientSelection,scrollJumpRequest:T.scrollJumpRequest}):e}if("DROP_PENDING"===t.type){var F=t.payload.reason;return"COLLECTING"!==e.phase&&$t(!1),ke({phase:"DROP_PENDING"},e,{phase:"DROP_PENDING",isWaiting:!0,reason:F})}if("DROP_ANIMATE"===t.type){var j=t.payload,L=j.completed,M=j.dropDuration,z=j.newHomeClientOffset;return"DRAGGING"!==e.phase&&"DROP_PENDING"!==e.phase&&$t(!1),{phase:"DROP_ANIMATING",completed:L,dropDuration:M,newHomeClientOffset:z,dimensions:e.dimensions}}return"DROP_COMPLETE"===t.type?{phase:"IDLE",completed:t.payload.completed,shouldFlush:!1}:e},Sr=function(e){return{type:"PUBLISH_WHILE_DRAGGING",payload:e}},kr=function(){return{type:"COLLECTION_STARTING",payload:null}},Dr=function(e){return{type:"UPDATE_DROPPABLE_SCROLL",payload:e}},Ir=function(e){return{type:"UPDATE_DROPPABLE_IS_ENABLED",payload:e}},Pr=function(e){return{type:"UPDATE_DROPPABLE_IS_COMBINE_ENABLED",payload:e}},Br=function(e){return{type:"MOVE",payload:e}},Or=function(){return{type:"MOVE_UP",payload:null}},Nr=function(){return{type:"MOVE_DOWN",payload:null}},Rr=function(){return{type:"MOVE_RIGHT",payload:null}},_r=function(){return{type:"MOVE_LEFT",payload:null}},Tr=function(e){return{type:"DROP_COMPLETE",payload:e}},Fr=function(e){return{type:"DROP",payload:e}},jr="cubic-bezier(.2,1,.1,1)",Lr=0,Mr=.7,zr=.75,Ur="0.2s cubic-bezier(0.2, 0, 0, 1)",Gr={fluid:"opacity "+Ur,snap:"transform "+Ur+", opacity "+Ur,drop:function(e){var t=e+"s "+jr;return"transform "+t+", opacity "+t},outOfTheWay:"transform "+Ur,placeholder:"height "+Ur+", width "+Ur+", margin "+Ur},Wr=function(e){return on(e,nn)?null:"translate("+e.x+"px, "+e.y+"px)"},qr=Wr,Hr=.33,Vr=function(e){var t=e.getState,n=e.dispatch;return function(e){return function(r){if("DROP"===r.type){var a=t(),o=r.payload.reason;if("COLLECTING"!==a.phase){if("IDLE"!==a.phase){"DROP_PENDING"===a.phase&&a.isWaiting&&$t(!1),"DRAGGING"!==a.phase&&"DROP_PENDING"!==a.phase&&$t(!1);var i=a.critical,l=a.dimensions,u=l.draggables[a.critical.draggable.id],c=function(e){var t=e.draggables,n=e.reason,r=e.lastImpact,a=e.home,o=e.viewport,i=e.onLiftImpact;return r.at&&"DROP"===n?"REORDER"===r.at.type?{impact:r,didDropInsideDroppable:!0}:{impact:ke({},r,{displaced:On}),didDropInsideDroppable:!0}:{impact:hr({draggables:t,impact:i,destination:a,viewport:o,forceShouldAnimate:!0}),didDropInsideDroppable:!1}}({reason:o,lastImpact:a.impact,afterCritical:a.afterCritical,onLiftImpact:a.onLiftImpact,home:a.dimensions.droppables[a.critical.droppable.id],viewport:a.viewport,draggables:a.dimensions.draggables}),s=c.impact,d=c.didDropInsideDroppable,f=d?kn(s):null,p=d?Dn(s):null,m={index:i.draggable.index,droppableId:i.droppable.id},g={draggableId:u.descriptor.id,type:u.descriptor.type,source:m,reason:o,mode:a.movementMode,destination:f,combine:p},h=function(e){var t=e.impact,n=e.draggable,r=e.dimensions,a=e.viewport,o=e.afterCritical,i=r.draggables,l=r.droppables,u=lr(t),c=u?l[u]:null,s=l[n.descriptor.droppableId],d=vr({impact:t,draggable:n,draggables:i,afterCritical:o,droppable:c||s,viewport:a});return an(d,n.client.borderBox.center)}({impact:s,draggable:u,dimensions:l,viewport:a.viewport,afterCritical:a.afterCritical}),v={critical:a.critical,afterCritical:a.afterCritical,result:g,impact:s};if(!on(a.current.client.offset,h)||Boolean(g.combine)){var b=function(e){var t=e.reason,n=cn(e.current,e.destination);if(n<=0)return Hr;if(n>=1500)return.55;var r=Hr+n/1500*.22000000000000003;return Number(("CANCEL"===t?.6*r:r).toFixed(2))}({current:a.current.client.offset,destination:h,reason:o});n({type:"DROP_ANIMATE",payload:{newHomeClientOffset:h,dropDuration:b,completed:v}})}else n(Tr({completed:v}))}}else n(function(e){return{type:"DROP_PENDING",payload:e}}({reason:o}))}else e(r)}}},$r=function(){return{x:window.pageXOffset,y:window.pageYOffset}};var Qr=function(e){var t=function(e){var t,n=e.onWindowScroll,r=Gt((function(){n($r())})),a=(t=r,{eventName:"scroll",options:{passive:!0,capture:!1},fn:function(e){e.target!==window&&e.target!==window.document||t()}}),o=qt;function i(){return o!==qt}return{start:function(){i()&&$t(!1),o=Ht(window,[a])},stop:function(){i()||$t(!1),r.cancel(),o(),o=qt},isActive:i}}({onWindowScroll:function(t){e.dispatch({type:"MOVE_BY_WINDOW_SCROLL",payload:{newScroll:t}})}});return function(e){return function(n){t.isActive()||"INITIAL_PUBLISH"!==n.type||t.start(),t.isActive()&&function(e){return"DROP_COMPLETE"===e.type||"DROP_ANIMATE"===e.type||"FLUSH"===e.type}(n)&&t.stop(),e(n)}}},Yr=function(e,t){t()},Jr=function(e,t){return{draggableId:e.draggable.id,type:e.droppable.type,source:{droppableId:e.droppable.id,index:e.draggable.index},mode:t}},Kr=function(e,t,n,r){if(e){var a=function(e){var t=!1,n=!1,r=setTimeout((function(){n=!0})),a=function(a){t||n||(t=!0,e(a),clearTimeout(r))};return a.wasCalled=function(){return t},a}(n);e(t,{announce:a}),a.wasCalled()||n(r(t))}else n(r(t))},Xr=function(e,t){var n=function(e,t){var n,r=(n=[],{add:function(e){var t=setTimeout((function(){return function(e){var t=bn(n,(function(t){return t.timerId===e}));-1===t&&$t(!1),n.splice(t,1)[0].callback()}(t)})),r={timerId:t,callback:e};n.push(r)},flush:function(){if(n.length){var e=[].concat(n);n.length=0,e.forEach((function(e){clearTimeout(e.timerId),e.callback()}))}}}),a=null,o=function(n){a||$t(!1),a=null,Yr(0,(function(){return Kr(e().onDragEnd,n,t,tn)}))};return{beforeCapture:function(t,n){a&&$t(!1),Yr(0,(function(){var r=e().onBeforeCapture;r&&r({draggableId:t,mode:n})}))},beforeStart:function(t,n){a&&$t(!1),Yr(0,(function(){var r=e().onBeforeDragStart;r&&r(Jr(t,n))}))},start:function(n,o){a&&$t(!1);var i=Jr(n,o);a={mode:o,lastCritical:n,lastLocation:i.source,lastCombine:null},r.add((function(){Yr(0,(function(){return Kr(e().onDragStart,i,t,Zt)}))}))},update:function(n,o){var i=kn(o),l=Dn(o);a||$t(!1);var u=!function(e,t){if(e===t)return!0;var n=e.draggable.id===t.draggable.id&&e.draggable.droppableId===t.draggable.droppableId&&e.draggable.type===t.draggable.type&&e.draggable.index===t.draggable.index,r=e.droppable.id===t.droppable.id&&e.droppable.type===t.droppable.type;return n&&r}(n,a.lastCritical);u&&(a.lastCritical=n);var c,s,d=(s=i,!(null==(c=a.lastLocation)&&null==s||null!=c&&null!=s&&c.droppableId===s.droppableId&&c.index===s.index));d&&(a.lastLocation=i);var f=!function(e,t){return null==e&&null==t||null!=e&&null!=t&&e.draggableId===t.draggableId&&e.droppableId===t.droppableId}(a.lastCombine,l);if(f&&(a.lastCombine=l),u||d||f){var p=ke({},Jr(n,a.mode),{combine:l,destination:i});r.add((function(){Yr(0,(function(){return Kr(e().onDragUpdate,p,t,en)}))}))}},flush:function(){a||$t(!1),r.flush()},drop:o,abort:function(){if(a){var e=ke({},Jr(a.lastCritical,a.mode),{combine:null,destination:null,reason:"CANCEL"});o(e)}}}}(e,t);return function(e){return function(t){return function(r){if("BEFORE_INITIAL_CAPTURE"!==r.type){if("INITIAL_PUBLISH"===r.type){var a=r.payload.critical;return n.beforeStart(a,r.payload.movementMode),t(r),void n.start(a,r.payload.movementMode)}if("DROP_COMPLETE"===r.type){var o=r.payload.completed.result;return n.flush(),t(r),void n.drop(o)}if(t(r),"FLUSH"!==r.type){var i=e.getState();"DRAGGING"===i.phase&&n.update(i.critical,i.impact)}else n.abort()}else n.beforeCapture(r.payload.draggableId,r.payload.movementMode)}}}},Zr=function(e){return function(t){return function(n){if("DROP_ANIMATION_FINISHED"===n.type){var r=e.getState();"DROP_ANIMATING"!==r.phase&&$t(!1),e.dispatch(Tr({completed:r.completed}))}else t(n)}}},ea=function(e){var t=null,n=null;return function(r){return function(a){if("FLUSH"!==a.type&&"DROP_COMPLETE"!==a.type&&"DROP_ANIMATION_FINISHED"!==a.type||(n&&(cancelAnimationFrame(n),n=null),t&&(t(),t=null)),r(a),"DROP_ANIMATE"===a.type){var o={eventName:"scroll",options:{capture:!0,passive:!1,once:!0},fn:function(){"DROP_ANIMATING"===e.getState().phase&&e.dispatch({type:"DROP_ANIMATION_FINISHED",payload:null})}};n=requestAnimationFrame((function(){n=null,t=Ht(window,[o])}))}}}},ta=function(e){return function(t){return function(n){if(t(n),"PUBLISH_WHILE_DRAGGING"===n.type){var r=e.getState();"DROP_PENDING"===r.phase&&(r.isWaiting||e.dispatch(Fr({reason:r.reason})))}}}},na=Le,ra=function(e){var t=e.scrollHeight,n=e.scrollWidth,r=e.height,a=e.width,o=an({x:n,y:t},{x:a,y:r});return{x:Math.max(0,o.x),y:Math.max(0,o.y)}},aa=function(){var e=document.documentElement;return e||$t(!1),e},oa=function(){var e=aa();return ra({scrollHeight:e.scrollHeight,scrollWidth:e.scrollWidth,width:e.clientWidth,height:e.clientHeight})};function ia(e,t,n){return n.descriptor.id!==t.id&&n.descriptor.type===t.type&&"virtual"===e.droppable.getById(n.descriptor.droppableId).descriptor.mode}var la,ua,ca=function(e,t){var n=null,r=function(e){var t=e.registry,n=e.callbacks,r={additions:{},removals:{},modified:{}},a=null,o=function(){a||(n.collectionStarting(),a=requestAnimationFrame((function(){a=null;var e=r,o=e.additions,i=e.removals,l=e.modified,u=Object.keys(o).map((function(e){return t.draggable.getById(e).getDimension(nn)})).sort((function(e,t){return e.descriptor.index-t.descriptor.index})),c=Object.keys(l).map((function(e){return{droppableId:e,scroll:t.droppable.getById(e).callbacks.getScrollWhileDragging()}})),s={additions:u,removals:Object.keys(i),modified:c};r={additions:{},removals:{},modified:{}},n.publish(s)})))};return{add:function(e){var t=e.descriptor.id;r.additions[t]=e,r.modified[e.descriptor.droppableId]=!0,r.removals[t]&&delete r.removals[t],o()},remove:function(e){var t=e.descriptor;r.removals[t.id]=!0,r.modified[t.droppableId]=!0,r.additions[t.id]&&delete r.additions[t.id],o()},stop:function(){a&&(cancelAnimationFrame(a),a=null,r={additions:{},removals:{},modified:{}})}}}({callbacks:{publish:t.publishWhileDragging,collectionStarting:t.collectionStarting},registry:e}),a=function(t){n||$t(!1);var a=n.critical.draggable;"ADDITION"===t.type&&ia(e,a,t.value)&&r.add(t.value),"REMOVAL"===t.type&&ia(e,a,t.value)&&r.remove(t.value)};return{updateDroppableIsEnabled:function(r,a){e.droppable.exists(r)||$t(!1),n&&t.updateDroppableIsEnabled({id:r,isEnabled:a})},updateDroppableIsCombineEnabled:function(r,a){n&&(e.droppable.exists(r)||$t(!1),t.updateDroppableIsCombineEnabled({id:r,isCombineEnabled:a}))},scrollDroppable:function(t,r){n&&e.droppable.getById(t).callbacks.scroll(r)},updateDroppableScroll:function(r,a){n&&(e.droppable.exists(r)||$t(!1),t.updateDroppableScroll({id:r,newScroll:a}))},startPublishing:function(t){n&&$t(!1);var r=e.draggable.getById(t.draggableId),o=e.droppable.getById(r.descriptor.droppableId),i={draggable:r.descriptor,droppable:o.descriptor},l=e.subscribe(a);return n={critical:i,unsubscribe:l},function(e){var t,n,r,a,o,i,l,u=e.critical,c=e.scrollOptions,s=e.registry,d=(t=$r(),n=oa(),r=t.y,a=t.x,i=(o=aa()).clientWidth,l=o.clientHeight,{frame:Pt({top:r,left:a,right:a+i,bottom:r+l}),scroll:{initial:t,current:t,max:n,diff:{value:nn,displacement:nn}}}),f=d.scroll.current,p=u.droppable,m=s.droppable.getAllByType(p.type).map((function(e){return e.callbacks.getDimensionAndWatchScroll(f,c)})),g=s.draggable.getAllByType(u.draggable.type).map((function(e){return e.getDimension(f)}));return{dimensions:{draggables:wn(g),droppables:En(m)},critical:u,viewport:d}}({critical:i,registry:e,scrollOptions:t.scrollOptions})},stopPublishing:function(){if(n){r.stop();var t=n.critical.droppable;e.droppable.getAllByType(t.type).forEach((function(e){return e.callbacks.dragStopped()})),n.unsubscribe(),n=null}}}},sa=function(e,t){return"IDLE"===e.phase||"DROP_ANIMATING"===e.phase&&e.completed.result.draggableId!==t&&"DROP"===e.completed.result.reason},da=function(e){window.scrollBy(e.x,e.y)},fa=Ut((function(e){return Cn(e).filter((function(e){return!!e.isEnabled&&!!e.frame}))})),pa=function(e){return Math.pow(e,2)},ma=function(e){var t=e.startOfRange,n=e.endOfRange,r=e.current,a=n-t;return 0===a?0:(r-t)/a},ga=360,ha=1200,va=function(e){var t=e.distanceToEdge,n=e.thresholds,r=e.dragStartTime,a=e.shouldUseTimeDampening,o=function(e,t){if(e>t.startScrollingFrom)return 0;if(e<=t.maxScrollValueAt)return 28;if(e===t.startScrollingFrom)return 1;var n=ma({startOfRange:t.maxScrollValueAt,endOfRange:t.startScrollingFrom,current:e}),r=28*pa(1-n);return Math.ceil(r)}(t,n);return 0===o?0:a?Math.max(function(e,t){var n=t,r=ha,a=Date.now()-n;if(a>=ha)return e;if(a<ga)return 1;var o=ma({startOfRange:ga,endOfRange:r,current:a}),i=e*pa(o);return Math.ceil(i)}(o,r),1):o},ba=function(e){var t=e.container,n=e.distanceToEdges,r=e.dragStartTime,a=e.axis,o=e.shouldUseTimeDampening,i=function(e,t){return{startScrollingFrom:.25*e[t.size],maxScrollValueAt:.05*e[t.size]}}(t,a);return n[a.end]<n[a.start]?va({distanceToEdge:n[a.end],thresholds:i,dragStartTime:r,shouldUseTimeDampening:o}):-1*va({distanceToEdge:n[a.start],thresholds:i,dragStartTime:r,shouldUseTimeDampening:o})},Aa=dn((function(e){return 0===e?0:e})),ya=function(e){var t=e.dragStartTime,n=e.container,r=e.subject,a=e.center,o=e.shouldUseTimeDampening,i={top:a.y-n.top,right:n.right-a.x,bottom:n.bottom-a.y,left:a.x-n.left},l=ba({container:n,distanceToEdges:i,dragStartTime:t,axis:Fn,shouldUseTimeDampening:o}),u=ba({container:n,distanceToEdges:i,dragStartTime:t,axis:jn,shouldUseTimeDampening:o}),c=Aa({x:u,y:l});if(on(c,nn))return null;var s=function(e){var t=e.container,n=e.subject,r=e.proposedScroll,a=n.height>t.height,o=n.width>t.width;return o||a?o&&a?null:{x:o?0:r.x,y:a?0:r.y}:r}({container:n,subject:r,proposedScroll:c});return s?on(s,nn)?null:s:null},Ea=dn((function(e){return 0===e?0:e>0?1:-1})),wa=(la=function(e,t){return e<0?e:e>t?e-t:0},function(e){var t=e.current,n=e.max,r=e.change,a=rn(t,r),o={x:la(a.x,n.x),y:la(a.y,n.y)};return on(o,nn)?null:o}),Ca=function(e){var t=e.max,n=e.current,r=e.change,a={x:Math.max(n.x,t.x),y:Math.max(n.y,t.y)},o=Ea(r),i=wa({max:a,current:n,change:o});return!i||0!==o.x&&0===i.x||0!==o.y&&0===i.y},xa=function(e,t){return Ca({current:e.scroll.current,max:e.scroll.max,change:t})},Sa=function(e,t){var n=e.frame;return!!n&&Ca({current:n.scroll.current,max:n.scroll.max,change:t})},ka=function(e){var t=e.state,n=e.dragStartTime,r=e.shouldUseTimeDampening,a=e.scrollWindow,o=e.scrollDroppable,i=t.current.page.borderBoxCenter,l=t.dimensions.draggables[t.critical.draggable.id].page.marginBox;if(t.isWindowScrollAllowed){var u=function(e){var t=e.viewport,n=e.subject,r=e.center,a=e.shouldUseTimeDampening,o=ya({dragStartTime:e.dragStartTime,container:t.frame,subject:n,center:r,shouldUseTimeDampening:a});return o&&xa(t,o)?o:null}({dragStartTime:n,viewport:t.viewport,subject:l,center:i,shouldUseTimeDampening:r});if(u)return void a(u)}var c=function(e){var t=e.center,n=e.destination,r=e.droppables;if(n){var a=r[n];return a.frame?a:null}var o=function(e,t){var n=An(fa(t),(function(t){return t.frame||$t(!1),sr(t.frame.pageMarginBox)(e)}));return n}(t,r);return o}({center:i,destination:lr(t.impact),droppables:t.dimensions.droppables});if(c){var s=function(e){var t=e.droppable,n=e.subject,r=e.center,a=e.dragStartTime,o=e.shouldUseTimeDampening,i=t.frame;if(!i)return null;var l=ya({dragStartTime:a,container:i.pageMarginBox,subject:n,center:r,shouldUseTimeDampening:o});return l&&Sa(t,l)?l:null}({dragStartTime:n,droppable:c,subject:l,center:i,shouldUseTimeDampening:r});s&&o(c.descriptor.id,s)}},Da=function(e){var t=e.move,n=e.scrollDroppable,r=e.scrollWindow;return function(e){var a=e.scrollJumpRequest;if(a){var o=lr(e.impact);o||$t(!1);var i=function(e,t){if(!Sa(e,t))return t;var r=function(e,t){var n=e.frame;return n&&Sa(e,t)?wa({current:n.scroll.current,max:n.scroll.max,change:t}):null}(e,t);if(!r)return n(e.descriptor.id,t),null;var a=an(t,r);return n(e.descriptor.id,a),an(t,a)}(e.dimensions.droppables[o],a);if(i){var l=e.viewport,u=function(e,t,n){if(!e)return n;if(!xa(t,n))return n;var a=function(e,t){if(!xa(e,t))return null;var n=e.scroll.max,r=e.scroll.current;return wa({current:r,max:n,change:t})}(t,n);if(!a)return r(n),null;var o=an(n,a);return r(o),an(n,o)}(e.isWindowScrollAllowed,l,i);u&&function(e,n){var r=rn(e.current.client.selection,n);t({client:r})}(e,u)}}}},Ia={base:ua="data-rbd-drag-handle",draggableId:ua+"-draggable-id",contextId:ua+"-context-id"},Pa=function(){var e="data-rbd-draggable";return{base:e,contextId:e+"-context-id",id:e+"-id"}}(),Ba=function(){var e="data-rbd-droppable";return{base:e,contextId:e+"-context-id",id:e+"-id"}}(),Oa="data-rbd-scroll-container-context-id",Na=function(e,t){return e.map((function(e){var n=e.styles[t];return n?e.selector+" { "+n+" }":""})).join(" ")},Ra="undefined"!=typeof window&&void 0!==window.document&&void 0!==window.document.createElement?r.useLayoutEffect:r.useEffect,_a=function(){var e=document.querySelector("head");return e||$t(!1),e},Ta=function(e){var t=document.createElement("style");return e&&t.setAttribute("nonce",e),t.type="text/css",t};var Fa=function(e){return e&&e.ownerDocument?e.ownerDocument.defaultView:window};function ja(e){return e instanceof Fa(e).HTMLElement}function La(){var e={draggables:{},droppables:{}},t=[];function n(e){t.length&&t.forEach((function(t){return t(e)}))}function r(t){return e.draggables[t]||null}function a(t){return e.droppables[t]||null}return{draggable:{register:function(t){e.draggables[t.descriptor.id]=t,n({type:"ADDITION",value:t})},update:function(t,n){var r=e.draggables[n.descriptor.id];r&&r.uniqueId===t.uniqueId&&(delete e.draggables[n.descriptor.id],e.draggables[t.descriptor.id]=t)},unregister:function(t){var a=t.descriptor.id,o=r(a);o&&t.uniqueId===o.uniqueId&&(delete e.draggables[a],n({type:"REMOVAL",value:t}))},getById:function(e){var t=r(e);return t||$t(!1),t},findById:r,exists:function(e){return Boolean(r(e))},getAllByType:function(t){return vn(e.draggables).filter((function(e){return e.descriptor.type===t}))}},droppable:{register:function(t){e.droppables[t.descriptor.id]=t},unregister:function(t){var n=a(t.descriptor.id);n&&t.uniqueId===n.uniqueId&&delete e.droppables[t.descriptor.id]},getById:function(e){var t=a(e);return t||$t(!1),t},findById:a,exists:function(e){return Boolean(a(e))},getAllByType:function(t){return vn(e.droppables).filter((function(e){return e.descriptor.type===t}))}},subscribe:function(e){return t.push(e),function(){var n=t.indexOf(e);-1!==n&&t.splice(n,1)}},clean:function(){e.draggables={},e.droppables={},t.length=0}}}var Ma=r.createContext(null),za=function(){var e=document.body;return e||$t(!1),e},Ua={position:"absolute",width:"1px",height:"1px",margin:"-1px",border:"0",padding:"0",overflow:"hidden",clip:"rect(0 0 0 0)","clip-path":"inset(100%)"},Ga=0,Wa={separator:"::"};function qa(e,t){return void 0===t&&(t=Wa),Dt((function(){return""+e+t.separator+Ga++}),[t.separator,e])}var Ha=r.createContext(null);function Va(e){var t=(0,r.useRef)(e);return(0,r.useEffect)((function(){t.current=e})),t}var $a,Qa,Ya=(($a={})[13]=!0,$a[9]=!0,$a),Ja=function(e){Ya[e.keyCode]&&e.preventDefault()},Ka=function(){var e="visibilitychange";return"undefined"==typeof document?e:An([e,"ms"+e,"webkit"+e,"moz"+e,"o"+e],(function(e){return"on"+e in document}))||e}(),Xa={type:"IDLE"};function Za(){}var eo=((Qa={})[34]=!0,Qa[33]=!0,Qa[36]=!0,Qa[35]=!0,Qa);var to={type:"IDLE"},no={input:!0,button:!0,textarea:!0,select:!0,option:!0,optgroup:!0,video:!0,audio:!0};function ro(e,t){if(null==t)return!1;if(Boolean(no[t.tagName.toLowerCase()]))return!0;var n=t.getAttribute("contenteditable");return"true"===n||""===n||t!==e&&ro(e,t.parentElement)}function ao(e,t){var n=t.target;return!!ja(n)&&ro(e,n)}var oo=function(e){return Pt(e.getBoundingClientRect()).center},io=function(){var e="matches";return"undefined"==typeof document?e:An([e,"msMatchesSelector","webkitMatchesSelector"],(function(e){return e in Element.prototype}))||e}();function lo(e,t){return null==e?null:e[io](t)?e:lo(e.parentElement,t)}function uo(e,t){return e.closest?e.closest(t):lo(e,t)}function co(e){e.preventDefault()}function so(e){var t=e.expected,n=e.phase,r=e.isLockActive;return e.shouldWarn,!!r()&&t===n}function fo(e){var t=e.lockAPI,n=e.store,r=e.registry,a=e.draggableId;if(t.isClaimed())return!1;var o=r.draggable.findById(a);return!!o&&!!o.options.isEnabled&&!!sa(n.getState(),a)}var po=[function(e){var t=(0,r.useRef)(Xa),n=(0,r.useRef)(qt),a=Dt((function(){return{eventName:"mousedown",fn:function(t){if(!t.defaultPrevented&&0===t.button&&!(t.ctrlKey||t.metaKey||t.shiftKey||t.altKey)){var r=e.findClosestDraggableId(t);if(r){var a=e.tryGetLock(r,l,{sourceEvent:t});if(a){t.preventDefault();var o={x:t.clientX,y:t.clientY};n.current(),s(a,o)}}}}}}),[e]),o=Dt((function(){return{eventName:"webkitmouseforcewillbegin",fn:function(t){if(!t.defaultPrevented){var n=e.findClosestDraggableId(t);if(n){var r=e.findOptionsForDraggable(n);r&&(r.shouldRespectForcePress||e.canGetLock(n)&&t.preventDefault())}}}}}),[e]),i=It((function(){n.current=Ht(window,[o,a],{passive:!1,capture:!0})}),[o,a]),l=It((function(){"IDLE"!==t.current.type&&(t.current=Xa,n.current(),i())}),[i]),u=It((function(){var e=t.current;l(),"DRAGGING"===e.type&&e.actions.cancel({shouldBlockNextClick:!0}),"PENDING"===e.type&&e.actions.abort()}),[l]),c=It((function(){var e=function(e){var t=e.cancel,n=e.completed,r=e.getPhase,a=e.setPhase;return[{eventName:"mousemove",fn:function(e){var t=e.button,n=e.clientX,o=e.clientY;if(0===t){var i={x:n,y:o},l=r();if("DRAGGING"===l.type)return e.preventDefault(),void l.actions.move(i);if("PENDING"!==l.type&&$t(!1),u=l.point,c=i,Math.abs(c.x-u.x)>=5||Math.abs(c.y-u.y)>=5){var u,c;e.preventDefault();var s=l.actions.fluidLift(i);a({type:"DRAGGING",actions:s})}}}},{eventName:"mouseup",fn:function(e){var a=r();"DRAGGING"===a.type?(e.preventDefault(),a.actions.drop({shouldBlockNextClick:!0}),n()):t()}},{eventName:"mousedown",fn:function(e){"DRAGGING"===r().type&&e.preventDefault(),t()}},{eventName:"keydown",fn:function(e){if("PENDING"!==r().type)return 27===e.keyCode?(e.preventDefault(),void t()):void Ja(e);t()}},{eventName:"resize",fn:t},{eventName:"scroll",options:{passive:!0,capture:!1},fn:function(){"PENDING"===r().type&&t()}},{eventName:"webkitmouseforcedown",fn:function(e){var n=r();"IDLE"===n.type&&$t(!1),n.actions.shouldRespectForcePress()?t():e.preventDefault()}},{eventName:Ka,fn:t}]}({cancel:u,completed:l,getPhase:function(){return t.current},setPhase:function(e){t.current=e}});n.current=Ht(window,e,{capture:!0,passive:!1})}),[u,l]),s=It((function(e,n){"IDLE"!==t.current.type&&$t(!1),t.current={type:"PENDING",point:n,actions:e},c()}),[c]);Ra((function(){return i(),function(){n.current()}}),[i])},function(e){var t=(0,r.useRef)(Za),n=Dt((function(){return{eventName:"keydown",fn:function(n){if(!n.defaultPrevented&&32===n.keyCode){var r=e.findClosestDraggableId(n);if(r){var o=e.tryGetLock(r,u,{sourceEvent:n});if(o){n.preventDefault();var i=!0,l=o.snapLift();t.current(),t.current=Ht(window,function(e,t){function n(){t(),e.cancel()}return[{eventName:"keydown",fn:function(r){return 27===r.keyCode?(r.preventDefault(),void n()):32===r.keyCode?(r.preventDefault(),t(),void e.drop()):40===r.keyCode?(r.preventDefault(),void e.moveDown()):38===r.keyCode?(r.preventDefault(),void e.moveUp()):39===r.keyCode?(r.preventDefault(),void e.moveRight()):37===r.keyCode?(r.preventDefault(),void e.moveLeft()):void(eo[r.keyCode]?r.preventDefault():Ja(r))}},{eventName:"mousedown",fn:n},{eventName:"mouseup",fn:n},{eventName:"click",fn:n},{eventName:"touchstart",fn:n},{eventName:"resize",fn:n},{eventName:"wheel",fn:n,options:{passive:!0}},{eventName:Ka,fn:n}]}(l,u),{capture:!0,passive:!1})}}}function u(){i||$t(!1),i=!1,t.current(),a()}}}}),[e]),a=It((function(){t.current=Ht(window,[n],{passive:!1,capture:!0})}),[n]);Ra((function(){return a(),function(){t.current()}}),[a])},function(e){var t=(0,r.useRef)(to),n=(0,r.useRef)(qt),a=It((function(){return t.current}),[]),o=It((function(e){t.current=e}),[]),i=Dt((function(){return{eventName:"touchstart",fn:function(t){if(!t.defaultPrevented){var r=e.findClosestDraggableId(t);if(r){var a=e.tryGetLock(r,u,{sourceEvent:t});if(a){var o=t.touches[0],i={x:o.clientX,y:o.clientY};n.current(),f(a,i)}}}}}}),[e]),l=It((function(){n.current=Ht(window,[i],{capture:!0,passive:!1})}),[i]),u=It((function(){var e=t.current;"IDLE"!==e.type&&("PENDING"===e.type&&clearTimeout(e.longPressTimerId),o(to),n.current(),l())}),[l,o]),c=It((function(){var e=t.current;u(),"DRAGGING"===e.type&&e.actions.cancel({shouldBlockNextClick:!0}),"PENDING"===e.type&&e.actions.abort()}),[u]),s=It((function(){var e={capture:!0,passive:!1},t={cancel:c,completed:u,getPhase:a},r=Ht(window,function(e){var t=e.cancel,n=e.completed,r=e.getPhase;return[{eventName:"touchmove",options:{capture:!1},fn:function(e){var n=r();if("DRAGGING"===n.type){n.hasMoved=!0;var a=e.touches[0],o={x:a.clientX,y:a.clientY};e.preventDefault(),n.actions.move(o)}else t()}},{eventName:"touchend",fn:function(e){var a=r();"DRAGGING"===a.type?(e.preventDefault(),a.actions.drop({shouldBlockNextClick:!0}),n()):t()}},{eventName:"touchcancel",fn:function(e){"DRAGGING"===r().type?(e.preventDefault(),t()):t()}},{eventName:"touchforcechange",fn:function(e){var n=r();"IDLE"===n.type&&$t(!1);var a=e.touches[0];if(a&&a.force>=.15){var o=n.actions.shouldRespectForcePress();if("PENDING"!==n.type)return o?n.hasMoved?void e.preventDefault():void t():void e.preventDefault();o&&t()}}},{eventName:Ka,fn:t}]}(t),e),o=Ht(window,function(e){var t=e.cancel,n=e.getPhase;return[{eventName:"orientationchange",fn:t},{eventName:"resize",fn:t},{eventName:"contextmenu",fn:function(e){e.preventDefault()}},{eventName:"keydown",fn:function(e){"DRAGGING"===n().type?(27===e.keyCode&&e.preventDefault(),t()):t()}},{eventName:Ka,fn:t}]}(t),e);n.current=function(){r(),o()}}),[c,a,u]),d=It((function(){var e=a();"PENDING"!==e.type&&$t(!1);var t=e.actions.fluidLift(e.point);o({type:"DRAGGING",actions:t,hasMoved:!1})}),[a,o]),f=It((function(e,t){"IDLE"!==a().type&&$t(!1);var n=setTimeout(d,120);o({type:"PENDING",point:t,actions:e,longPressTimerId:n}),s()}),[s,a,o,d]);Ra((function(){return l(),function(){n.current();var e=a();"PENDING"===e.type&&(clearTimeout(e.longPressTimerId),o(to))}}),[a,l,o]),Ra((function(){return Ht(window,[{eventName:"touchmove",fn:function(){},options:{capture:!1,passive:!1}}])}),[])}];function mo(e){var t=e.contextId,n=e.store,a=e.registry,o=e.customSensors,i=e.enableDefaultSensors,l=[].concat(i?po:[],o||[]),u=(0,r.useState)((function(){return function(){var e=null;function t(){e||$t(!1),e=null}return{isClaimed:function(){return Boolean(e)},isActive:function(t){return t===e},claim:function(t){e&&$t(!1);var n={abandon:t};return e=n,n},release:t,tryAbandon:function(){e&&(e.abandon(),t())}}}()}))[0],c=It((function(e,t){e.isDragging&&!t.isDragging&&u.tryAbandon()}),[u]);Ra((function(){var e=n.getState();return n.subscribe((function(){var t=n.getState();c(e,t),e=t}))}),[u,n,c]),Ra((function(){return u.tryAbandon}),[u.tryAbandon]);for(var s=It((function(e){return fo({lockAPI:u,registry:a,store:n,draggableId:e})}),[u,a,n]),d=It((function(e,r,o){return function(e){var t=e.lockAPI,n=e.contextId,r=e.store,a=e.registry,o=e.draggableId,i=e.forceSensorStop,l=e.sourceEvent;if(!fo({lockAPI:t,store:r,registry:a,draggableId:o}))return null;var u=a.draggable.getById(o),c=function(e,t){var n="["+Pa.contextId+'="'+e+'"]',r=An(yn(document.querySelectorAll(n)),(function(e){return e.getAttribute(Pa.id)===t}));return r&&ja(r)?r:null}(n,u.descriptor.id);if(!c)return null;if(l&&!u.options.canDragInteractiveElements&&ao(c,l))return null;var s=t.claim(i||qt),d="PRE_DRAG";function f(){return u.options.shouldRespectForcePress}function p(){return t.isActive(s)}var m=function(e,t){so({expected:e,phase:d,isLockActive:p,shouldWarn:!0})&&r.dispatch(t())}.bind(null,"DRAGGING");function g(e){function n(){t.release(),d="COMPLETED"}function a(t,a){if(void 0===a&&(a={shouldBlockNextClick:!1}),e.cleanup(),a.shouldBlockNextClick){var o=Ht(window,[{eventName:"click",fn:co,options:{once:!0,passive:!1,capture:!0}}]);setTimeout(o)}n(),r.dispatch(Fr({reason:t}))}return"PRE_DRAG"!==d&&(n(),"PRE_DRAG"!==d&&$t(!1)),r.dispatch(function(e){return{type:"LIFT",payload:e}}(e.liftActionArgs)),d="DRAGGING",ke({isActive:function(){return so({expected:"DRAGGING",phase:d,isLockActive:p,shouldWarn:!1})},shouldRespectForcePress:f,drop:function(e){return a("DROP",e)},cancel:function(e){return a("CANCEL",e)}},e.actions)}var h={isActive:function(){return so({expected:"PRE_DRAG",phase:d,isLockActive:p,shouldWarn:!1})},shouldRespectForcePress:f,fluidLift:function(e){var t=Gt((function(e){m((function(){return Br({client:e})}))}));return ke({},g({liftActionArgs:{id:o,clientSelection:e,movementMode:"FLUID"},cleanup:function(){return t.cancel()},actions:{move:t}}),{move:t})},snapLift:function(){var e={moveUp:function(){return m(Or)},moveRight:function(){return m(Rr)},moveDown:function(){return m(Nr)},moveLeft:function(){return m(_r)}};return g({liftActionArgs:{id:o,clientSelection:oo(c),movementMode:"SNAP"},cleanup:qt,actions:e})},abort:function(){so({expected:"PRE_DRAG",phase:d,isLockActive:p,shouldWarn:!0})&&t.release()}};return h}({lockAPI:u,registry:a,contextId:t,store:n,draggableId:e,forceSensorStop:r,sourceEvent:o&&o.sourceEvent?o.sourceEvent:null})}),[t,u,a,n]),f=It((function(e){return function(e,t){var n=function(e,t){var n,r=t.target;if(!((n=r)instanceof Fa(n).Element))return null;var a=function(e){return"["+Ia.contextId+'="'+e+'"]'}(e),o=uo(r,a);return o&&ja(o)?o:null}(e,t);return n?n.getAttribute(Ia.draggableId):null}(t,e)}),[t]),p=It((function(e){var t=a.draggable.findById(e);return t?t.options:null}),[a.draggable]),m=It((function(){u.isClaimed()&&(u.tryAbandon(),"IDLE"!==n.getState().phase&&n.dispatch({type:"FLUSH",payload:null}))}),[u,n]),g=It(u.isClaimed,[u]),h=Dt((function(){return{canGetLock:s,tryGetLock:d,findClosestDraggableId:f,findOptionsForDraggable:p,tryReleaseLock:m,isLockClaimed:g}}),[s,d,f,p,m,g]),v=0;v<l.length;v++)l[v](h)}function go(e){return e.current||$t(!1),e.current}function ho(e){var t=e.contextId,n=e.setCallbacks,a=e.sensors,o=e.nonce,i=e.dragHandleUsageInstructions,l=(0,r.useRef)(null),u=Va(e),c=It((function(){return function(e){return{onBeforeCapture:e.onBeforeCapture,onBeforeDragStart:e.onBeforeDragStart,onDragStart:e.onDragStart,onDragEnd:e.onDragEnd,onDragUpdate:e.onDragUpdate}}(u.current)}),[u]),s=function(e){var t=Dt((function(){return function(e){return"rbd-announcement-"+e}(e)}),[e]),n=(0,r.useRef)(null);return(0,r.useEffect)((function(){var e=document.createElement("div");return n.current=e,e.id=t,e.setAttribute("aria-live","assertive"),e.setAttribute("aria-atomic","true"),ke(e.style,Ua),za().appendChild(e),function(){setTimeout((function(){var t=za();t.contains(e)&&t.removeChild(e),e===n.current&&(n.current=null)}))}}),[t]),It((function(e){var t=n.current;t&&(t.textContent=e)}),[])}(t),d=function(e){var t=e.contextId,n=e.text,a=qa("hidden-text",{separator:"-"}),o=Dt((function(){return"rbd-hidden-text-"+(e={contextId:t,uniqueId:a}).contextId+"-"+e.uniqueId;var e}),[a,t]);return(0,r.useEffect)((function(){var e=document.createElement("div");return e.id=o,e.textContent=n,e.style.display="none",za().appendChild(e),function(){var t=za();t.contains(e)&&t.removeChild(e)}}),[o,n]),o}({contextId:t,text:i}),f=function(e,t){var n=Dt((function(){return function(e){var t,n,r,a=(t=e,function(e){return"["+e+'="'+t+'"]'}),o=(n="\n      cursor: -webkit-grab;\n      cursor: grab;\n    ",{selector:a(Ia.contextId),styles:{always:"\n          -webkit-touch-callout: none;\n          -webkit-tap-highlight-color: rgba(0,0,0,0);\n          touch-action: manipulation;\n        ",resting:n,dragging:"pointer-events: none;",dropAnimating:n}}),i=[(r="\n      transition: "+Gr.outOfTheWay+";\n    ",{selector:a(Pa.contextId),styles:{dragging:r,dropAnimating:r,userCancel:r}}),o,{selector:a(Ba.contextId),styles:{always:"overflow-anchor: none;"}},{selector:"body",styles:{dragging:"\n        cursor: grabbing;\n        cursor: -webkit-grabbing;\n        user-select: none;\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        overflow-anchor: none;\n      "}}];return{always:Na(i,"always"),resting:Na(i,"resting"),dragging:Na(i,"dragging"),dropAnimating:Na(i,"dropAnimating"),userCancel:Na(i,"userCancel")}}(e)}),[e]),a=(0,r.useRef)(null),o=(0,r.useRef)(null),i=It(Ut((function(e){var t=o.current;t||$t(!1),t.textContent=e})),[]),l=It((function(e){var t=a.current;t||$t(!1),t.textContent=e}),[]);Ra((function(){(a.current||o.current)&&$t(!1);var r=Ta(t),u=Ta(t);return a.current=r,o.current=u,r.setAttribute("data-rbd-always",e),u.setAttribute("data-rbd-dynamic",e),_a().appendChild(r),_a().appendChild(u),l(n.always),i(n.resting),function(){var e=function(e){var t=e.current;t||$t(!1),_a().removeChild(t),e.current=null};e(a),e(o)}}),[t,l,i,n.always,n.resting,e]);var u=It((function(){return i(n.dragging)}),[i,n.dragging]),c=It((function(e){i("DROP"!==e?n.userCancel:n.dropAnimating)}),[i,n.dropAnimating,n.userCancel]),s=It((function(){o.current&&i(n.resting)}),[i,n.resting]);return Dt((function(){return{dragging:u,dropping:c,resting:s}}),[u,c,s])}(t,o),p=It((function(e){go(l).dispatch(e)}),[]),m=Dt((function(){return je({publishWhileDragging:Sr,updateDroppableScroll:Dr,updateDroppableIsEnabled:Ir,updateDroppableIsCombineEnabled:Pr,collectionStarting:kr},p)}),[p]),g=function(){var e=Dt(La,[]);return(0,r.useEffect)((function(){return function(){requestAnimationFrame(e.clean)}}),[e]),e}(),h=Dt((function(){return ca(g,m)}),[g,m]),v=Dt((function(){return function(e){var t=e.scrollDroppable,n=e.scrollWindow,r=e.move,a=function(e){var t=e.scrollDroppable,n=Gt(e.scrollWindow),r=Gt(t),a=null,o=function(e){a||$t(!1);var t=a,o=t.shouldUseTimeDampening,i=t.dragStartTime;ka({state:e,scrollWindow:n,scrollDroppable:r,dragStartTime:i,shouldUseTimeDampening:o})};return{start:function(e){a&&$t(!1);var t=Date.now(),n=!1,r=function(){n=!0};ka({state:e,dragStartTime:0,shouldUseTimeDampening:!1,scrollWindow:r,scrollDroppable:r}),a={dragStartTime:t,shouldUseTimeDampening:n},n&&o(e)},stop:function(){a&&(n.cancel(),r.cancel(),a=null)},scroll:o}}({scrollWindow:n,scrollDroppable:t}),o=Da({move:r,scrollWindow:n,scrollDroppable:t});return{scroll:function(e){"DRAGGING"===e.phase&&("FLUID"!==e.movementMode?e.scrollJumpRequest&&o(e):a.scroll(e))},start:a.start,stop:a.stop}}(ke({scrollWindow:da,scrollDroppable:h.scrollDroppable},je({move:Br},p)))}),[h.scrollDroppable,p]),b=function(e){var t=(0,r.useRef)({}),n=(0,r.useRef)(null),a=(0,r.useRef)(null),o=(0,r.useRef)(!1),i=It((function(e,n){var r={id:e,focus:n};return t.current[e]=r,function(){var n=t.current;n[e]!==r&&delete n[e]}}),[]),l=It((function(t){var n=function(e,t){var n="["+Ia.contextId+'="'+e+'"]',r=yn(document.querySelectorAll(n));if(!r.length)return null;var a=An(r,(function(e){return e.getAttribute(Ia.draggableId)===t}));return a&&ja(a)?a:null}(e,t);n&&n!==document.activeElement&&n.focus()}),[e]),u=It((function(e,t){n.current===e&&(n.current=t)}),[]),c=It((function(){a.current||o.current&&(a.current=requestAnimationFrame((function(){a.current=null;var e=n.current;e&&l(e)})))}),[l]),s=It((function(e){n.current=null;var t=document.activeElement;t&&t.getAttribute(Ia.draggableId)===e&&(n.current=e)}),[]);return Ra((function(){return o.current=!0,function(){o.current=!1;var e=a.current;e&&cancelAnimationFrame(e)}}),[]),Dt((function(){return{register:i,tryRecordFocus:s,tryRestoreFocusRecorded:c,tryShiftRecord:u}}),[i,s,c,u])}(t),A=Dt((function(){return function(e){var t,n=e.dimensionMarshal,r=e.focusMarshal,a=e.styleMarshal,o=e.getResponders,i=e.announce,l=e.autoScroller;return Te(xr,na(function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return function(e){return function(){var n=e.apply(void 0,arguments),r=function(){throw new Error(Be(15))},a={getState:n.getState,dispatch:function(){return r.apply(void 0,arguments)}},o=t.map((function(e){return e(a)}));return r=Le.apply(void 0,o)(n.dispatch),Pe(Pe({},n),{},{dispatch:r})}}}((t=a,function(){return function(e){return function(n){"INITIAL_PUBLISH"===n.type&&t.dragging(),"DROP_ANIMATE"===n.type&&t.dropping(n.payload.completed.result.reason),"FLUSH"!==n.type&&"DROP_COMPLETE"!==n.type||t.resting(),e(n)}}}),function(e){return function(){return function(t){return function(n){"DROP_COMPLETE"!==n.type&&"FLUSH"!==n.type&&"DROP_ANIMATE"!==n.type||e.stopPublishing(),t(n)}}}}(n),function(e){return function(t){var n=t.getState,r=t.dispatch;return function(t){return function(a){if("LIFT"===a.type){var o=a.payload,i=o.id,l=o.clientSelection,u=o.movementMode,c=n();"DROP_ANIMATING"===c.phase&&r(Tr({completed:c.completed})),"IDLE"!==n().phase&&$t(!1),r({type:"FLUSH",payload:null}),r({type:"BEFORE_INITIAL_CAPTURE",payload:{draggableId:i,movementMode:u}});var s={draggableId:i,scrollOptions:{shouldPublishImmediately:"SNAP"===u}},d=e.startPublishing(s),f=d.critical,p=d.dimensions,m=d.viewport;r({type:"INITIAL_PUBLISH",payload:{critical:f,dimensions:p,clientSelection:l,movementMode:u,viewport:m}})}else t(a)}}}}(n),Vr,Zr,ea,ta,function(e){return function(t){return function(n){return function(r){if(function(e){return"DROP_COMPLETE"===e.type||"DROP_ANIMATE"===e.type||"FLUSH"===e.type}(r))return e.stop(),void n(r);if("INITIAL_PUBLISH"===r.type){n(r);var a=t.getState();return"DRAGGING"!==a.phase&&$t(!1),void e.start(a)}n(r),e.scroll(t.getState())}}}}(l),Qr,function(e){var t=!1;return function(){return function(n){return function(r){if("INITIAL_PUBLISH"===r.type)return t=!0,e.tryRecordFocus(r.payload.critical.draggable.id),n(r),void e.tryRestoreFocusRecorded();if(n(r),t){if("FLUSH"===r.type)return t=!1,void e.tryRestoreFocusRecorded();if("DROP_COMPLETE"===r.type){t=!1;var a=r.payload.completed.result;a.combine&&e.tryShiftRecord(a.draggableId,a.combine.draggableId),e.tryRestoreFocusRecorded()}}}}}}(r),Xr(o,i))))}({announce:s,autoScroller:v,dimensionMarshal:h,focusMarshal:b,getResponders:c,styleMarshal:f})}),[s,v,h,b,c,f]);l.current=A;var y=It((function(){var e=go(l);"IDLE"!==e.getState().phase&&e.dispatch({type:"FLUSH",payload:null})}),[]),E=It((function(){var e=go(l).getState();return e.isDragging||"DROP_ANIMATING"===e.phase}),[]);n(Dt((function(){return{isDragging:E,tryAbort:y}}),[E,y]));var w=It((function(e){return sa(go(l).getState(),e)}),[]),C=It((function(){return cr(go(l).getState())}),[]),x=Dt((function(){return{marshal:h,focus:b,contextId:t,canLift:w,isMovementAllowed:C,dragHandleUsageInstructionsId:d,registry:g}}),[t,h,d,b,w,C,g]);return mo({contextId:t,store:A,registry:g,customSensors:a,enableDefaultSensors:!1!==e.enableDefaultSensors}),(0,r.useEffect)((function(){return y}),[y]),r.createElement(Ha.Provider,{value:x},r.createElement(He,{context:Ma,store:A},e.children))}var vo=0;function bo(e){var t=Dt((function(){return""+vo++}),[]),n=e.dragHandleUsageInstructions||"\n  Press space bar to start a drag.\n  When dragging you can use the arrow keys to move the item around and escape to cancel.\n  Some screen readers may require you to be in focus mode or to use your pass through key\n";return r.createElement(Qt,null,(function(a){return r.createElement(ho,{nonce:e.nonce,contextId:t,setCallbacks:a,dragHandleUsageInstructions:n,enableDefaultSensors:e.enableDefaultSensors,sensors:e.sensors,onBeforeCapture:e.onBeforeCapture,onBeforeDragStart:e.onBeforeDragStart,onDragStart:e.onDragStart,onDragUpdate:e.onDragUpdate,onDragEnd:e.onDragEnd},e.children)}))}var Ao=function(e){return function(t){return e===t}},yo=Ao("scroll"),Eo=Ao("auto"),wo=(Ao("visible"),function(e,t){return t(e.overflowX)||t(e.overflowY)}),Co=function e(t){return null==t||t===document.body||t===document.documentElement?null:function(e){var t=window.getComputedStyle(e),n={overflowX:t.overflowX,overflowY:t.overflowY};return wo(n,yo)||wo(n,Eo)}(t)?t:e(t.parentElement)},xo=function(e){return{x:e.scrollLeft,y:e.scrollTop}},So=function e(t){return!!t&&("fixed"===window.getComputedStyle(t).position||e(t.parentElement))},ko={passive:!1},Do={passive:!0},Io=function(e){return e.shouldPublishImmediately?ko:Do};function Po(e){var t=(0,r.useContext)(e);return t||$t(!1),t}var Bo=function(e){return e&&e.env.closestScrollable||null};function Oo(){}var No={width:0,height:0,margin:{top:0,right:0,bottom:0,left:0}},Ro=r.memo((function(e){var t=(0,r.useRef)(null),n=It((function(){t.current&&(clearTimeout(t.current),t.current=null)}),[]),a=e.animate,o=e.onTransitionEnd,i=e.onClose,l=e.contextId,u=(0,r.useState)("open"===e.animate),c=u[0],s=u[1];(0,r.useEffect)((function(){return c?"open"!==a?(n(),s(!1),Oo):t.current?Oo:(t.current=setTimeout((function(){t.current=null,s(!1)})),n):Oo}),[a,c,n]);var d=It((function(e){"height"===e.propertyName&&(o(),"close"===a&&i())}),[a,i,o]),f=function(e){var t=e.isAnimatingOpenOnMount,n=e.placeholder,r=e.animate,a=function(e){var t=e.placeholder;return e.isAnimatingOpenOnMount||"close"===e.animate?No:{height:t.client.borderBox.height,width:t.client.borderBox.width,margin:t.client.margin}}({isAnimatingOpenOnMount:t,placeholder:n,animate:r});return{display:n.display,boxSizing:"border-box",width:a.width,height:a.height,marginTop:a.margin.top,marginRight:a.margin.right,marginBottom:a.margin.bottom,marginLeft:a.margin.left,flexShrink:"0",flexGrow:"0",pointerEvents:"none",transition:"none"!==r?Gr.placeholder:null}}({isAnimatingOpenOnMount:c,animate:e.animate,placeholder:e.placeholder});return r.createElement(e.placeholder.tagName,{style:f,"data-rbd-placeholder-context-id":l,onTransitionEnd:d,ref:e.innerRef})})),_o=r.createContext(null),To=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),a=0;a<n;a++)r[a]=arguments[a];return(t=e.call.apply(e,[this].concat(r))||this).state={isVisible:Boolean(t.props.on),data:t.props.on,animate:t.props.shouldAnimate&&t.props.on?"open":"none"},t.onClose=function(){"close"===t.state.animate&&t.setState({isVisible:!1})},t}return Se(t,e),t.getDerivedStateFromProps=function(e,t){return e.shouldAnimate?e.on?{isVisible:!0,data:e.on,animate:"open"}:t.isVisible?{isVisible:!0,data:t.data,animate:"close"}:{isVisible:!1,animate:"close",data:null}:{isVisible:Boolean(e.on),data:e.on,animate:"none"}},t.prototype.render=function(){if(!this.state.isVisible)return null;var e={onClose:this.onClose,data:this.state.data,animate:this.state.animate};return this.props.children(e)},t}(r.PureComponent),Fo=function(e,t){return t?Gr.drop(t.duration):e?Gr.snap:Gr.fluid},jo=function(e,t){return e?t?Lr:Mr:null};function Lo(e){return"DRAGGING"===e.type?function(e){var t=e.dimension.client,n=e.offset,r=e.combineWith,a=e.dropping,o=Boolean(r),i=function(e){return null!=e.forceShouldAnimate?e.forceShouldAnimate:"SNAP"===e.mode}(e),l=Boolean(a),u=l?function(e,t){var n=Wr(e);return n?t?n+" scale("+zr+")":n:null}(n,o):qr(n);return{position:"fixed",top:t.marginBox.top,left:t.marginBox.left,boxSizing:"border-box",width:t.borderBox.width,height:t.borderBox.height,transition:Fo(i,a),transform:u,opacity:jo(o,l),zIndex:l?4500:5e3,pointerEvents:"none"}}(e):{transform:qr((t=e).offset),transition:t.shouldAnimateDisplacement?null:"none"};var t}function Mo(e){e.preventDefault()}var zo=function(e,t){return e===t},Uo=function(e){var t=e.combine,n=e.destination;return n?n.droppableId:t?t.droppableId:null};function Go(e){return{isDragging:!1,isDropAnimating:!1,isClone:!1,dropAnimation:null,mode:null,draggingOver:null,combineTargetFor:e,combineWith:null}}var Wo={mapped:{type:"SECONDARY",offset:nn,combineTargetFor:null,shouldAnimateDisplacement:!0,snapshot:Go(null)}},qo=Ct((function(){var e,t,n,r=(e=Ut((function(e,t){return{x:e,y:t}})),t=Ut((function(e,t,n,r,a){return{isDragging:!0,isClone:t,isDropAnimating:Boolean(a),dropAnimation:a,mode:e,draggingOver:n,combineWith:r,combineTargetFor:null}})),n=Ut((function(e,n,r,a,o,i,l){return{mapped:{type:"DRAGGING",dropping:null,draggingOver:o,combineWith:i,mode:n,offset:e,dimension:r,forceShouldAnimate:l,snapshot:t(n,a,o,i,null)}}})),function(r,a){if(r.isDragging){if(r.critical.draggable.id!==a.draggableId)return null;var o=r.current.client.offset,i=r.dimensions.draggables[a.draggableId],l=lr(r.impact),u=(s=r.impact).at&&"COMBINE"===s.at.type?s.at.combine.draggableId:null,c=r.forceShouldAnimate;return n(e(o.x,o.y),r.movementMode,i,a.isClone,l,u,c)}var s;if("DROP_ANIMATING"===r.phase){var d=r.completed;if(d.result.draggableId!==a.draggableId)return null;var f=a.isClone,p=r.dimensions.draggables[a.draggableId],m=d.result,g=m.mode,h=Uo(m),v=function(e){return e.combine?e.combine.draggableId:null}(m),b={duration:r.dropDuration,curve:jr,moveTo:r.newHomeClientOffset,opacity:v?Lr:null,scale:v?zr:null};return{mapped:{type:"DRAGGING",offset:r.newHomeClientOffset,dimension:p,dropping:b,draggingOver:h,combineWith:v,mode:g,forceShouldAnimate:null,snapshot:t(g,f,h,v,b)}}}return null}),a=function(){var e=Ut((function(e,t){return{x:e,y:t}})),t=Ut(Go),n=Ut((function(e,n,r){return void 0===n&&(n=null),{mapped:{type:"SECONDARY",offset:e,combineTargetFor:n,shouldAnimateDisplacement:r,snapshot:t(n)}}})),r=function(e){return e?n(nn,e,!0):null},a=function(t,a,o,i){var l=o.displaced.visible[t],u=Boolean(i.inVirtualList&&i.effected[t]),c=Dn(o),s=c&&c.draggableId===t?a:null;if(!l){if(!u)return r(s);if(o.displaced.invisible[t])return null;var d=ln(i.displacedBy.point),f=e(d.x,d.y);return n(f,s,!0)}if(u)return r(s);var p=o.displacedBy.point,m=e(p.x,p.y);return n(m,s,l.shouldAnimate)};return function(e,t){if(e.isDragging)return e.critical.draggable.id===t.draggableId?null:a(t.draggableId,e.critical.draggable.id,e.impact,e.afterCritical);if("DROP_ANIMATING"===e.phase){var n=e.completed;return n.result.draggableId===t.draggableId?null:a(t.draggableId,n.result.draggableId,n.impact,n.afterCritical)}return null}}();return function(e,t){return r(e,t)||a(e,t)||Wo}}),{dropAnimationFinished:function(){return{type:"DROP_ANIMATION_FINISHED",payload:null}}},null,{context:Ma,pure:!0,areStatePropsEqual:zo})((function(e){var t=(0,r.useRef)(null),n=It((function(e){t.current=e}),[]),a=It((function(){return t.current}),[]),o=Po(Ha),i=o.contextId,l=o.dragHandleUsageInstructionsId,u=o.registry,c=Po(_o),s=c.type,d=c.droppableId,f=Dt((function(){return{id:e.draggableId,index:e.index,type:s,droppableId:d}}),[e.draggableId,e.index,s,d]),p=e.children,m=e.draggableId,g=e.isEnabled,h=e.shouldRespectForcePress,v=e.canDragInteractiveElements,b=e.isClone,A=e.mapped,y=e.dropAnimationFinished;b||function(e){var t=qa("draggable"),n=e.descriptor,a=e.registry,o=e.getDraggableRef,i=e.canDragInteractiveElements,l=e.shouldRespectForcePress,u=e.isEnabled,c=Dt((function(){return{canDragInteractiveElements:i,shouldRespectForcePress:l,isEnabled:u}}),[i,u,l]),s=It((function(e){var t=o();return t||$t(!1),function(e,t,n){void 0===n&&(n=nn);var r=window.getComputedStyle(t),a=t.getBoundingClientRect(),o=jt(a,r),i=Ft(o,n);return{descriptor:e,placeholder:{client:o,tagName:t.tagName.toLowerCase(),display:r.display},displaceBy:{x:o.marginBox.width,y:o.marginBox.height},client:o,page:i}}(n,t,e)}),[n,o]),d=Dt((function(){return{uniqueId:t,descriptor:n,options:c,getDimension:s}}),[n,s,c,t]),f=(0,r.useRef)(d),p=(0,r.useRef)(!0);Ra((function(){return a.draggable.register(f.current),function(){return a.draggable.unregister(f.current)}}),[a.draggable]),Ra((function(){if(p.current)p.current=!1;else{var e=f.current;f.current=d,a.draggable.update(d,e)}}),[d,a.draggable])}(Dt((function(){return{descriptor:f,registry:u,getDraggableRef:a,canDragInteractiveElements:v,shouldRespectForcePress:h,isEnabled:g}}),[f,u,a,v,h,g]));var E=Dt((function(){return g?{tabIndex:0,role:"button","aria-describedby":l,"data-rbd-drag-handle-draggable-id":m,"data-rbd-drag-handle-context-id":i,draggable:!1,onDragStart:Mo}:null}),[i,l,m,g]),w=It((function(e){"DRAGGING"===A.type&&A.dropping&&"transform"===e.propertyName&&y()}),[y,A]),C=Dt((function(){var e=Lo(A),t="DRAGGING"===A.type&&A.dropping?w:null;return{innerRef:n,draggableProps:{"data-rbd-draggable-context-id":i,"data-rbd-draggable-id":m,style:e,onTransitionEnd:t},dragHandleProps:E}}),[i,E,m,A,w,n]),x=Dt((function(){return{draggableId:f.id,type:f.type,source:{index:f.index,droppableId:f.droppableId}}}),[f.droppableId,f.id,f.index,f.type]);return p(C,A.snapshot,x)}));function Ho(e){return Po(_o).isUsingCloneFor!==e.draggableId||e.isClone?r.createElement(qo,e):null}function Vo(e){var t="boolean"!=typeof e.isDragDisabled||!e.isDragDisabled,n=Boolean(e.disableInteractiveElementBlocking),a=Boolean(e.shouldRespectForcePress);return r.createElement(Ho,ke({},e,{isClone:!1,isEnabled:t,canDragInteractiveElements:n,shouldRespectForcePress:a}))}var $o=function(e,t){return e===t.droppable.type},Qo=function(e,t){return t.draggables[e.draggable.id]},Yo={mode:"standard",type:"DEFAULT",direction:"vertical",isDropDisabled:!1,isCombineEnabled:!1,ignoreContainerClipping:!1,renderClone:null,getContainerForClone:function(){return document.body||$t(!1),document.body}},Jo=Ct((function(){var e={placeholder:null,shouldAnimatePlaceholder:!0,snapshot:{isDraggingOver:!1,draggingOverWith:null,draggingFromThisWith:null,isUsingPlaceholder:!1},useClone:null},t=ke({},e,{shouldAnimatePlaceholder:!1}),n=Ut((function(e){return{draggableId:e.id,type:e.type,source:{index:e.index,droppableId:e.droppableId}}})),r=Ut((function(r,a,o,i,l,u){var c=l.descriptor.id;if(l.descriptor.droppableId===r){var s=u?{render:u,dragging:n(l.descriptor)}:null,d={isDraggingOver:o,draggingOverWith:o?c:null,draggingFromThisWith:c,isUsingPlaceholder:!0};return{placeholder:l.placeholder,shouldAnimatePlaceholder:!1,snapshot:d,useClone:s}}if(!a)return t;if(!i)return e;var f={isDraggingOver:o,draggingOverWith:c,draggingFromThisWith:null,isUsingPlaceholder:!0};return{placeholder:l.placeholder,shouldAnimatePlaceholder:!0,snapshot:f,useClone:null}}));return function(n,a){var o=a.droppableId,i=a.type,l=!a.isDropDisabled,u=a.renderClone;if(n.isDragging){var c=n.critical;if(!$o(i,c))return t;var s=Qo(c,n.dimensions),d=lr(n.impact)===o;return r(o,l,d,d,s,u)}if("DROP_ANIMATING"===n.phase){var f=n.completed;if(!$o(i,f.critical))return t;var p=Qo(f.critical,n.dimensions);return r(o,l,Uo(f.result)===o,lr(f.impact)===o,p,u)}if("IDLE"===n.phase&&n.completed&&!n.shouldFlush){var m=n.completed;if(!$o(i,m.critical))return t;var g=lr(m.impact)===o,h=Boolean(m.impact.at&&"COMBINE"===m.impact.at.type),v=m.critical.droppable.id===o;return g?h?e:t:v?e:t}return t}}),{updateViewportMaxScroll:function(e){return{type:"UPDATE_VIEWPORT_MAX_SCROLL",payload:e}}},null,{context:Ma,pure:!0,areStatePropsEqual:zo})((function(e){var t=(0,r.useContext)(Ha);t||$t(!1);var n=t.contextId,a=t.isMovementAllowed,o=(0,r.useRef)(null),i=(0,r.useRef)(null),l=e.children,u=e.droppableId,c=e.type,s=e.mode,d=e.direction,f=e.ignoreContainerClipping,p=e.isDropDisabled,m=e.isCombineEnabled,g=e.snapshot,h=e.useClone,v=e.updateViewportMaxScroll,b=e.getContainerForClone,A=It((function(){return o.current}),[]),y=It((function(e){o.current=e}),[]),E=(It((function(){return i.current}),[]),It((function(e){i.current=e}),[])),w=It((function(){a()&&v({maxScroll:oa()})}),[a,v]);!function(e){var t=(0,r.useRef)(null),n=Po(Ha),a=qa("droppable"),o=n.registry,i=n.marshal,l=Va(e),u=Dt((function(){return{id:e.droppableId,type:e.type,mode:e.mode}}),[e.droppableId,e.mode,e.type]),c=(0,r.useRef)(u),s=Dt((function(){return Ut((function(e,n){t.current||$t(!1);var r={x:e,y:n};i.updateDroppableScroll(u.id,r)}))}),[u.id,i]),d=It((function(){var e=t.current;return e&&e.env.closestScrollable?xo(e.env.closestScrollable):nn}),[]),f=It((function(){var e=d();s(e.x,e.y)}),[d,s]),p=Dt((function(){return Gt(f)}),[f]),m=It((function(){var e=t.current,n=Bo(e);e&&n||$t(!1),e.scrollOptions.shouldPublishImmediately?f():p()}),[p,f]),g=It((function(e,r){t.current&&$t(!1);var a=l.current,o=a.getDroppableRef();o||$t(!1);var i=function(e){return{closestScrollable:Co(e),isFixedOnPage:So(e)}}(o),c={ref:o,descriptor:u,env:i,scrollOptions:r};t.current=c;var s=function(e){var t=e.ref,n=e.descriptor,r=e.env,a=e.windowScroll,o=e.direction,i=e.isDropDisabled,l=e.isCombineEnabled,u=e.shouldClipSubject,c=r.closestScrollable,s=function(e,t){var n=Lt(e);if(!t)return n;if(e!==t)return n;var r=n.paddingBox.top-t.scrollTop,a=n.paddingBox.left-t.scrollLeft,o=r+t.scrollHeight,i=a+t.scrollWidth,l=Bt({top:r,right:i,bottom:o,left:a},n.border);return Rt({borderBox:l,margin:n.margin,border:n.border,padding:n.padding})}(t,c),d=Ft(s,a),f=function(){if(!c)return null;var e=Lt(c),t={scrollHeight:c.scrollHeight,scrollWidth:c.scrollWidth};return{client:e,page:Ft(e,a),scroll:xo(c),scrollSize:t,shouldClipSubject:u}}(),p=function(e){var t=e.descriptor,n=e.isEnabled,r=e.isCombineEnabled,a=e.isFixedOnPage,o=e.direction,i=e.client,l=e.page,u=e.closest,c=function(){if(!u)return null;var e=u.scrollSize,t=u.client,n=ra({scrollHeight:e.scrollHeight,scrollWidth:e.scrollWidth,height:t.paddingBox.height,width:t.paddingBox.width});return{pageMarginBox:u.page.marginBox,frameClient:t,scrollSize:e,shouldClipSubject:u.shouldClipSubject,scroll:{initial:u.scroll,current:u.scroll,max:n,diff:{value:nn,displacement:nn}}}}(),s="vertical"===o?Fn:jn;return{descriptor:t,isCombineEnabled:r,isFixedOnPage:a,axis:s,isEnabled:n,client:i,page:l,frame:c,subject:gn({page:l,withPlaceholder:null,axis:s,frame:c})}}({descriptor:n,isEnabled:!i,isCombineEnabled:l,isFixedOnPage:r.isFixedOnPage,direction:o,client:s,page:d,closest:f});return p}({ref:o,descriptor:u,env:i,windowScroll:e,direction:a.direction,isDropDisabled:a.isDropDisabled,isCombineEnabled:a.isCombineEnabled,shouldClipSubject:!a.ignoreContainerClipping}),d=i.closestScrollable;return d&&(d.setAttribute(Oa,n.contextId),d.addEventListener("scroll",m,Io(c.scrollOptions))),s}),[n.contextId,u,m,l]),h=It((function(){var e=t.current,n=Bo(e);return e&&n||$t(!1),xo(n)}),[]),v=It((function(){var e=t.current;e||$t(!1);var n=Bo(e);t.current=null,n&&(p.cancel(),n.removeAttribute(Oa),n.removeEventListener("scroll",m,Io(e.scrollOptions)))}),[m,p]),b=It((function(e){var n=t.current;n||$t(!1);var r=Bo(n);r||$t(!1),r.scrollTop+=e.y,r.scrollLeft+=e.x}),[]),A=Dt((function(){return{getDimensionAndWatchScroll:g,getScrollWhileDragging:h,dragStopped:v,scroll:b}}),[v,g,h,b]),y=Dt((function(){return{uniqueId:a,descriptor:u,callbacks:A}}),[A,u,a]);Ra((function(){return c.current=y.descriptor,o.droppable.register(y),function(){t.current&&v(),o.droppable.unregister(y)}}),[A,u,v,y,i,o.droppable]),Ra((function(){t.current&&i.updateDroppableIsEnabled(c.current.id,!e.isDropDisabled)}),[e.isDropDisabled,i]),Ra((function(){t.current&&i.updateDroppableIsCombineEnabled(c.current.id,e.isCombineEnabled)}),[e.isCombineEnabled,i])}({droppableId:u,type:c,mode:s,direction:d,isDropDisabled:p,isCombineEnabled:m,ignoreContainerClipping:f,getDroppableRef:A});var C=r.createElement(To,{on:e.placeholder,shouldAnimate:e.shouldAnimatePlaceholder},(function(e){var t=e.onClose,a=e.data,o=e.animate;return r.createElement(Ro,{placeholder:a,onClose:t,innerRef:E,animate:o,contextId:n,onTransitionEnd:w})})),x=Dt((function(){return{innerRef:y,placeholder:C,droppableProps:{"data-rbd-droppable-id":u,"data-rbd-droppable-context-id":n}}}),[n,u,C,y]),S=h?h.dragging.draggableId:null,k=Dt((function(){return{droppableId:u,type:c,isUsingCloneFor:S}}),[u,S,c]);return r.createElement(_o.Provider,{value:k},l(x,g),function(){if(!h)return null;var e=h.dragging,t=h.render,n=r.createElement(Ho,{draggableId:e.draggableId,index:e.source.index,isClone:!0,isEnabled:!0,shouldRespectForcePress:!1,canDragInteractiveElements:!0},(function(n,r){return t(n,r,e)}));return St.createPortal(n,b())}())}));function Ko(e){return Ko="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Ko(e)}function Xo(){return Xo=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},Xo.apply(this,arguments)}function Zo(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function ei(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function ti(e,t){return ti=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},ti(e,t)}function ni(e,t){if(t&&("object"===Ko(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return ri(e)}function ri(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function ai(e){return ai=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},ai(e)}function oi(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}Jo.defaultProps=Yo;const ii=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&ti(e,t)}(l,e);var t,n,a,o,i=(a=l,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=ai(a);if(o){var n=ai(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return ni(this,e)});function l(e){var t;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,l),oi(ri(t=i.call(this,e)),"formatLayout",(function(e){switch(e.section){case"about":return t=e.content,r.createElement("ul",{className:"format-ab"},r.createElement("li",null,r.createElement("p",null,t.first+" "+t.last)),r.createElement("li",null,r.createElement("p",null,t.email),r.createElement("p",null,t.telephone)));case"links":return function(e){return r.createElement("ul",{className:"format-lk"},e.map((function(e,t){var n=function(e){switch(e){case"twitter":return r.createElement("i",{className:"fab fa-twitter-square"});case"instagram":return r.createElement("i",{className:"fab fa-instagram-square"});case"github":return r.createElement("i",{className:"fab fa-github-square"});default:return r.createElement("i",{className:"fas fa-globe"})}}(e.type);return r.createElement("li",{key:t},r.createElement("p",null,n||e.type+" "),r.createElement("span",null,e.handle))})))}(e.content);case"skills":return function(e){return r.createElement("ul",{className:"format-sk"},e.map((function(e,t){return r.createElement("li",{key:t},r.createElement("p",null,e))})))}(e.content);case"statement":return function(e){return r.createElement("p",{className:"format-st"},e)}(e.content);case"education":return function(e){return r.createElement("ul",{className:"format-ed-list"},e.map((function(e,t){return r.createElement("li",{className:"format-ed-item",key:t},r.createElement("ul",{className:"format-ql-list"},e.quals.map((function(e,t){return r.createElement("li",{className:"format-ql-item",key:t},r.createElement("p",null,e))}))),r.createElement("ul",null,r.createElement("li",null,r.createElement("h4",null,e.institute)),r.createElement("li",{className:"format-ed-date"},r.createElement("p",null,e.date.start),r.createElement("p",null,e.date.end))))})))}(e.content);case"experience":return function(e){return r.createElement("ul",{className:"format-xp-list"},e.map((function(e,t){return r.createElement("li",{className:"format-xp-item",key:t},r.createElement("h4",null,e.job.title),r.createElement("ul",{className:"format-xp-job"},r.createElement("li",null,r.createElement("p",null,e.employer)),r.createElement("li",null,r.createElement("p",null,e.job.description))),r.createElement("ul",{className:"format-xp-date"},r.createElement("li",null,r.createElement("p",null,e.date.start)),r.createElement("li",null,r.createElement("p",null,e.date.end))))})))}(e.content)}var t})),oi(ri(t),"handleOnDragEnd",(function(e){if(e.destination){var n=t.state.cvComponents,r=Array.from(n),a=(i=r.splice(e.source.index,1),l=1,function(e){if(Array.isArray(e))return e}(i)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,a,o=[],i=!0,l=!1;try{for(n=n.call(e);!(i=(r=n.next()).done)&&(o.push(r.value),!t||o.length!==t);i=!0);}catch(e){l=!0,a=e}finally{try{i||null==n.return||n.return()}finally{if(l)throw a}}return o}}(i,l)||function(e,t){if(e){if("string"==typeof e)return Zo(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Zo(e,t):void 0}}(i,l)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}())[0];r.splice(e.destination.index,0,a);var o=n.map((function(e,t){return r[t]}));t.setState({cvComponents:o}),t.props.updateCvIndex(o)}var i,l}));var n=Array.from(t.props.cvComponents);return t.state={cvComponents:n},t}return t=l,(n=[{key:"render",value:function(){var e=this;if(2===this.props.page&&this.props.cvComponents.length)return r.createElement("div",null,r.createElement("h2",null,"CV Format Editor"),r.createElement(bo,{onDragEnd:this.handleOnDragEnd},r.createElement(Jo,{droppableId:"editor-sections"},(function(t){return r.createElement("ul",Xo({className:"editor-sections"},t.droppableProps,{ref:t.innerRef}),e.state.cvComponents.map((function(t,n){return r.createElement(Vo,{key:t.id,draggableId:t.id,index:n},(function(n){return r.createElement("li",Xo({id:"format-"+t.section,className:"format-section",ref:n.innerRef},n.draggableProps,n.dragHandleProps),r.createElement("h3",{className:"format-"+t.section+"_heading"},t.section),e.formatLayout(t))}))})),t.placeholder)}))))}}])&&ei(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),l}(r.Component);var li=n(864),ui=n(774),ci=n.n(ui);const si=function(e){function t(e,r,u,c,f){for(var p,m,g,h,y,w=0,C=0,x=0,S=0,k=0,N=0,_=g=p=0,F=0,j=0,L=0,M=0,z=u.length,U=z-1,G="",W="",q="",H="";F<z;){if(m=u.charCodeAt(F),F===U&&0!==C+S+x+w&&(0!==C&&(m=47===C?10:47),S=x=w=0,z++,U++),0===C+S+x+w){if(F===U&&(0<j&&(G=G.replace(d,"")),0<G.trim().length)){switch(m){case 32:case 9:case 59:case 13:case 10:break;default:G+=u.charAt(F)}m=59}switch(m){case 123:for(p=(G=G.trim()).charCodeAt(0),g=1,M=++F;F<z;){switch(m=u.charCodeAt(F)){case 123:g++;break;case 125:g--;break;case 47:switch(m=u.charCodeAt(F+1)){case 42:case 47:e:{for(_=F+1;_<U;++_)switch(u.charCodeAt(_)){case 47:if(42===m&&42===u.charCodeAt(_-1)&&F+2!==_){F=_+1;break e}break;case 10:if(47===m){F=_+1;break e}}F=_}}break;case 91:m++;case 40:m++;case 34:case 39:for(;F++<U&&u.charCodeAt(F)!==m;);}if(0===g)break;F++}if(g=u.substring(M,F),0===p&&(p=(G=G.replace(s,"").trim()).charCodeAt(0)),64===p){switch(0<j&&(G=G.replace(d,"")),m=G.charCodeAt(1)){case 100:case 109:case 115:case 45:j=r;break;default:j=O}if(M=(g=t(r,j,g,m,f+1)).length,0<R&&(y=l(3,g,j=n(O,G,L),r,I,D,M,m,f,c),G=j.join(""),void 0!==y&&0===(M=(g=y.trim()).length)&&(m=0,g="")),0<M)switch(m){case 115:G=G.replace(E,i);case 100:case 109:case 45:g=G+"{"+g+"}";break;case 107:g=(G=G.replace(v,"$1 $2"))+"{"+g+"}",g=1===B||2===B&&o("@"+g,3)?"@-webkit-"+g+"@"+g:"@"+g;break;default:g=G+g,112===c&&(W+=g,g="")}else g=""}else g=t(r,n(r,G,L),g,c,f+1);q+=g,g=L=j=_=p=0,G="",m=u.charCodeAt(++F);break;case 125:case 59:if(1<(M=(G=(0<j?G.replace(d,""):G).trim()).length))switch(0===_&&(p=G.charCodeAt(0),45===p||96<p&&123>p)&&(M=(G=G.replace(" ",":")).length),0<R&&void 0!==(y=l(1,G,r,e,I,D,W.length,c,f,c))&&0===(M=(G=y.trim()).length)&&(G="\0\0"),p=G.charCodeAt(0),m=G.charCodeAt(1),p){case 0:break;case 64:if(105===m||99===m){H+=G+u.charAt(F);break}default:58!==G.charCodeAt(M-1)&&(W+=a(G,p,m,G.charCodeAt(2)))}L=j=_=p=0,G="",m=u.charCodeAt(++F)}}switch(m){case 13:case 10:47===C?C=0:0===1+p&&107!==c&&0<G.length&&(j=1,G+="\0"),0<R*T&&l(0,G,r,e,I,D,W.length,c,f,c),D=1,I++;break;case 59:case 125:if(0===C+S+x+w){D++;break}default:switch(D++,h=u.charAt(F),m){case 9:case 32:if(0===S+w+C)switch(k){case 44:case 58:case 9:case 32:h="";break;default:32!==m&&(h=" ")}break;case 0:h="\\0";break;case 12:h="\\f";break;case 11:h="\\v";break;case 38:0===S+C+w&&(j=L=1,h="\f"+h);break;case 108:if(0===S+C+w+P&&0<_)switch(F-_){case 2:112===k&&58===u.charCodeAt(F-3)&&(P=k);case 8:111===N&&(P=N)}break;case 58:0===S+C+w&&(_=F);break;case 44:0===C+x+S+w&&(j=1,h+="\r");break;case 34:case 39:0===C&&(S=S===m?0:0===S?m:S);break;case 91:0===S+C+x&&w++;break;case 93:0===S+C+x&&w--;break;case 41:0===S+C+w&&x--;break;case 40:0===S+C+w&&(0===p&&(2*k+3*N==533||(p=1)),x++);break;case 64:0===C+x+S+w+_+g&&(g=1);break;case 42:case 47:if(!(0<S+w+x))switch(C){case 0:switch(2*m+3*u.charCodeAt(F+1)){case 235:C=47;break;case 220:M=F,C=42}break;case 42:47===m&&42===k&&M+2!==F&&(33===u.charCodeAt(M+2)&&(W+=u.substring(M,F+1)),h="",C=0)}}0===C&&(G+=h)}N=k,k=m,F++}if(0<(M=W.length)){if(j=r,0<R&&void 0!==(y=l(2,W,j,e,I,D,M,c,f,c))&&0===(W=y).length)return H+W+q;if(W=j.join(",")+"{"+W+"}",0!=B*P){switch(2!==B||o(W,2)||(P=0),P){case 111:W=W.replace(A,":-moz-$1")+W;break;case 112:W=W.replace(b,"::-webkit-input-$1")+W.replace(b,"::-moz-$1")+W.replace(b,":-ms-input-$1")+W}P=0}}return H+W+q}function n(e,t,n){var a=t.trim().split(g);t=a;var o=a.length,i=e.length;switch(i){case 0:case 1:var l=0;for(e=0===i?"":e[0]+" ";l<o;++l)t[l]=r(e,t[l],n).trim();break;default:var u=l=0;for(t=[];l<o;++l)for(var c=0;c<i;++c)t[u++]=r(e[c]+" ",a[l],n).trim()}return t}function r(e,t,n){var r=t.charCodeAt(0);switch(33>r&&(r=(t=t.trim()).charCodeAt(0)),r){case 38:return t.replace(h,"$1"+e.trim());case 58:return e.trim()+t.replace(h,"$1"+e.trim());default:if(0<1*n&&0<t.indexOf("\f"))return t.replace(h,(58===e.charCodeAt(0)?"":"$1")+e.trim())}return e+t}function a(e,t,n,r){var i=e+";",l=2*t+3*n+4*r;if(944===l){e=i.indexOf(":",9)+1;var u=i.substring(e,i.length-1).trim();return u=i.substring(0,e).trim()+u+";",1===B||2===B&&o(u,1)?"-webkit-"+u+u:u}if(0===B||2===B&&!o(i,1))return i;switch(l){case 1015:return 97===i.charCodeAt(10)?"-webkit-"+i+i:i;case 951:return 116===i.charCodeAt(3)?"-webkit-"+i+i:i;case 963:return 110===i.charCodeAt(5)?"-webkit-"+i+i:i;case 1009:if(100!==i.charCodeAt(4))break;case 969:case 942:return"-webkit-"+i+i;case 978:return"-webkit-"+i+"-moz-"+i+i;case 1019:case 983:return"-webkit-"+i+"-moz-"+i+"-ms-"+i+i;case 883:if(45===i.charCodeAt(8))return"-webkit-"+i+i;if(0<i.indexOf("image-set(",11))return i.replace(k,"$1-webkit-$2")+i;break;case 932:if(45===i.charCodeAt(4))switch(i.charCodeAt(5)){case 103:return"-webkit-box-"+i.replace("-grow","")+"-webkit-"+i+"-ms-"+i.replace("grow","positive")+i;case 115:return"-webkit-"+i+"-ms-"+i.replace("shrink","negative")+i;case 98:return"-webkit-"+i+"-ms-"+i.replace("basis","preferred-size")+i}return"-webkit-"+i+"-ms-"+i+i;case 964:return"-webkit-"+i+"-ms-flex-"+i+i;case 1023:if(99!==i.charCodeAt(8))break;return"-webkit-box-pack"+(u=i.substring(i.indexOf(":",15)).replace("flex-","").replace("space-between","justify"))+"-webkit-"+i+"-ms-flex-pack"+u+i;case 1005:return p.test(i)?i.replace(f,":-webkit-")+i.replace(f,":-moz-")+i:i;case 1e3:switch(t=(u=i.substring(13).trim()).indexOf("-")+1,u.charCodeAt(0)+u.charCodeAt(t)){case 226:u=i.replace(y,"tb");break;case 232:u=i.replace(y,"tb-rl");break;case 220:u=i.replace(y,"lr");break;default:return i}return"-webkit-"+i+"-ms-"+u+i;case 1017:if(-1===i.indexOf("sticky",9))break;case 975:switch(t=(i=e).length-10,l=(u=(33===i.charCodeAt(t)?i.substring(0,t):i).substring(e.indexOf(":",7)+1).trim()).charCodeAt(0)+(0|u.charCodeAt(7))){case 203:if(111>u.charCodeAt(8))break;case 115:i=i.replace(u,"-webkit-"+u)+";"+i;break;case 207:case 102:i=i.replace(u,"-webkit-"+(102<l?"inline-":"")+"box")+";"+i.replace(u,"-webkit-"+u)+";"+i.replace(u,"-ms-"+u+"box")+";"+i}return i+";";case 938:if(45===i.charCodeAt(5))switch(i.charCodeAt(6)){case 105:return u=i.replace("-items",""),"-webkit-"+i+"-webkit-box-"+u+"-ms-flex-"+u+i;case 115:return"-webkit-"+i+"-ms-flex-item-"+i.replace(C,"")+i;default:return"-webkit-"+i+"-ms-flex-line-pack"+i.replace("align-content","").replace(C,"")+i}break;case 973:case 989:if(45!==i.charCodeAt(3)||122===i.charCodeAt(4))break;case 931:case 953:if(!0===S.test(e))return 115===(u=e.substring(e.indexOf(":")+1)).charCodeAt(0)?a(e.replace("stretch","fill-available"),t,n,r).replace(":fill-available",":stretch"):i.replace(u,"-webkit-"+u)+i.replace(u,"-moz-"+u.replace("fill-",""))+i;break;case 962:if(i="-webkit-"+i+(102===i.charCodeAt(5)?"-ms-"+i:"")+i,211===n+r&&105===i.charCodeAt(13)&&0<i.indexOf("transform",10))return i.substring(0,i.indexOf(";",27)+1).replace(m,"$1-webkit-$2")+i}return i}function o(e,t){var n=e.indexOf(1===t?":":"{"),r=e.substring(0,3!==t?n:10);return n=e.substring(n+1,e.length-1),_(2!==t?r:r.replace(x,"$1"),n,t)}function i(e,t){var n=a(t,t.charCodeAt(0),t.charCodeAt(1),t.charCodeAt(2));return n!==t+";"?n.replace(w," or ($1)").substring(4):"("+t+")"}function l(e,t,n,r,a,o,i,l,u,s){for(var d,f=0,p=t;f<R;++f)switch(d=N[f].call(c,e,p,n,r,a,o,i,l,u,s)){case void 0:case!1:case!0:case null:break;default:p=d}if(p!==t)return p}function u(e){return void 0!==(e=e.prefix)&&(_=null,e?"function"!=typeof e?B=1:(B=2,_=e):B=0),u}function c(e,n){var r=e;if(33>r.charCodeAt(0)&&(r=r.trim()),r=[r],0<R){var a=l(-1,n,r,r,I,D,0,0,0,0);void 0!==a&&"string"==typeof a&&(n=a)}var o=t(O,r,n,0,0);return 0<R&&void 0!==(a=l(-2,o,r,r,I,D,o.length,0,0,0))&&(o=a),P=0,D=I=1,o}var s=/^\0+/g,d=/[\0\r\f]/g,f=/: */g,p=/zoo|gra/,m=/([,: ])(transform)/g,g=/,\r+?/g,h=/([\t\r\n ])*\f?&/g,v=/@(k\w+)\s*(\S*)\s*/,b=/::(place)/g,A=/:(read-only)/g,y=/[svh]\w+-[tblr]{2}/,E=/\(\s*(.*)\s*\)/g,w=/([\s\S]*?);/g,C=/-self|flex-/g,x=/[^]*?(:[rp][el]a[\w-]+)[^]*/,S=/stretch|:\s*\w+\-(?:conte|avail)/,k=/([^-])(image-set\()/,D=1,I=1,P=0,B=1,O=[],N=[],R=0,_=null,T=0;return c.use=function e(t){switch(t){case void 0:case null:R=N.length=0;break;default:if("function"==typeof t)N[R++]=t;else if("object"==typeof t)for(var n=0,r=t.length;n<r;++n)e(t[n]);else T=0|!!t}return e},c.set=u,void 0!==e&&u(e),c},di={animationIterationCount:1,borderImageOutset:1,borderImageSlice:1,borderImageWidth:1,boxFlex:1,boxFlexGroup:1,boxOrdinalGroup:1,columnCount:1,columns:1,flex:1,flexGrow:1,flexPositive:1,flexShrink:1,flexNegative:1,flexOrder:1,gridRow:1,gridRowEnd:1,gridRowSpan:1,gridRowStart:1,gridColumn:1,gridColumnEnd:1,gridColumnSpan:1,gridColumnStart:1,msGridRow:1,msGridRowSpan:1,msGridColumn:1,msGridColumnSpan:1,fontWeight:1,lineHeight:1,opacity:1,order:1,orphans:1,tabSize:1,widows:1,zIndex:1,zoom:1,WebkitLineClamp:1,fillOpacity:1,floodOpacity:1,stopOpacity:1,strokeDasharray:1,strokeDashoffset:1,strokeMiterlimit:1,strokeOpacity:1,strokeWidth:1};var fi=/^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|enterKeyHint|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/;const pi=function(e){var t=Object.create(null);return function(e){return void 0===t[e]&&(t[e]=(n=e,fi.test(n)||111===n.charCodeAt(0)&&110===n.charCodeAt(1)&&n.charCodeAt(2)<91)),t[e];var n}}();function mi(){return(mi=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}var gi=function(e,t){for(var n=[e[0]],r=0,a=t.length;r<a;r+=1)n.push(t[r],e[r+1]);return n},hi=function(e){return null!==e&&"object"==typeof e&&"[object Object]"===(e.toString?e.toString():Object.prototype.toString.call(e))&&!(0,li.typeOf)(e)},vi=Object.freeze([]),bi=Object.freeze({});function Ai(e){return"function"==typeof e}function yi(e){return e.displayName||e.name||"Component"}function Ei(e){return e&&"string"==typeof e.styledComponentId}var wi="undefined"!=typeof process&&(process.env.REACT_APP_SC_ATTR||process.env.SC_ATTR)||"data-styled",Ci="undefined"!=typeof window&&"HTMLElement"in window,xi=Boolean("boolean"==typeof SC_DISABLE_SPEEDY?SC_DISABLE_SPEEDY:"undefined"!=typeof process&&void 0!==process.env.REACT_APP_SC_DISABLE_SPEEDY&&""!==process.env.REACT_APP_SC_DISABLE_SPEEDY?"false"!==process.env.REACT_APP_SC_DISABLE_SPEEDY&&process.env.REACT_APP_SC_DISABLE_SPEEDY:"undefined"!=typeof process&&void 0!==process.env.SC_DISABLE_SPEEDY&&""!==process.env.SC_DISABLE_SPEEDY&&"false"!==process.env.SC_DISABLE_SPEEDY&&process.env.SC_DISABLE_SPEEDY);function Si(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];throw new Error("An error occurred. See https://git.io/JUIaE#"+e+" for more information."+(n.length>0?" Args: "+n.join(", "):""))}var ki=function(){function e(e){this.groupSizes=new Uint32Array(512),this.length=512,this.tag=e}var t=e.prototype;return t.indexOfGroup=function(e){for(var t=0,n=0;n<e;n++)t+=this.groupSizes[n];return t},t.insertRules=function(e,t){if(e>=this.groupSizes.length){for(var n=this.groupSizes,r=n.length,a=r;e>=a;)(a<<=1)<0&&Si(16,""+e);this.groupSizes=new Uint32Array(a),this.groupSizes.set(n),this.length=a;for(var o=r;o<a;o++)this.groupSizes[o]=0}for(var i=this.indexOfGroup(e+1),l=0,u=t.length;l<u;l++)this.tag.insertRule(i,t[l])&&(this.groupSizes[e]++,i++)},t.clearGroup=function(e){if(e<this.length){var t=this.groupSizes[e],n=this.indexOfGroup(e),r=n+t;this.groupSizes[e]=0;for(var a=n;a<r;a++)this.tag.deleteRule(n)}},t.getGroup=function(e){var t="";if(e>=this.length||0===this.groupSizes[e])return t;for(var n=this.groupSizes[e],r=this.indexOfGroup(e),a=r+n,o=r;o<a;o++)t+=this.tag.getRule(o)+"/*!sc*/\n";return t},e}(),Di=new Map,Ii=new Map,Pi=1,Bi=function(e){if(Di.has(e))return Di.get(e);for(;Ii.has(Pi);)Pi++;var t=Pi++;return Di.set(e,t),Ii.set(t,e),t},Oi=function(e){return Ii.get(e)},Ni=function(e,t){t>=Pi&&(Pi=t+1),Di.set(e,t),Ii.set(t,e)},Ri="style["+wi+'][data-styled-version="5.3.5"]',_i=new RegExp("^"+wi+'\\.g(\\d+)\\[id="([\\w\\d-]+)"\\].*?"([^"]*)'),Ti=function(e,t,n){for(var r,a=n.split(","),o=0,i=a.length;o<i;o++)(r=a[o])&&e.registerName(t,r)},Fi=function(e,t){for(var n=(t.textContent||"").split("/*!sc*/\n"),r=[],a=0,o=n.length;a<o;a++){var i=n[a].trim();if(i){var l=i.match(_i);if(l){var u=0|parseInt(l[1],10),c=l[2];0!==u&&(Ni(c,u),Ti(e,c,l[3]),e.getTag().insertRules(u,r)),r.length=0}else r.push(i)}}},ji=function(){return"undefined"!=typeof window&&void 0!==window.__webpack_nonce__?window.__webpack_nonce__:null},Li=function(e){var t=document.head,n=e||t,r=document.createElement("style"),a=function(e){for(var t=e.childNodes,n=t.length;n>=0;n--){var r=t[n];if(r&&1===r.nodeType&&r.hasAttribute(wi))return r}}(n),o=void 0!==a?a.nextSibling:null;r.setAttribute(wi,"active"),r.setAttribute("data-styled-version","5.3.5");var i=ji();return i&&r.setAttribute("nonce",i),n.insertBefore(r,o),r},Mi=function(){function e(e){var t=this.element=Li(e);t.appendChild(document.createTextNode("")),this.sheet=function(e){if(e.sheet)return e.sheet;for(var t=document.styleSheets,n=0,r=t.length;n<r;n++){var a=t[n];if(a.ownerNode===e)return a}Si(17)}(t),this.length=0}var t=e.prototype;return t.insertRule=function(e,t){try{return this.sheet.insertRule(t,e),this.length++,!0}catch(e){return!1}},t.deleteRule=function(e){this.sheet.deleteRule(e),this.length--},t.getRule=function(e){var t=this.sheet.cssRules[e];return void 0!==t&&"string"==typeof t.cssText?t.cssText:""},e}(),zi=function(){function e(e){var t=this.element=Li(e);this.nodes=t.childNodes,this.length=0}var t=e.prototype;return t.insertRule=function(e,t){if(e<=this.length&&e>=0){var n=document.createTextNode(t),r=this.nodes[e];return this.element.insertBefore(n,r||null),this.length++,!0}return!1},t.deleteRule=function(e){this.element.removeChild(this.nodes[e]),this.length--},t.getRule=function(e){return e<this.length?this.nodes[e].textContent:""},e}(),Ui=function(){function e(e){this.rules=[],this.length=0}var t=e.prototype;return t.insertRule=function(e,t){return e<=this.length&&(this.rules.splice(e,0,t),this.length++,!0)},t.deleteRule=function(e){this.rules.splice(e,1),this.length--},t.getRule=function(e){return e<this.length?this.rules[e]:""},e}(),Gi=Ci,Wi={isServer:!Ci,useCSSOMInjection:!xi},qi=function(){function e(e,t,n){void 0===e&&(e=bi),void 0===t&&(t={}),this.options=mi({},Wi,{},e),this.gs=t,this.names=new Map(n),this.server=!!e.isServer,!this.server&&Ci&&Gi&&(Gi=!1,function(e){for(var t=document.querySelectorAll(Ri),n=0,r=t.length;n<r;n++){var a=t[n];a&&"active"!==a.getAttribute(wi)&&(Fi(e,a),a.parentNode&&a.parentNode.removeChild(a))}}(this))}e.registerId=function(e){return Bi(e)};var t=e.prototype;return t.reconstructWithOptions=function(t,n){return void 0===n&&(n=!0),new e(mi({},this.options,{},t),this.gs,n&&this.names||void 0)},t.allocateGSInstance=function(e){return this.gs[e]=(this.gs[e]||0)+1},t.getTag=function(){return this.tag||(this.tag=(n=(t=this.options).isServer,r=t.useCSSOMInjection,a=t.target,e=n?new Ui(a):r?new Mi(a):new zi(a),new ki(e)));var e,t,n,r,a},t.hasNameForId=function(e,t){return this.names.has(e)&&this.names.get(e).has(t)},t.registerName=function(e,t){if(Bi(e),this.names.has(e))this.names.get(e).add(t);else{var n=new Set;n.add(t),this.names.set(e,n)}},t.insertRules=function(e,t,n){this.registerName(e,t),this.getTag().insertRules(Bi(e),n)},t.clearNames=function(e){this.names.has(e)&&this.names.get(e).clear()},t.clearRules=function(e){this.getTag().clearGroup(Bi(e)),this.clearNames(e)},t.clearTag=function(){this.tag=void 0},t.toString=function(){return function(e){for(var t=e.getTag(),n=t.length,r="",a=0;a<n;a++){var o=Oi(a);if(void 0!==o){var i=e.names.get(o),l=t.getGroup(a);if(i&&l&&i.size){var u=wi+".g"+a+'[id="'+o+'"]',c="";void 0!==i&&i.forEach((function(e){e.length>0&&(c+=e+",")})),r+=""+l+u+'{content:"'+c+'"}/*!sc*/\n'}}}return r}(this)},e}(),Hi=/(a)(d)/gi,Vi=function(e){return String.fromCharCode(e+(e>25?39:97))};function $i(e){var t,n="";for(t=Math.abs(e);t>52;t=t/52|0)n=Vi(t%52)+n;return(Vi(t%52)+n).replace(Hi,"$1-$2")}var Qi=function(e,t){for(var n=t.length;n;)e=33*e^t.charCodeAt(--n);return e},Yi=function(e){return Qi(5381,e)};function Ji(e){for(var t=0;t<e.length;t+=1){var n=e[t];if(Ai(n)&&!Ei(n))return!1}return!0}var Ki=Yi("5.3.5"),Xi=function(){function e(e,t,n){this.rules=e,this.staticRulesId="",this.isStatic=(void 0===n||n.isStatic)&&Ji(e),this.componentId=t,this.baseHash=Qi(Ki,t),this.baseStyle=n,qi.registerId(t)}return e.prototype.generateAndInjectStyles=function(e,t,n){var r=this.componentId,a=[];if(this.baseStyle&&a.push(this.baseStyle.generateAndInjectStyles(e,t,n)),this.isStatic&&!n.hash)if(this.staticRulesId&&t.hasNameForId(r,this.staticRulesId))a.push(this.staticRulesId);else{var o=gl(this.rules,e,t,n).join(""),i=$i(Qi(this.baseHash,o)>>>0);if(!t.hasNameForId(r,i)){var l=n(o,"."+i,void 0,r);t.insertRules(r,i,l)}a.push(i),this.staticRulesId=i}else{for(var u=this.rules.length,c=Qi(this.baseHash,n.hash),s="",d=0;d<u;d++){var f=this.rules[d];if("string"==typeof f)s+=f;else if(f){var p=gl(f,e,t,n),m=Array.isArray(p)?p.join(""):p;c=Qi(c,m+d),s+=m}}if(s){var g=$i(c>>>0);if(!t.hasNameForId(r,g)){var h=n(s,"."+g,void 0,r);t.insertRules(r,g,h)}a.push(g)}}return a.join(" ")},e}(),Zi=/^\s*\/\/.*$/gm,el=[":","[",".","#"];function tl(e){var t,n,r,a,o=void 0===e?bi:e,i=o.options,l=void 0===i?bi:i,u=o.plugins,c=void 0===u?vi:u,s=new si(l),d=[],f=function(e){function t(t){if(t)try{e(t+"}")}catch(e){}}return function(n,r,a,o,i,l,u,c,s,d){switch(n){case 1:if(0===s&&64===r.charCodeAt(0))return e(r+";"),"";break;case 2:if(0===c)return r+"/*|*/";break;case 3:switch(c){case 102:case 112:return e(a[0]+r),"";default:return r+(0===d?"/*|*/":"")}case-2:r.split("/*|*/}").forEach(t)}}}((function(e){d.push(e)})),p=function(e,r,o){return 0===r&&-1!==el.indexOf(o[n.length])||o.match(a)?e:"."+t};function m(e,o,i,l){void 0===l&&(l="&");var u=e.replace(Zi,""),c=o&&i?i+" "+o+" { "+u+" }":u;return t=l,n=o,r=new RegExp("\\"+n+"\\b","g"),a=new RegExp("(\\"+n+"\\b){2,}"),s(i||!o?"":o,c)}return s.use([].concat(c,[function(e,t,a){2===e&&a.length&&a[0].lastIndexOf(n)>0&&(a[0]=a[0].replace(r,p))},f,function(e){if(-2===e){var t=d;return d=[],t}}])),m.hash=c.length?c.reduce((function(e,t){return t.name||Si(15),Qi(e,t.name)}),5381).toString():"",m}var nl=r.createContext(),rl=(nl.Consumer,r.createContext()),al=(rl.Consumer,new qi),ol=tl();function il(){return(0,r.useContext)(nl)||al}function ll(e){var t=(0,r.useState)(e.stylisPlugins),n=t[0],a=t[1],o=il(),i=(0,r.useMemo)((function(){var t=o;return e.sheet?t=e.sheet:e.target&&(t=t.reconstructWithOptions({target:e.target},!1)),e.disableCSSOMInjection&&(t=t.reconstructWithOptions({useCSSOMInjection:!1})),t}),[e.disableCSSOMInjection,e.sheet,e.target]),l=(0,r.useMemo)((function(){return tl({options:{prefix:!e.disableVendorPrefixes},plugins:n})}),[e.disableVendorPrefixes,n]);return(0,r.useEffect)((function(){ci()(n,e.stylisPlugins)||a(e.stylisPlugins)}),[e.stylisPlugins]),r.createElement(nl.Provider,{value:i},r.createElement(rl.Provider,{value:l},e.children))}var ul=function(){function e(e,t){var n=this;this.inject=function(e,t){void 0===t&&(t=ol);var r=n.name+t.hash;e.hasNameForId(n.id,r)||e.insertRules(n.id,r,t(n.rules,r,"@keyframes"))},this.toString=function(){return Si(12,String(n.name))},this.name=e,this.id="sc-keyframes-"+e,this.rules=t}return e.prototype.getName=function(e){return void 0===e&&(e=ol),this.name+e.hash},e}(),cl=/([A-Z])/,sl=/([A-Z])/g,dl=/^ms-/,fl=function(e){return"-"+e.toLowerCase()};function pl(e){return cl.test(e)?e.replace(sl,fl).replace(dl,"-ms-"):e}var ml=function(e){return null==e||!1===e||""===e};function gl(e,t,n,r){if(Array.isArray(e)){for(var a,o=[],i=0,l=e.length;i<l;i+=1)""!==(a=gl(e[i],t,n,r))&&(Array.isArray(a)?o.push.apply(o,a):o.push(a));return o}return ml(e)?"":Ei(e)?"."+e.styledComponentId:Ai(e)?"function"!=typeof(u=e)||u.prototype&&u.prototype.isReactComponent||!t?e:gl(e(t),t,n,r):e instanceof ul?n?(e.inject(n,r),e.getName(r)):e:hi(e)?function e(t,n){var r,a,o=[];for(var i in t)t.hasOwnProperty(i)&&!ml(t[i])&&(Array.isArray(t[i])&&t[i].isCss||Ai(t[i])?o.push(pl(i)+":",t[i],";"):hi(t[i])?o.push.apply(o,e(t[i],i)):o.push(pl(i)+": "+(r=i,(null==(a=t[i])||"boolean"==typeof a||""===a?"":"number"!=typeof a||0===a||r in di?String(a).trim():a+"px")+";")));return n?[n+" {"].concat(o,["}"]):o}(e):e.toString();var u}var hl=function(e){return Array.isArray(e)&&(e.isCss=!0),e};function vl(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];return Ai(e)||hi(e)?hl(gl(gi(vi,[e].concat(n)))):0===n.length&&1===e.length&&"string"==typeof e[0]?e:hl(gl(gi(e,n)))}new Set;var bl=/[!"#$%&'()*+,./:;<=>?@[\\\]^`{|}~-]+/g,Al=/(^-|-$)/g;function yl(e){return e.replace(bl,"-").replace(Al,"")}function El(e){return"string"==typeof e&&!0}var wl=function(e){return"function"==typeof e||"object"==typeof e&&null!==e&&!Array.isArray(e)},Cl=function(e){return"__proto__"!==e&&"constructor"!==e&&"prototype"!==e};function xl(e,t,n){var r=e[n];wl(t)&&wl(r)?Sl(r,t):e[n]=t}function Sl(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];for(var a=0,o=n;a<o.length;a++){var i=o[a];if(wl(i))for(var l in i)Cl(l)&&xl(e,i[l],l)}return e}var kl=r.createContext();kl.Consumer;var Dl={};function Il(e,t,n){var a=Ei(e),o=!El(e),i=t.attrs,l=void 0===i?vi:i,u=t.componentId,c=void 0===u?function(e,t){var n="string"!=typeof e?"sc":yl(e);Dl[n]=(Dl[n]||0)+1;var r=n+"-"+function(e){return $i(Yi(e)>>>0)}("5.3.5"+n+Dl[n]);return t?t+"-"+r:r}(t.displayName,t.parentComponentId):u,s=t.displayName,d=void 0===s?function(e){return El(e)?"styled."+e:"Styled("+yi(e)+")"}(e):s,f=t.displayName&&t.componentId?yl(t.displayName)+"-"+t.componentId:t.componentId||c,p=a&&e.attrs?Array.prototype.concat(e.attrs,l).filter(Boolean):l,m=t.shouldForwardProp;a&&e.shouldForwardProp&&(m=t.shouldForwardProp?function(n,r,a){return e.shouldForwardProp(n,r,a)&&t.shouldForwardProp(n,r,a)}:e.shouldForwardProp);var g,h=new Xi(n,f,a?e.componentStyle:void 0),v=h.isStatic&&0===l.length,b=function(e,t){return function(e,t,n,a){var o=e.attrs,i=e.componentStyle,l=e.defaultProps,u=e.foldedComponentIds,c=e.shouldForwardProp,s=e.styledComponentId,d=e.target,f=function(e,t,n){void 0===e&&(e=bi);var r=mi({},t,{theme:e}),a={};return n.forEach((function(e){var t,n,o,i=e;for(t in Ai(i)&&(i=i(r)),i)r[t]=a[t]="className"===t?(n=a[t],o=i[t],n&&o?n+" "+o:n||o):i[t]})),[r,a]}(function(e,t,n){return void 0===n&&(n=bi),e.theme!==n.theme&&e.theme||t||n.theme}(t,(0,r.useContext)(kl),l)||bi,t,o),p=f[0],m=f[1],g=function(e,t,n,a){var o=il(),i=(0,r.useContext)(rl)||ol;return t?e.generateAndInjectStyles(bi,o,i):e.generateAndInjectStyles(n,o,i)}(i,a,p),h=n,v=m.$as||t.$as||m.as||t.as||d,b=El(v),A=m!==t?mi({},t,{},m):t,y={};for(var E in A)"$"!==E[0]&&"as"!==E&&("forwardedAs"===E?y.as=A[E]:(c?c(E,pi,v):!b||pi(E))&&(y[E]=A[E]));return t.style&&m.style!==t.style&&(y.style=mi({},t.style,{},m.style)),y.className=Array.prototype.concat(u,s,g!==s?g:null,t.className,m.className).filter(Boolean).join(" "),y.ref=h,(0,r.createElement)(v,y)}(g,e,t,v)};return b.displayName=d,(g=r.forwardRef(b)).attrs=p,g.componentStyle=h,g.displayName=d,g.shouldForwardProp=m,g.foldedComponentIds=a?Array.prototype.concat(e.foldedComponentIds,e.styledComponentId):vi,g.styledComponentId=f,g.target=a?e.target:e,g.withComponent=function(e){var r=t.componentId,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(t,["componentId"]),o=r&&r+"-"+(El(e)?e:yl(yi(e)));return Il(e,mi({},a,{attrs:p,componentId:o}),n)},Object.defineProperty(g,"defaultProps",{get:function(){return this._foldedDefaultProps},set:function(t){this._foldedDefaultProps=a?Sl({},e.defaultProps,t):t}}),g.toString=function(){return"."+g.styledComponentId},o&&Qe()(g,e,{attrs:!0,componentStyle:!0,displayName:!0,foldedComponentIds:!0,shouldForwardProp:!0,styledComponentId:!0,target:!0,withComponent:!0}),g}var Pl,Bl=function(e){return function e(t,n,r){if(void 0===r&&(r=bi),!(0,li.isValidElementType)(n))return Si(1,String(n));var a=function(){return t(n,r,vl.apply(void 0,arguments))};return a.withConfig=function(a){return e(t,n,mi({},r,{},a))},a.attrs=function(a){return e(t,n,mi({},r,{attrs:Array.prototype.concat(r.attrs,a).filter(Boolean)}))},a}(Il,e)};["a","abbr","address","area","article","aside","audio","b","base","bdi","bdo","big","blockquote","body","br","button","canvas","caption","cite","code","col","colgroup","data","datalist","dd","del","details","dfn","dialog","div","dl","dt","em","embed","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","i","iframe","img","input","ins","kbd","keygen","label","legend","li","link","main","map","mark","marquee","menu","menuitem","meta","meter","nav","noscript","object","ol","optgroup","option","output","p","param","picture","pre","progress","q","rp","rt","ruby","s","samp","script","section","select","small","source","span","strong","style","sub","summary","sup","table","tbody","td","textarea","tfoot","th","thead","time","title","tr","track","u","ul","var","video","wbr","circle","clipPath","defs","ellipse","foreignObject","g","image","line","linearGradient","marker","mask","path","pattern","polygon","polyline","radialGradient","rect","stop","svg","text","textPath","tspan"].forEach((function(e){Bl[e]=Bl(e)})),Pl=function(e,t){this.rules=e,this.componentId=t,this.isStatic=Ji(e),qi.registerId(this.componentId+1)}.prototype,Pl.createStyles=function(e,t,n,r){var a=r(gl(this.rules,t,n,r).join(""),""),o=this.componentId+e;n.insertRules(o,o,a)},Pl.removeStyles=function(e,t){t.clearRules(this.componentId+e)},Pl.renderStyles=function(e,t,n,r){e>2&&qi.registerId(this.componentId+e),this.removeStyles(e,n),this.createStyles(e,t,n,r)},function(){var e=function(){var e=this;this._emitSheetCSS=function(){var t=e.instance.toString();if(!t)return"";var n=ji();return"<style "+[n&&'nonce="'+n+'"',wi+'="true"','data-styled-version="5.3.5"'].filter(Boolean).join(" ")+">"+t+"</style>"},this.getStyleTags=function(){return e.sealed?Si(2):e._emitSheetCSS()},this.getStyleElement=function(){var t;if(e.sealed)return Si(2);var n=((t={})[wi]="",t["data-styled-version"]="5.3.5",t.dangerouslySetInnerHTML={__html:e.instance.toString()},t),a=ji();return a&&(n.nonce=a),[r.createElement("style",mi({},n,{key:"sc-0-0"}))]},this.seal=function(){e.sealed=!0},this.instance=new qi({isServer:!0}),this.sealed=!1}.prototype;e.collectStyles=function(e){return this.sealed?Si(2):r.createElement(ll,{sheet:this.instance},e)},e.interleaveWithNodeStream=function(e){return Si(3)}}();const Ol=Bl;function Nl(e){return Nl="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Nl(e)}var Rl,_l;function Tl(){return Tl=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},Tl.apply(this,arguments)}function Fl(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function jl(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function Ll(e,t){return Ll=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},Ll(e,t)}function Ml(e,t){if(t&&("object"===Nl(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return zl(e)}function zl(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function Ul(e){return Ul=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},Ul(e)}function Gl(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function Wl(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}var ql=Ol.ul(Rl||(Rl=Wl(["\n  gap: 0.5rem;\n  display: grid;\n"]))),Hl=Ol.li(_l||(_l=Wl(["\n  padding: 0.5rem;\n  text-align: center;\n  border-radius: 0.5rem;\n  background-color: lightgrey;\n"])));const Vl=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&Ll(e,t)}(l,e);var t,n,a,o,i=(a=l,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=Ul(a);if(o){var n=Ul(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return Ml(this,e)});function l(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,l),Gl(zl(t=i.call(this,e)),"addToArray",(function(e,t,n){var r=n.find((function(t,n){return n===e.source.index}));return t.concat(r)})),Gl(zl(t),"removeFromArray",(function(e,t){var n=t.find((function(t,n){if(n===e.source.index)return t}));return t.filter((function(e){return n!==e}))})),Gl(zl(t),"handleOnDragEnd",(function(e){if(e.destination){var n=e.source.droppableId,r=e.destination.droppableId;if(n!==r)switch(r){case"components":t.setState({components:t.addToArray(e,t.state.components,t.state.configurator),configurator:t.removeFromArray(e,t.state.configurator)});break;case"configurator":t.setState({components:t.removeFromArray(e,t.state.components),configurator:t.addToArray(e,t.state.configurator,t.state.components)})}if(n===r){var a="components"===r?t.state.components:t.state.configurator,o=Array.from(a),i=(u=o.splice(e.source.index,1),c=1,function(e){if(Array.isArray(e))return e}(u)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,a,o=[],i=!0,l=!1;try{for(n=n.call(e);!(i=(r=n.next()).done)&&(o.push(r.value),!t||o.length!==t);i=!0);}catch(e){l=!0,a=e}finally{try{i||null==n.return||n.return()}finally{if(l)throw a}}return o}}(u,c)||function(e,t){if(e){if("string"==typeof e)return Fl(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Fl(e,t):void 0}}(u,c)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}())[0];o.splice(e.destination.index,0,i);var l=a.map((function(e,t){return o[t]}));switch(r){case"components":t.setState({components:l});break;case"configurator":t.setState({configurator:l})}}}var u,c})),t.state={components:[{id:A(),title:"About"},{id:A(),title:"Links"},{id:A(),title:"Skills"},{id:A(),title:"Statement"},{id:A(),title:"Education"},{id:A(),title:"Experience"}],configurator:[]},t}return t=l,(n=[{key:"render",value:function(){var e=this;if(0===this.props.page)return r.createElement("div",{className:"config-panels"},r.createElement(bo,{onDragEnd:this.handleOnDragEnd},r.createElement(Jo,{droppableId:"configurator"},(function(t){return r.createElement(ql,Tl({className:"configurator"},t.droppableProps,{ref:t.innerRef}),e.state.configurator.map((function(e,t){var n=e.id,a=e.title;return r.createElement(Vo,{key:n+"B",draggableId:n+"B",index:t},(function(e){return r.createElement(Hl,Tl({ref:e.innerRef},e.draggableProps,e.dragHandleProps),r.createElement("p",null,a))}))})),t.placeholder)})),r.createElement(Jo,{droppableId:"components"},(function(t){return r.createElement(ql,Tl({className:"components"},t.droppableProps,{ref:t.innerRef}),e.state.components.map((function(e,t){var n=e.id,a=e.title;return r.createElement(Vo,{key:n+"A",draggableId:n+"A",index:t},(function(e){return r.createElement(Hl,Tl({ref:e.innerRef},e.draggableProps,e.dragHandleProps),r.createElement("p",null,a))}))})),t.placeholder)}))))}}])&&jl(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),l}(r.Component);function $l(e){return $l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},$l(e)}function Ql(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function Yl(e,t){return Yl=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},Yl(e,t)}function Jl(e,t){if(t&&("object"===$l(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return Kl(e)}function Kl(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function Xl(e){return Xl=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},Xl(e)}function Zl(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var eu=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&Yl(e,t)}(l,e);var t,n,a,o,i=(a=l,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=Xl(a);if(o){var n=Xl(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return Jl(this,e)});function l(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,l),Zl(Kl(t=i.call(this,e)),"setFormData",(function(e){return t.setState({cv:e})})),Zl(Kl(t),"updateCvIndex",(function(e){return t.setState({cvComponents:e})})),Zl(Kl(t),"navToPage",(function(e){return t.setState({index:e})})),t.state={pages:[],index:1,sections:[],cv:{about:{},links:[],skills:[],statement:"",education:[],experience:[]},cvComponents:[{id:A(),section:"about",content:{first:"James",last:"Kirk",email:"captain@enterprise.fed",telephone:"07733115789"}},{id:A(),section:"links",content:[{type:"twitter",handle:"@StarTrek"},{type:"instagram",handle:"@StarTrek"},{type:"website",handle:"www.startrek.com"},{type:"github",handle:"www.github.com/startrek"}]},{id:A(),section:"skills",content:["diplomacy","leadership","combat","tactical"]},{id:A(),section:"statement",content:"My goal is to be the best captain to my crew and with many years of experience, I am ready for the next mission into outer space - to boldly go where no one has gone before."},{id:A(),section:"education",content:[{institute:"Starfleet Academy",date:{start:"15/08/24",end:"17/08/30"},quals:["2.1 BA Space Studies","MA Intergalatic Peacekeeping","PHD New Worlds"]}]},{id:A(),section:"experience",content:[{employer:"Starfleet",date:{start:"15/08/30",end:"17/08/45"},job:{title:"captain",description:"Captain to the SS Enterprise, explored strange new worlds and brokered peace across the cosmos."}},{employer:"Starfleet",date:{start:"15/08/30",end:"17/08/45"},job:{title:"captain",description:"Captain to the SS Enterprise, explored strange new worlds and brokered peace across the cosmos."}},{employer:"Starfleet",date:{start:"15/08/30",end:"117/08/45"},job:{title:"captain",description:"Captain to the SS Enterprise, explored strange new worlds and brokered peace across the cosmos."}}]}]},t}return t=l,(n=[{key:"componentDidMount",value:function(){}},{key:"componentDidUpdate",value:function(e,t){console.table(this.state.cv)}},{key:"render",value:function(){return r.createElement("div",{className:"wrapper"},r.createElement(k,{page:this.state.index,navToPage:this.navToPage}),r.createElement(D,{page:this.state.index}),r.createElement("main",null,r.createElement(Vl,{page:this.state.index}),r.createElement(Ce,{page:this.state.index,setFormData:this.setFormData}),r.createElement(ii,{page:this.state.index,cvComponents:this.state.cvComponents,updateCvIndex:this.updateCvIndex})))}}])&&Ql(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),l}(r.Component);const tu=eu;(0,a.s)(document.querySelector("#root")).render(r.createElement(tu,null))},426:(e,t,n)=>{"use strict";n.d(t,{Z:()=>l});var r=n(537),a=n.n(r),o=n(645),i=n.n(o)()(a());i.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Pacifico&family=Rajdhani:wght@300&display=swap);"]),i.push([e.id,'*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  font-size: 62.5%;\n  font-family: "Rajdhani", sans-serif;\n  --border-radius: 0.5rem;\n  --main-brand: #ddf1f1;\n  --format-padding: 1rem;\n}\n\nhtml {\n  min-height: 100vh;\n}\n\nbody {\n  font-size: 1.6rem;\n}\n\nh1 {\n  top: 1rem;\n  font-size: 3.2rem;\n  position: relative;\n  font-family: "Pacifico", cursive;\n}\n\nul {\n  list-style: none;\n}\n\ni {\n  font-size: 2.2rem;\n  position: relative;\n}\ni div {\n  inset: 0;\n  top: 25%;\n  left: 15%;\n  width: 70%;\n  height: 1.2rem;\n  z-index: -1;\n  position: absolute;\n  background-color: white;\n}\n\n.wrapper {\n  min-height: 100vh;\n  display: flex;\n  overflow-x: hidden;\n  align-items: center;\n  flex-direction: column;\n}\n\n/*=====\n  Nav\n=======*/\nnav {\n  width: 100%;\n  position: relative;\n  padding: 2rem 3rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.01);\n  border-bottom: 0.5rem solid lightgrey;\n}\n@media (max-width: 827px) {\n  nav {\n    padding: 0 3rem 2rem;\n    flex-direction: column;\n  }\n}\n\nnav .logo {\n  display: grid;\n  align-items: center;\n  position: relative;\n}\n@media (max-width: 827px) {\n  nav .logo {\n    align-self: flex-start;\n  }\n}\n\nnav ul {\n  gap: 4rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 2rem;\n  border-radius: var(--border-radius);\n  background-color: rgba(55, 241, 241, 0.1);\n  border-bottom: 0.5rem solid lightgrey;\n  box-shadow: 0 0 0.1rem 0.05rem rgba(211, 211, 211, 0.5);\n}\n@media (max-width: 827px) {\n  nav ul {\n    padding: 1rem;\n    align-self: flex-end;\n  }\n}\n\n.logo p {\n  font-weight: 500;\n  font-size: 1.5rem;\n  left: 1rem;\n  position: relative;\n}\n\n/*=======\n  Aside\n=========*/\naside {\n  margin-top: 4rem;\n  width: -webkit-fit-content;\n  width: -moz-fit-content;\n  width: fit-content;\n  position: relative;\n}\n\naside ul,\naside li {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\naside li {\n  margin: 0 2rem;\n  padding: 0.2rem;\n  z-index: 1;\n  position: relative;\n  border-radius: var(--border-radius);\n  background-color: var(--main-brand);\n  border-bottom: 0.3rem solid lightgrey;\n  box-shadow: 0 0 0.1rem 0.05rem rgba(211, 211, 211, 0.5);\n}\n\naside p {\n  font-weight: bold;\n  width: 8rem;\n  cursor: pointer;\n  text-align: center;\n  margin-right: 0.5rem;\n  border-radius: var(--border-radius);\n  background-color: lavender;\n}\n\naside i {\n  color: rgb(0, 180, 0);\n  color: lightgrey;\n  border-radius: 100%;\n  margin-right: 0.5rem;\n}\n\n.strikethrough {\n  top: 50%;\n  left: 2rem;\n  width: calc(100% - 4rem);\n  height: 0.1rem;\n  position: absolute;\n  background-color: lightgray;\n}\n\n/*=======\n  Main\n=========*/\nmain {\n  flex: 1;\n  display: grid;\n  justify-content: center;\n  padding: 3rem;\n  max-width: 90vw;\n  width: 100%;\n}\nmain i {\n  cursor: pointer;\n}\n@media (max-width: 827px) {\n  main {\n    max-width: 100vw;\n    padding: 3rem 1rem;\n  }\n}\n\n/*=======\n  Form\n=========*/\nform {\n  position: relative;\n}\n\nform ul {\n  gap: 3rem;\n  display: grid;\n}\n\n.form-ul > li {\n  min-height: 15rem;\n  overflow: hidden;\n  border: 0.1rem solid lightgray;\n  border-radius: var(--border-radius);\n  position: relative;\n}\n\n/*===================\n  Form: Section Nav\n=====================*/\n.section-bypass-mask {\n  width: 100%;\n  height: 100%;\n  z-index: -1;\n  top: 3rem;\n  position: absolute;\n  background-color: rgba(211, 211, 211, 0.5);\n}\n\n.section-nav,\n.section-nav ul {\n  display: flex;\n  align-items: center;\n}\n\n.section-nav {\n  z-index: 0;\n  position: relative;\n  justify-content: space-between;\n}\n\n.section-nav h2 {\n  margin-left: 1rem;\n}\n\n.section-nav ul {\n  z-index: 2;\n  height: 3.1rem;\n  padding: 0 1rem;\n  position: relative;\n  background-color: var(--main-brand);\n  border-top-left-radius: var(--border-radius);\n}\n\n.section-nav i {\n  font-size: 1.8rem;\n}\n\n/*=================\n  Form: Fieldsets\n===================*/\nfieldset {\n  gap: 1rem;\n  width: 100%;\n  display: flex;\n  padding: 2rem;\n  padding-right: 9rem;\n  flex-wrap: wrap;\n  justify-content: center;\n  border: none;\n  overflow: hidden;\n  background-color: var(--main-brand);\n  border-radius: var(--border-radius);\n  border-top-right-radius: 0;\n  border-bottom: 0.5rem solid lightgrey;\n}\n@media (max-width: 827px) {\n  fieldset {\n    padding: 2rem;\n  }\n}\n\nlabel {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: calc(50% - 1rem);\n  font-weight: 600;\n}\n@media (max-width: 827px) {\n  label {\n    flex-direction: column;\n  }\n}\n\nlabel span {\n  width: 12rem;\n  text-align: right;\n  margin-left: 0.25rem;\n  margin-right: 0.5rem;\n}\n@media (max-width: 827px) {\n  label span {\n    text-align: left;\n    align-self: flex-start;\n  }\n}\n\ninput,\ntextarea {\n  padding: 0.5rem;\n}\n\ninput {\n  flex: 1;\n}\n@media (max-width: 827px) {\n  input {\n    width: 100%;\n  }\n}\n\n/*=================\n  Fieldset: About\n==================*/\n#about {\n  height: 15rem;\n}\n@media (max-width: 827px) {\n  #about {\n    -moz-column-gap: 2rem;\n         column-gap: 2rem;\n  }\n}\n\n/*=====================\n  Fieldset: Statement\n=======================*/\n#statement {\n  height: -webkit-fit-content;\n  height: -moz-fit-content;\n  height: fit-content;\n  justify-content: flex-start;\n}\n#statement textarea {\n  width: 100%;\n  min-height: 10rem;\n  resize: vertical;\n}\n\n/*=====================\n  Fieldset: Education\n=======================*/\n#education,\n#experience {\n  justify-content: flex-start;\n  padding-right: 14rem;\n}\n@media (max-width: 827px) {\n  #education,\n#experience {\n    padding: 2rem;\n  }\n}\n\n#institution {\n  width: 100%;\n}\n\n.study-dates {\n  margin-left: auto;\n  position: relative;\n  right: 1rem;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n@media (max-width: 827px) {\n  .study-dates {\n    right: 0;\n  }\n}\n.study-dates label span {\n  width: 5rem;\n}\n.study-dates input {\n  max-width: 15rem;\n}\n.study-dates p {\n  margin-top: 2rem;\n}\n\n.study-date {\n  width: 50%;\n}\n\n.quals-container,\n.jobs-container {\n  align-self: flex-start;\n  gap: 0.5rem;\n  width: 44%;\n  padding: 0.5rem;\n  min-height: 100%;\n  border: 0.18rem dashed white;\n  background-color: rgba(0, 0, 0, 0.05);\n  border-radius: var(--border-radius);\n  display: flex;\n  flex-wrap: wrap;\n  align-content: flex-start;\n}\n.quals-container p,\n.jobs-container p {\n  margin: 0.25rem;\n  cursor: pointer;\n  padding: 0 0.5rem;\n  font-weight: bold;\n  color: white;\n  font-size: 1.4rem;\n  background-color: rgba(0, 0, 0, 0.5);\n  border-radius: var(--border-radius);\n  transition: 0.3s;\n}\n.quals-container p:hover,\n.jobs-container p:hover {\n  background-color: black;\n}\n\n/*======================\n  Fieldset: Containers\n========================*/\n.qualifications,\n.jobs {\n  width: 100%;\n  min-height: 10rem;\n  display: flex;\n  align-items: center;\n  border: 0.2rem solid lightgrey;\n  border-radius: var(--border-radius);\n  padding: 0.2rem 0.2rem 0.2rem 0.75rem;\n}\n.qualifications label,\n.jobs label {\n  align-self: center;\n}\n.qualifications i,\n.jobs i {\n  color: green;\n  margin: 0 1rem;\n  margin-right: 4rem;\n}\n@media (max-width: 827px) {\n  .qualifications i,\n.jobs i {\n    margin: 0 1rem;\n    margin-top: 2rem;\n  }\n}\n\n.jobs {\n  min-height: 15rem;\n}\n.jobs textarea {\n  min-height: 10rem;\n  resize: vertical;\n}\n\n.job-inputs {\n  gap: 1rem;\n  display: grid;\n  width: 49%;\n  padding: 1rem 0;\n}\n.job-inputs label {\n  width: 100%;\n}\n.job-inputs label span {\n  width: 6rem;\n}\n\n.add-list {\n  width: 100%;\n  min-height: 2.8rem;\n  position: relative;\n  padding: 0.5rem;\n  background-color: rgb(215, 245, 250);\n  border-bottom-left-radius: var(--border-radius);\n  border-bottom-right-radius: var(--border-radius);\n  gap: 0.5rem;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n}\n.add-list p {\n  cursor: pointer;\n  padding: 0 0.5rem;\n  font-weight: bold;\n  color: white;\n  font-size: 1.4rem;\n  background-color: rgba(0, 0, 0, 0.5);\n  border-radius: var(--border-radius);\n  transition: 0.3s;\n}\n.add-list p:hover {\n  background-color: black;\n}\n\n.add-list-title {\n  width: -webkit-fit-content;\n  width: -moz-fit-content;\n  width: fit-content;\n  position: relative;\n  display: flex;\n  align-items: center;\n}\n.add-list-title i {\n  color: black;\n  margin: 0 0.2rem;\n  font-size: 1.25rem;\n}\n\ninput[type=date] {\n  cursor: pointer;\n}\n\n.fa-check-circle {\n  cursor: auto;\n  color: lightgrey;\n}\n\n.config-panels {\n  height: 100%;\n  gap: 2rem;\n  display: flex;\n  justify-content: space-between;\n}\n\n.components li,\n.configurator li {\n  height: -webkit-fit-content;\n  height: -moz-fit-content;\n  height: fit-content;\n}\n\n.configurator {\n  flex: 1;\n  display: grid;\n  align-content: flex-start;\n}\n.configurator li {\n  display: grid;\n  align-items: center;\n}\n@media (max-width: 827px) {\n  .configurator {\n    width: 65%;\n  }\n}\n\n.components {\n  width: 25%;\n  align-content: flex-start;\n}\n@media (max-width: 827px) {\n  .components {\n    width: 35%;\n  }\n}\n.components li {\n  width: 100%;\n}\n\n.components li p,\n.configurator li p {\n  -webkit-user-select: none;\n     -moz-user-select: none;\n      -ms-user-select: none;\n          user-select: none;\n}\n\n/*==============\n  Format Editor\n=================*/\n.format-section {\n  -webkit-user-select: none;\n     -moz-user-select: none;\n      -ms-user-select: none;\n          user-select: none;\n  background-color: white;\n  padding: var(--format-padding);\n  border-bottom: 0.5rem solid var(--main-brand);\n  border-radius: var(--border-radius);\n}\n.format-section p,\n.format-section span {\n  font-size: 2rem;\n}\n\n/*==============\n  Format About\n================*/\n#format-about ul {\n  gap: 0.5rem;\n  display: flex;\n  padding: var(--format-padding);\n  justify-content: space-between;\n}\n@media (max-width: 827px) {\n  #format-about ul {\n    flex-direction: column;\n  }\n}\n#format-about li {\n  height: 100%;\n  font-size: 3rem;\n}\n#format-about li:first-child p {\n  font-size: 6rem;\n}\n#format-about li:last-child {\n  display: flex;\n  flex-direction: column;\n}\n\n/*==============\n  Format Links\n================*/\n#format-links ul {\n  display: flex;\n  flex-wrap: wrap;\n  padding: var(--format-padding);\n  justify-content: space-between;\n}\n#format-links ul li {\n  width: 50%;\n  min-width: -webkit-fit-content;\n  min-width: -moz-fit-content;\n  min-width: fit-content;\n  margin: 0.5rem 0;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n}\n@media (max-width: 827px) {\n  #format-links ul li {\n    width: 50%;\n  }\n}\n#format-links ul li p {\n  margin-right: 1rem;\n}\n\n/*===============\n  Format Skills\n=================*/\n#format-skills ul {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-evenly;\n  padding: var(--format-padding);\n}\n#format-skills li {\n  margin: 0 0.5rem;\n}\n\n/*==================\n  Format Statement\n====================*/\n#format-statement p {\n  text-align: center;\n  padding: var(--format-padding);\n}\n\n/*==================\n  Format Education\n====================*/\n.format-ed-item {\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column-reverse;\n  padding: var(--format-padding);\n}\n.format-ed-item ul,\n.format-ed-item ul li {\n  display: flex;\n}\n.format-ed-item ul {\n  border: 0.2rem solid var(--main-brand);\n}\n.format-ed-item ul:first-child {\n  width: 100%;\n  display: grid;\n}\n.format-ed-item ul:first-child li {\n  width: 100%;\n  padding: var(--border-radius);\n  margin: calc(var(--border-radius) / 2) 0;\n  background-color: rgba(255, 150, 200, 0.1);\n}\n.format-ed-item ul:last-child {\n  width: 100%;\n  display: flex;\n}\n.format-ed-item ul:last-child li {\n  gap: var(--border-radius);\n  width: 100%;\n  display: grid;\n  padding: var(--format-padding);\n}\n.format-ed-item ul:last-child li p {\n  color: black;\n  font-size: 1.6rem;\n  font-weight: bold;\n  text-align: center;\n  padding: calc(var(--format-padding) / 2);\n  border-radius: var(--border-radius);\n  background-color: rgba(224, 224, 224, 0.5);\n}\n\n/*===================\n  Format Experience\n=====================*//*# sourceMappingURL=style.css.map */',"",{version:3,sources:["webpack://./src/style.scss","webpack://./src/style.css"],names:[],mappings:"AAmBA;;;EAGE,SAAA;EACA,UAAA;EACA,sBAAA;ACjBF;;ADqBA;EACE,gBAAA;EACA,mCAAA;EAEA,uBAAA;EACA,qBAAA;EAGA,sBAAA;ACrBF;;ADwBA;EACE,iBAAA;ACrBF;;ADwBA;EACE,iBAAA;ACrBF;;ADwBA;EACE,SAAA;EACA,iBAAA;EACA,kBAAA;EACA,gCAAA;ACrBF;;ADwBA;EACE,gBAAA;ACrBF;;ADwBA;EACE,iBAAA;EACA,kBAAA;ACrBF;ADuBE;EACE,QAAA;EACA,QAAA;EACA,SAAA;EACA,UAAA;EACA,cAAA;EACA,WAAA;EACA,kBAAA;EACA,uBAAA;ACrBJ;;ADyBA;EACE,iBAAA;EACA,aAAA;EACA,kBAAA;EACA,mBAAA;EACA,sBAAA;ACtBF;;ADyBA;;QAAA;AAGA;EACE,WAAA;EACA,kBAAA;EACA,kBAAA;EACA,aAAA;EACA,8BAAA;EACA,mBAAA;EACA,qCAAA;EACA,qCAAA;ACtBF;AD3DE;EAyEF;IAWI,oBAAA;IACA,sBAAA;ECrBF;AACF;;ADwBA;EACE,aAAA;EACA,mBAAA;EACA,kBAAA;ACrBF;ADvEE;EAyFF;IAMI,sBAAA;ECpBF;AACF;;ADuBA;EACE,SAAA;EACA,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,aAAA;EACA,mCAAA;EACA,yCAAA;EACA,qCAAA;EACA,uDAAA;ACpBF;ADxFE;EAmGF;IAYI,aAAA;IACA,oBAAA;ECnBF;AACF;;ADsBA;EACE,gBAAA;EACA,iBAAA;EACA,UAAA;EACA,kBAAA;ACnBF;;ADsBA;;UAAA;AAGA;EACE,gBAAA;EACA,0BAAA;EAAA,uBAAA;EAAA,kBAAA;EACA,kBAAA;ACnBF;;ADsBA;;EAEE,aAAA;EACA,mBAAA;EACA,uBAAA;ACnBF;;ADsBA;EACE,cAAA;EACA,eAAA;EACA,UAAA;EACA,kBAAA;EACA,mCAAA;EACA,mCAAA;EACA,qCAAA;EACA,uDAAA;ACnBF;;ADsBA;EACE,iBAAA;EACA,WAAA;EACA,eAAA;EACA,kBAAA;EACA,oBAAA;EACA,mCAAA;EACA,0BAAA;ACnBF;;ADsBA;EACE,qBAAA;EACA,gBAAA;EACA,mBAAA;EACA,oBAAA;ACnBF;;ADsBA;EACE,QAAA;EACA,UAAA;EACA,wBAAA;EACA,cAAA;EACA,kBAAA;EACA,2BAAA;ACnBF;;ADsBA;;UAAA;AAGA;EACE,OAAA;EACA,aAAA;EACA,uBAAA;EACA,aAAA;EACA,eAAA;EACA,WAAA;ACnBF;ADqBE;EACE,eAAA;ACnBJ;ADzKE;EAmLF;IAaI,gBAAA;IACA,kBAAA;ECnBF;AACF;;ADsBA;;UAAA;AAGA;EACE,kBAAA;ACnBF;;ADsBA;EACE,SAAA;EACA,aAAA;ACnBF;;ADsBA;EACE,iBAAA;EACA,gBAAA;EACA,8BAAA;EACA,mCAAA;EAEA,kBAAA;ACpBF;;ADuBA;;sBAAA;AAGA;EACE,WAAA;EACA,YAAA;EACA,WAAA;EACA,SAAA;EACA,kBAAA;EACA,0CAAA;ACpBF;;ADuBA;;EAEE,aAAA;EACA,mBAAA;ACpBF;;ADuBA;EACE,UAAA;EACA,kBAAA;EACA,8BAAA;ACpBF;;ADuBA;EACE,iBAAA;ACpBF;;ADuBA;EACE,UAAA;EACA,cAAA;EACA,eAAA;EACA,kBAAA;EACA,mCAAA;EACA,4CAAA;ACpBF;;ADuBA;EACE,iBAAA;ACpBF;;ADuBA;;oBAAA;AAGA;EACE,SAAA;EACA,WAAA;EACA,aAAA;EACA,aAAA;EACA,mBAAA;EACA,eAAA;EACA,uBAAA;EACA,YAAA;EAEA,gBAAA;EACA,mCAAA;EACA,mCAAA;EACA,0BAAA;EACA,qCAAA;ACrBF;AD/PE;EAsQF;IAiBI,aAAA;ECpBF;AACF;;ADuBA;EACE,aAAA;EACA,mBAAA;EACA,8BAAA;EACA,uBAAA;EACA,gBAAA;ACpBF;AD5QE;EA2RF;IAQI,sBAAA;ECnBF;AACF;;ADsBA;EACE,YAAA;EACA,iBAAA;EACA,oBAAA;EACA,oBAAA;ACnBF;ADxRE;EAuSF;IAOI,gBAAA;IACA,sBAAA;EClBF;AACF;;ADqBA;;EAEE,eAAA;AClBF;;ADqBA;EACE,OAAA;AClBF;ADvSE;EAwTF;IAII,WAAA;ECjBF;AACF;;ADoBA;;mBAAA;AAGA;EACE,aAAA;ACjBF;ADnTE;EAmUF;IAII,qBAAA;SAAA,gBAAA;EChBF;AACF;;ADmBA;;wBAAA;AAGA;EACE,2BAAA;EAAA,wBAAA;EAAA,mBAAA;EACA,2BAAA;AChBF;ADkBE;EACE,WAAA;EACA,iBAAA;EACA,gBAAA;AChBJ;;ADoBA;;wBAAA;AAGA;;EAEE,2BAAA;EACA,oBAAA;ACjBF;AD9UE;EA4VF;;IAMI,aAAA;ECfF;AACF;;ADkBA;EACE,WAAA;ACfF;;ADkBA;EACE,iBAAA;EACA,kBAAA;EACA,WAAA;EAEA,aAAA;EACA,mBAAA;EACA,8BAAA;AChBF;ADjWE;EA0WF;IAUI,QAAA;ECfF;AACF;ADiBE;EACE,WAAA;ACfJ;ADkBE;EACE,gBAAA;AChBJ;ADmBE;EACE,gBAAA;ACjBJ;;ADqBA;EACE,UAAA;AClBF;;ADqBA;;EAEE,sBAAA;EAEA,WAAA;EACA,UAAA;EACA,eAAA;EACA,gBAAA;EACA,4BAAA;EACA,qCAAA;EACA,mCAAA;EAEA,aAAA;EACA,eAAA;EACA,yBAAA;ACpBF;ADsBE;;EACE,eAAA;EACA,eAAA;EACA,iBAAA;EACA,iBAAA;EACA,YAAA;EACA,iBAAA;EACA,oCAAA;EACA,mCAAA;EACA,gBAAA;ACnBJ;ADsBE;;EACE,uBAAA;ACnBJ;;ADuBA;;yBAAA;AAGA;;EAEE,WAAA;EACA,iBAAA;EACA,aAAA;EACA,mBAAA;EACA,8BAAA;EACA,mCAAA;EACA,qCAAA;ACpBF;ADsBE;;EACE,kBAAA;ACnBJ;ADsBE;;EACE,YAAA;EACA,cAAA;EACA,kBAAA;ACnBJ;AD1aE;EAicE;;IACE,cAAA;IACA,gBAAA;ECnBJ;AACF;;ADuBA;EACE,iBAAA;ACpBF;ADsBE;EACE,iBAAA;EACA,gBAAA;ACpBJ;;ADwBA;EACE,SAAA;EACA,aAAA;EACA,UAAA;EACA,eAAA;ACrBF;ADuBE;EACE,WAAA;ACrBJ;ADwBE;EACE,WAAA;ACtBJ;;AD0BA;EACE,WAAA;EACA,kBAAA;EACA,kBAAA;EACA,eAAA;EACA,oCAAA;EACA,+CAAA;EACA,gDAAA;EAEA,WAAA;EACA,aAAA;EACA,eAAA;EACA,mBAAA;EACA,uBAAA;ACxBF;AD0BE;EACE,eAAA;EACA,iBAAA;EACA,iBAAA;EACA,YAAA;EACA,iBAAA;EACA,oCAAA;EACA,mCAAA;EACA,gBAAA;ACxBJ;AD2BE;EACE,uBAAA;ACzBJ;;AD6BA;EACE,0BAAA;EAAA,uBAAA;EAAA,kBAAA;EACA,kBAAA;EACA,aAAA;EACA,mBAAA;AC1BF;AD4BE;EACE,YAAA;EACA,gBAAA;EACA,kBAAA;AC1BJ;;AD8BA;EACE,eAAA;AC3BF;;AD8BA;EACE,YAAA;EACA,gBAAA;AC3BF;;AD+BA;EACE,YAAA;EACA,SAAA;EACA,aAAA;EACA,8BAAA;AC5BF;;AD+BA;;EAEE,2BAAA;EAAA,wBAAA;EAAA,mBAAA;AC5BF;;AD+BA;EACE,OAAA;EACA,aAAA;EACA,yBAAA;AC5BF;AD8BE;EACE,aAAA;EACA,mBAAA;AC5BJ;AD7gBE;EAkiBF;IAWI,UAAA;EC5BF;AACF;;AD+BA;EACE,UAAA;EACA,yBAAA;AC5BF;ADvhBE;EAijBF;IAKI,UAAA;EC3BF;AACF;AD6BE;EACE,WAAA;AC3BJ;;AD+BA;;EAEE,yBAAA;KAAA,sBAAA;MAAA,qBAAA;UAAA,iBAAA;AC5BF;;AD+BA;;kBAAA;AAGA;EACE,yBAAA;KAAA,sBAAA;MAAA,qBAAA;UAAA,iBAAA;EACA,uBAAA;EACA,8BAAA;EACA,6CAAA;EACA,mCAAA;AC5BF;AD8BE;;EAEE,eAAA;AC5BJ;;ADgCA;;iBAAA;AAIE;EACE,WAAA;EACA,aAAA;EACA,8BAAA;EACA,8BAAA;AC9BJ;AD7jBE;EAulBA;IAOI,sBAAA;EC7BJ;AACF;ADgCE;EACE,YAAA;EACA,eAAA;AC9BJ;ADiCE;EACE,eAAA;AC/BJ;ADkCE;EACE,aAAA;EACA,sBAAA;AChCJ;;ADoCA;;iBAAA;AAIE;EACE,aAAA;EACA,eAAA;EACA,8BAAA;EACA,8BAAA;AClCJ;ADoCI;EACE,UAAA;EACA,8BAAA;EAAA,2BAAA;EAAA,sBAAA;EACA,gBAAA;EACA,aAAA;EACA,eAAA;EACA,2BAAA;AClCN;AD/lBE;EA2nBE;IASI,UAAA;ECjCN;AACF;ADmCM;EACE,kBAAA;ACjCR;;ADuCA;;kBAAA;AAIE;EACE,aAAA;EACA,eAAA;EACA,6BAAA;EACA,8BAAA;ACrCJ;ADwCE;EACE,gBAAA;ACtCJ;;AD0CA;;qBAAA;AAIE;EACE,kBAAA;EACA,8BAAA;ACxCJ;;AD4CA;;qBAAA;AAGA;EACE,aAAA;EACA,eAAA;EACA,8BAAA;EACA,8BAAA;ACzCF;AD2CE;;EAEE,aAAA;ACzCJ;AD4CE;EACE,sCAAA;AC1CJ;AD8CE;EACE,WAAA;EACA,aAAA;AC5CJ;AD8CI;EACE,WAAA;EACA,6BAAA;EACA,wCAAA;EACA,0CAAA;AC5CN;ADiDE;EACE,WAAA;EACA,aAAA;AC/CJ;ADiDI;EACE,yBAAA;EACA,WAAA;EACA,aAAA;EACA,8BAAA;AC/CN;ADiDM;EACE,YAAA;EACA,iBAAA;EACA,iBAAA;EACA,kBAAA;EACA,wCAAA;EACA,mCAAA;EACA,0CAAA;AC/CR;;ADqDA;;sBAAA,CAAA,oCAAA",sourceRoot:""}]);const l=i},645:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,a,o){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var l=0;l<this.length;l++){var u=this[l][0];null!=u&&(i[u]=!0)}for(var c=0;c<e.length;c++){var s=[].concat(e[c]);r&&i[s[0]]||(void 0!==o&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=o),n&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=n):s[2]=n),a&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=a):s[4]="".concat(a)),t.push(s))}},t}},537:e=>{"use strict";e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(a," */"),i=n.sources.map((function(e){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(e," */")}));return[t].concat(i).concat([o]).join("\n")}return[t].join("\n")}},679:(e,t,n)=>{"use strict";var r=n(864),a={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},o={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},i={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},l={};function u(e){return r.isMemo(e)?i:l[e.$$typeof]||a}l[r.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},l[r.Memo]=i;var c=Object.defineProperty,s=Object.getOwnPropertyNames,d=Object.getOwnPropertySymbols,f=Object.getOwnPropertyDescriptor,p=Object.getPrototypeOf,m=Object.prototype;e.exports=function e(t,n,r){if("string"!=typeof n){if(m){var a=p(n);a&&a!==m&&e(t,a,r)}var i=s(n);d&&(i=i.concat(d(n)));for(var l=u(t),g=u(n),h=0;h<i.length;++h){var v=i[h];if(!(o[v]||r&&r[v]||g&&g[v]||l&&l[v])){var b=f(n,v);try{c(t,v,b)}catch(e){}}}}return t}},448:(e,t,n)=>{"use strict";var r=n(294),a=n(840);function o(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var i=new Set,l={};function u(e,t){c(e,t),c(e+"Capture",t)}function c(e,t){for(l[e]=t,e=0;e<t.length;e++)i.add(t[e])}var s=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),d=Object.prototype.hasOwnProperty,f=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,p={},m={};function g(e,t,n,r,a,o,i){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=a,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=o,this.removeEmptyString=i}var h={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){h[e]=new g(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];h[t]=new g(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){h[e]=new g(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){h[e]=new g(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){h[e]=new g(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){h[e]=new g(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){h[e]=new g(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){h[e]=new g(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){h[e]=new g(e,5,!1,e.toLowerCase(),null,!1,!1)}));var v=/[\-:]([a-z])/g;function b(e){return e[1].toUpperCase()}function A(e,t,n,r){var a=h.hasOwnProperty(t)?h[t]:null;(null!==a?0!==a.type:r||!(2<t.length)||"o"!==t[0]&&"O"!==t[0]||"n"!==t[1]&&"N"!==t[1])&&(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,a,r)&&(n=null),r||null===a?function(e){return!!d.call(m,e)||!d.call(p,e)&&(f.test(e)?m[e]=!0:(p[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):a.mustUseProperty?e[a.propertyName]=null===n?3!==a.type&&"":n:(t=a.attributeName,r=a.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(a=a.type)||4===a&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(v,b);h[t]=new g(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(v,b);h[t]=new g(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(v,b);h[t]=new g(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){h[e]=new g(e,1,!1,e.toLowerCase(),null,!1,!1)})),h.xlinkHref=new g("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){h[e]=new g(e,1,!1,e.toLowerCase(),null,!0,!0)}));var y=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,E=Symbol.for("react.element"),w=Symbol.for("react.portal"),C=Symbol.for("react.fragment"),x=Symbol.for("react.strict_mode"),S=Symbol.for("react.profiler"),k=Symbol.for("react.provider"),D=Symbol.for("react.context"),I=Symbol.for("react.forward_ref"),P=Symbol.for("react.suspense"),B=Symbol.for("react.suspense_list"),O=Symbol.for("react.memo"),N=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var R=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var _=Symbol.iterator;function T(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=_&&e[_]||e["@@iterator"])?e:null}var F,j=Object.assign;function L(e){if(void 0===F)try{throw Error()}catch(e){var t=e.stack.trim().match(/\n( *(at )?)/);F=t&&t[1]||""}return"\n"+F+e}var M=!1;function z(e,t){if(!e||M)return"";M=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(e){var r=e}Reflect.construct(e,[],t)}else{try{t.call()}catch(e){r=e}e.call(t.prototype)}else{try{throw Error()}catch(e){r=e}e()}}catch(t){if(t&&r&&"string"==typeof t.stack){for(var a=t.stack.split("\n"),o=r.stack.split("\n"),i=a.length-1,l=o.length-1;1<=i&&0<=l&&a[i]!==o[l];)l--;for(;1<=i&&0<=l;i--,l--)if(a[i]!==o[l]){if(1!==i||1!==l)do{if(i--,0>--l||a[i]!==o[l]){var u="\n"+a[i].replace(" at new "," at ");return e.displayName&&u.includes("<anonymous>")&&(u=u.replace("<anonymous>",e.displayName)),u}}while(1<=i&&0<=l);break}}}finally{M=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?L(e):""}function U(e){switch(e.tag){case 5:return L(e.type);case 16:return L("Lazy");case 13:return L("Suspense");case 19:return L("SuspenseList");case 0:case 2:case 15:return z(e.type,!1);case 11:return z(e.type.render,!1);case 1:return z(e.type,!0);default:return""}}function G(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case C:return"Fragment";case w:return"Portal";case S:return"Profiler";case x:return"StrictMode";case P:return"Suspense";case B:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case D:return(e.displayName||"Context")+".Consumer";case k:return(e._context.displayName||"Context")+".Provider";case I:var t=e.render;return(e=e.displayName)||(e=""!==(e=t.displayName||t.name||"")?"ForwardRef("+e+")":"ForwardRef"),e;case O:return null!==(t=e.displayName||null)?t:G(e.type)||"Memo";case N:t=e._payload,e=e._init;try{return G(e(t))}catch(e){}}return null}function W(e){var t=e.type;switch(e.tag){case 24:return"Cache";case 9:return(t.displayName||"Context")+".Consumer";case 10:return(t._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=(e=t.render).displayName||e.name||"",t.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return t;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return G(t);case 8:return t===x?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"==typeof t)return t.displayName||t.name||null;if("string"==typeof t)return t}return null}function q(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":case"object":return e;default:return""}}function H(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function V(e){e._valueTracker||(e._valueTracker=function(e){var t=H(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var a=n.get,o=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return a.call(this)},set:function(e){r=""+e,o.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function $(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=H(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function Q(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function Y(e,t){var n=t.checked;return j({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function J(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=q(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function K(e,t){null!=(t=t.checked)&&A(e,"checked",t,!1)}function X(e,t){K(e,t);var n=q(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?ee(e,t.type,n):t.hasOwnProperty("defaultValue")&&ee(e,t.type,q(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function Z(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function ee(e,t,n){"number"===t&&Q(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}var te=Array.isArray;function ne(e,t,n,r){if(e=e.options,t){t={};for(var a=0;a<n.length;a++)t["$"+n[a]]=!0;for(n=0;n<e.length;n++)a=t.hasOwnProperty("$"+e[n].value),e[n].selected!==a&&(e[n].selected=a),a&&r&&(e[n].defaultSelected=!0)}else{for(n=""+q(n),t=null,a=0;a<e.length;a++){if(e[a].value===n)return e[a].selected=!0,void(r&&(e[a].defaultSelected=!0));null!==t||e[a].disabled||(t=e[a])}null!==t&&(t.selected=!0)}}function re(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(o(91));return j({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function ae(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(o(92));if(te(n)){if(1<n.length)throw Error(o(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:q(n)}}function oe(e,t){var n=q(t.value),r=q(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function ie(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}function le(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function ue(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?le(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var ce,se,de=(se=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((ce=ce||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=ce.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction((function(){return se(e,t)}))}:se);function fe(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var pe={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},me=["Webkit","ms","Moz","O"];function ge(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||pe.hasOwnProperty(e)&&pe[e]?(""+t).trim():t+"px"}function he(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),a=ge(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,a):e[n]=a}}Object.keys(pe).forEach((function(e){me.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),pe[t]=pe[e]}))}));var ve=j({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function be(e,t){if(t){if(ve[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(o(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(o(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(o(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(o(62))}}function Ae(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var ye=null;function Ee(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var we=null,Ce=null,xe=null;function Se(e){if(e=Aa(e)){if("function"!=typeof we)throw Error(o(280));var t=e.stateNode;t&&(t=Ea(t),we(e.stateNode,e.type,t))}}function ke(e){Ce?xe?xe.push(e):xe=[e]:Ce=e}function De(){if(Ce){var e=Ce,t=xe;if(xe=Ce=null,Se(e),t)for(e=0;e<t.length;e++)Se(t[e])}}function Ie(e,t){return e(t)}function Pe(){}var Be=!1;function Oe(e,t,n){if(Be)return e(t,n);Be=!0;try{return Ie(e,t,n)}finally{Be=!1,(null!==Ce||null!==xe)&&(Pe(),De())}}function Ne(e,t){var n=e.stateNode;if(null===n)return null;var r=Ea(n);if(null===r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(o(231,t,typeof n));return n}var Re=!1;if(s)try{var _e={};Object.defineProperty(_e,"passive",{get:function(){Re=!0}}),window.addEventListener("test",_e,_e),window.removeEventListener("test",_e,_e)}catch(se){Re=!1}function Te(e,t,n,r,a,o,i,l,u){var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(e){this.onError(e)}}var Fe=!1,je=null,Le=!1,Me=null,ze={onError:function(e){Fe=!0,je=e}};function Ue(e,t,n,r,a,o,i,l,u){Fe=!1,je=null,Te.apply(ze,arguments)}function Ge(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(4098&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function We(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&null!==(e=e.alternate)&&(t=e.memoizedState),null!==t)return t.dehydrated}return null}function qe(e){if(Ge(e)!==e)throw Error(o(188))}function He(e){return null!==(e=function(e){var t=e.alternate;if(!t){if(null===(t=Ge(e)))throw Error(o(188));return t!==e?null:e}for(var n=e,r=t;;){var a=n.return;if(null===a)break;var i=a.alternate;if(null===i){if(null!==(r=a.return)){n=r;continue}break}if(a.child===i.child){for(i=a.child;i;){if(i===n)return qe(a),e;if(i===r)return qe(a),t;i=i.sibling}throw Error(o(188))}if(n.return!==r.return)n=a,r=i;else{for(var l=!1,u=a.child;u;){if(u===n){l=!0,n=a,r=i;break}if(u===r){l=!0,r=a,n=i;break}u=u.sibling}if(!l){for(u=i.child;u;){if(u===n){l=!0,n=i,r=a;break}if(u===r){l=!0,r=i,n=a;break}u=u.sibling}if(!l)throw Error(o(189))}}if(n.alternate!==r)throw Error(o(190))}if(3!==n.tag)throw Error(o(188));return n.stateNode.current===n?e:t}(e))?Ve(e):null}function Ve(e){if(5===e.tag||6===e.tag)return e;for(e=e.child;null!==e;){var t=Ve(e);if(null!==t)return t;e=e.sibling}return null}var $e=a.unstable_scheduleCallback,Qe=a.unstable_cancelCallback,Ye=a.unstable_shouldYield,Je=a.unstable_requestPaint,Ke=a.unstable_now,Xe=a.unstable_getCurrentPriorityLevel,Ze=a.unstable_ImmediatePriority,et=a.unstable_UserBlockingPriority,tt=a.unstable_NormalPriority,nt=a.unstable_LowPriority,rt=a.unstable_IdlePriority,at=null,ot=null,it=Math.clz32?Math.clz32:function(e){return 0==(e>>>=0)?32:31-(lt(e)/ut|0)|0},lt=Math.log,ut=Math.LN2,ct=64,st=4194304;function dt(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&e;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&e;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function ft(e,t){var n=e.pendingLanes;if(0===n)return 0;var r=0,a=e.suspendedLanes,o=e.pingedLanes,i=268435455&n;if(0!==i){var l=i&~a;0!==l?r=dt(l):0!=(o&=i)&&(r=dt(o))}else 0!=(i=n&~a)?r=dt(i):0!==o&&(r=dt(o));if(0===r)return 0;if(0!==t&&t!==r&&0==(t&a)&&((a=r&-r)>=(o=t&-t)||16===a&&0!=(4194240&o)))return t;if(0!=(4&r)&&(r|=16&n),0!==(t=e.entangledLanes))for(e=e.entanglements,t&=r;0<t;)a=1<<(n=31-it(t)),r|=e[n],t&=~a;return r}function pt(e,t){switch(e){case 1:case 2:case 4:return t+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t+5e3;default:return-1}}function mt(e){return 0!=(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function gt(){var e=ct;return 0==(4194240&(ct<<=1))&&(ct=64),e}function ht(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function vt(e,t,n){e.pendingLanes|=t,536870912!==t&&(e.suspendedLanes=0,e.pingedLanes=0),(e=e.eventTimes)[t=31-it(t)]=n}function bt(e,t){var n=e.entangledLanes|=t;for(e=e.entanglements;n;){var r=31-it(n),a=1<<r;a&t|e[r]&t&&(e[r]|=t),n&=~a}}var At=0;function yt(e){return 1<(e&=-e)?4<e?0!=(268435455&e)?16:536870912:4:1}var Et,wt,Ct,xt,St,kt=!1,Dt=[],It=null,Pt=null,Bt=null,Ot=new Map,Nt=new Map,Rt=[],_t="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Tt(e,t){switch(e){case"focusin":case"focusout":It=null;break;case"dragenter":case"dragleave":Pt=null;break;case"mouseover":case"mouseout":Bt=null;break;case"pointerover":case"pointerout":Ot.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":Nt.delete(t.pointerId)}}function Ft(e,t,n,r,a,o){return null===e||e.nativeEvent!==o?(e={blockedOn:t,domEventName:n,eventSystemFlags:r,nativeEvent:o,targetContainers:[a]},null!==t&&null!==(t=Aa(t))&&wt(t),e):(e.eventSystemFlags|=r,t=e.targetContainers,null!==a&&-1===t.indexOf(a)&&t.push(a),e)}function jt(e){var t=ba(e.target);if(null!==t){var n=Ge(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=We(n)))return e.blockedOn=t,void St(e.priority,(function(){Ct(n)}))}else if(3===t&&n.stateNode.current.memoizedState.isDehydrated)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function Lt(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=Yt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=Aa(n))&&wt(t),e.blockedOn=n,!1;var r=new(n=e.nativeEvent).constructor(n.type,n);ye=r,n.target.dispatchEvent(r),ye=null,t.shift()}return!0}function Mt(e,t,n){Lt(e)&&n.delete(t)}function zt(){kt=!1,null!==It&&Lt(It)&&(It=null),null!==Pt&&Lt(Pt)&&(Pt=null),null!==Bt&&Lt(Bt)&&(Bt=null),Ot.forEach(Mt),Nt.forEach(Mt)}function Ut(e,t){e.blockedOn===t&&(e.blockedOn=null,kt||(kt=!0,a.unstable_scheduleCallback(a.unstable_NormalPriority,zt)))}function Gt(e){function t(t){return Ut(t,e)}if(0<Dt.length){Ut(Dt[0],e);for(var n=1;n<Dt.length;n++){var r=Dt[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==It&&Ut(It,e),null!==Pt&&Ut(Pt,e),null!==Bt&&Ut(Bt,e),Ot.forEach(t),Nt.forEach(t),n=0;n<Rt.length;n++)(r=Rt[n]).blockedOn===e&&(r.blockedOn=null);for(;0<Rt.length&&null===(n=Rt[0]).blockedOn;)jt(n),null===n.blockedOn&&Rt.shift()}var Wt=y.ReactCurrentBatchConfig,qt=!0;function Ht(e,t,n,r){var a=At,o=Wt.transition;Wt.transition=null;try{At=1,$t(e,t,n,r)}finally{At=a,Wt.transition=o}}function Vt(e,t,n,r){var a=At,o=Wt.transition;Wt.transition=null;try{At=4,$t(e,t,n,r)}finally{At=a,Wt.transition=o}}function $t(e,t,n,r){if(qt){var a=Yt(e,t,n,r);if(null===a)qr(e,t,r,Qt,n),Tt(e,r);else if(function(e,t,n,r,a){switch(t){case"focusin":return It=Ft(It,e,t,n,r,a),!0;case"dragenter":return Pt=Ft(Pt,e,t,n,r,a),!0;case"mouseover":return Bt=Ft(Bt,e,t,n,r,a),!0;case"pointerover":var o=a.pointerId;return Ot.set(o,Ft(Ot.get(o)||null,e,t,n,r,a)),!0;case"gotpointercapture":return o=a.pointerId,Nt.set(o,Ft(Nt.get(o)||null,e,t,n,r,a)),!0}return!1}(a,e,t,n,r))r.stopPropagation();else if(Tt(e,r),4&t&&-1<_t.indexOf(e)){for(;null!==a;){var o=Aa(a);if(null!==o&&Et(o),null===(o=Yt(e,t,n,r))&&qr(e,t,r,Qt,n),o===a)break;a=o}null!==a&&r.stopPropagation()}else qr(e,t,r,null,n)}}var Qt=null;function Yt(e,t,n,r){if(Qt=null,null!==(e=ba(e=Ee(r))))if(null===(t=Ge(e)))e=null;else if(13===(n=t.tag)){if(null!==(e=We(t)))return e;e=null}else if(3===n){if(t.stateNode.current.memoizedState.isDehydrated)return 3===t.tag?t.stateNode.containerInfo:null;e=null}else t!==e&&(e=null);return Qt=e,null}function Jt(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(Xe()){case Ze:return 1;case et:return 4;case tt:case nt:return 16;case rt:return 536870912;default:return 16}default:return 16}}var Kt=null,Xt=null,Zt=null;function en(){if(Zt)return Zt;var e,t,n=Xt,r=n.length,a="value"in Kt?Kt.value:Kt.textContent,o=a.length;for(e=0;e<r&&n[e]===a[e];e++);var i=r-e;for(t=1;t<=i&&n[r-t]===a[o-t];t++);return Zt=a.slice(e,1<t?1-t:void 0)}function tn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function nn(){return!0}function rn(){return!1}function an(e){function t(t,n,r,a,o){for(var i in this._reactName=t,this._targetInst=r,this.type=n,this.nativeEvent=a,this.target=o,this.currentTarget=null,e)e.hasOwnProperty(i)&&(t=e[i],this[i]=t?t(a):a[i]);return this.isDefaultPrevented=(null!=a.defaultPrevented?a.defaultPrevented:!1===a.returnValue)?nn:rn,this.isPropagationStopped=rn,this}return j(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=nn)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=nn)},persist:function(){},isPersistent:nn}),t}var on,ln,un,cn={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},sn=an(cn),dn=j({},cn,{view:0,detail:0}),fn=an(dn),pn=j({},dn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Sn,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==un&&(un&&"mousemove"===e.type?(on=e.screenX-un.screenX,ln=e.screenY-un.screenY):ln=on=0,un=e),on)},movementY:function(e){return"movementY"in e?e.movementY:ln}}),mn=an(pn),gn=an(j({},pn,{dataTransfer:0})),hn=an(j({},dn,{relatedTarget:0})),vn=an(j({},cn,{animationName:0,elapsedTime:0,pseudoElement:0})),bn=j({},cn,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),An=an(bn),yn=an(j({},cn,{data:0})),En={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},wn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Cn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function xn(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Cn[e])&&!!t[e]}function Sn(){return xn}var kn=j({},dn,{key:function(e){if(e.key){var t=En[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=tn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?wn[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Sn,charCode:function(e){return"keypress"===e.type?tn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?tn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),Dn=an(kn),In=an(j({},pn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),Pn=an(j({},dn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Sn})),Bn=an(j({},cn,{propertyName:0,elapsedTime:0,pseudoElement:0})),On=j({},pn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),Nn=an(On),Rn=[9,13,27,32],_n=s&&"CompositionEvent"in window,Tn=null;s&&"documentMode"in document&&(Tn=document.documentMode);var Fn=s&&"TextEvent"in window&&!Tn,jn=s&&(!_n||Tn&&8<Tn&&11>=Tn),Ln=String.fromCharCode(32),Mn=!1;function zn(e,t){switch(e){case"keyup":return-1!==Rn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Un(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Gn=!1,Wn={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function qn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Wn[e.type]:"textarea"===t}function Hn(e,t,n,r){ke(r),0<(t=Vr(t,"onChange")).length&&(n=new sn("onChange","change",null,n,r),e.push({event:n,listeners:t}))}var Vn=null,$n=null;function Qn(e){Lr(e,0)}function Yn(e){if($(ya(e)))return e}function Jn(e,t){if("change"===e)return t}var Kn=!1;if(s){var Xn;if(s){var Zn="oninput"in document;if(!Zn){var er=document.createElement("div");er.setAttribute("oninput","return;"),Zn="function"==typeof er.oninput}Xn=Zn}else Xn=!1;Kn=Xn&&(!document.documentMode||9<document.documentMode)}function tr(){Vn&&(Vn.detachEvent("onpropertychange",nr),$n=Vn=null)}function nr(e){if("value"===e.propertyName&&Yn($n)){var t=[];Hn(t,$n,e,Ee(e)),Oe(Qn,t)}}function rr(e,t,n){"focusin"===e?(tr(),$n=n,(Vn=t).attachEvent("onpropertychange",nr)):"focusout"===e&&tr()}function ar(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Yn($n)}function or(e,t){if("click"===e)return Yn(t)}function ir(e,t){if("input"===e||"change"===e)return Yn(t)}var lr="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t};function ur(e,t){if(lr(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++){var a=n[r];if(!d.call(t,a)||!lr(e[a],t[a]))return!1}return!0}function cr(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function sr(e,t){var n,r=cr(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=cr(r)}}function dr(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?dr(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function fr(){for(var e=window,t=Q();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=Q((e=t.contentWindow).document)}return t}function pr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}function mr(e){var t=fr(),n=e.focusedElem,r=e.selectionRange;if(t!==n&&n&&n.ownerDocument&&dr(n.ownerDocument.documentElement,n)){if(null!==r&&pr(n))if(t=r.start,void 0===(e=r.end)&&(e=t),"selectionStart"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if((e=(t=n.ownerDocument||document)&&t.defaultView||window).getSelection){e=e.getSelection();var a=n.textContent.length,o=Math.min(r.start,a);r=void 0===r.end?o:Math.min(r.end,a),!e.extend&&o>r&&(a=r,r=o,o=a),a=sr(n,o);var i=sr(n,r);a&&i&&(1!==e.rangeCount||e.anchorNode!==a.node||e.anchorOffset!==a.offset||e.focusNode!==i.node||e.focusOffset!==i.offset)&&((t=t.createRange()).setStart(a.node,a.offset),e.removeAllRanges(),o>r?(e.addRange(t),e.extend(i.node,i.offset)):(t.setEnd(i.node,i.offset),e.addRange(t)))}for(t=[],e=n;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"==typeof n.focus&&n.focus(),n=0;n<t.length;n++)(e=t[n]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var gr=s&&"documentMode"in document&&11>=document.documentMode,hr=null,vr=null,br=null,Ar=!1;function yr(e,t,n){var r=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;Ar||null==hr||hr!==Q(r)||(r="selectionStart"in(r=hr)&&pr(r)?{start:r.selectionStart,end:r.selectionEnd}:{anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},br&&ur(br,r)||(br=r,0<(r=Vr(vr,"onSelect")).length&&(t=new sn("onSelect","select",null,t,n),e.push({event:t,listeners:r}),t.target=hr)))}function Er(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var wr={animationend:Er("Animation","AnimationEnd"),animationiteration:Er("Animation","AnimationIteration"),animationstart:Er("Animation","AnimationStart"),transitionend:Er("Transition","TransitionEnd")},Cr={},xr={};function Sr(e){if(Cr[e])return Cr[e];if(!wr[e])return e;var t,n=wr[e];for(t in n)if(n.hasOwnProperty(t)&&t in xr)return Cr[e]=n[t];return e}s&&(xr=document.createElement("div").style,"AnimationEvent"in window||(delete wr.animationend.animation,delete wr.animationiteration.animation,delete wr.animationstart.animation),"TransitionEvent"in window||delete wr.transitionend.transition);var kr=Sr("animationend"),Dr=Sr("animationiteration"),Ir=Sr("animationstart"),Pr=Sr("transitionend"),Br=new Map,Or="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Nr(e,t){Br.set(e,t),u(t,[e])}for(var Rr=0;Rr<Or.length;Rr++){var _r=Or[Rr];Nr(_r.toLowerCase(),"on"+(_r[0].toUpperCase()+_r.slice(1)))}Nr(kr,"onAnimationEnd"),Nr(Dr,"onAnimationIteration"),Nr(Ir,"onAnimationStart"),Nr("dblclick","onDoubleClick"),Nr("focusin","onFocus"),Nr("focusout","onBlur"),Nr(Pr,"onTransitionEnd"),c("onMouseEnter",["mouseout","mouseover"]),c("onMouseLeave",["mouseout","mouseover"]),c("onPointerEnter",["pointerout","pointerover"]),c("onPointerLeave",["pointerout","pointerover"]),u("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),u("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),u("onBeforeInput",["compositionend","keypress","textInput","paste"]),u("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),u("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),u("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Tr="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Fr=new Set("cancel close invalid load scroll toggle".split(" ").concat(Tr));function jr(e,t,n){var r=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,r,a,i,l,u,c){if(Ue.apply(this,arguments),Fe){if(!Fe)throw Error(o(198));var s=je;Fe=!1,je=null,Le||(Le=!0,Me=s)}}(r,t,void 0,e),e.currentTarget=null}function Lr(e,t){t=0!=(4&t);for(var n=0;n<e.length;n++){var r=e[n],a=r.event;r=r.listeners;e:{var o=void 0;if(t)for(var i=r.length-1;0<=i;i--){var l=r[i],u=l.instance,c=l.currentTarget;if(l=l.listener,u!==o&&a.isPropagationStopped())break e;jr(a,l,c),o=u}else for(i=0;i<r.length;i++){if(u=(l=r[i]).instance,c=l.currentTarget,l=l.listener,u!==o&&a.isPropagationStopped())break e;jr(a,l,c),o=u}}}if(Le)throw e=Me,Le=!1,Me=null,e}function Mr(e,t){var n=t[ga];void 0===n&&(n=t[ga]=new Set);var r=e+"__bubble";n.has(r)||(Wr(t,e,2,!1),n.add(r))}function zr(e,t,n){var r=0;t&&(r|=4),Wr(n,e,r,t)}var Ur="_reactListening"+Math.random().toString(36).slice(2);function Gr(e){if(!e[Ur]){e[Ur]=!0,i.forEach((function(t){"selectionchange"!==t&&(Fr.has(t)||zr(t,!1,e),zr(t,!0,e))}));var t=9===e.nodeType?e:e.ownerDocument;null===t||t[Ur]||(t[Ur]=!0,zr("selectionchange",!1,t))}}function Wr(e,t,n,r){switch(Jt(t)){case 1:var a=Ht;break;case 4:a=Vt;break;default:a=$t}n=a.bind(null,t,n,e),a=void 0,!Re||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(a=!0),r?void 0!==a?e.addEventListener(t,n,{capture:!0,passive:a}):e.addEventListener(t,n,!0):void 0!==a?e.addEventListener(t,n,{passive:a}):e.addEventListener(t,n,!1)}function qr(e,t,n,r,a){var o=r;if(0==(1&t)&&0==(2&t)&&null!==r)e:for(;;){if(null===r)return;var i=r.tag;if(3===i||4===i){var l=r.stateNode.containerInfo;if(l===a||8===l.nodeType&&l.parentNode===a)break;if(4===i)for(i=r.return;null!==i;){var u=i.tag;if((3===u||4===u)&&((u=i.stateNode.containerInfo)===a||8===u.nodeType&&u.parentNode===a))return;i=i.return}for(;null!==l;){if(null===(i=ba(l)))return;if(5===(u=i.tag)||6===u){r=o=i;continue e}l=l.parentNode}}r=r.return}Oe((function(){var r=o,a=Ee(n),i=[];e:{var l=Br.get(e);if(void 0!==l){var u=sn,c=e;switch(e){case"keypress":if(0===tn(n))break e;case"keydown":case"keyup":u=Dn;break;case"focusin":c="focus",u=hn;break;case"focusout":c="blur",u=hn;break;case"beforeblur":case"afterblur":u=hn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":u=mn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":u=gn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":u=Pn;break;case kr:case Dr:case Ir:u=vn;break;case Pr:u=Bn;break;case"scroll":u=fn;break;case"wheel":u=Nn;break;case"copy":case"cut":case"paste":u=An;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":u=In}var s=0!=(4&t),d=!s&&"scroll"===e,f=s?null!==l?l+"Capture":null:l;s=[];for(var p,m=r;null!==m;){var g=(p=m).stateNode;if(5===p.tag&&null!==g&&(p=g,null!==f&&null!=(g=Ne(m,f))&&s.push(Hr(m,g,p))),d)break;m=m.return}0<s.length&&(l=new u(l,c,null,n,a),i.push({event:l,listeners:s}))}}if(0==(7&t)){if(u="mouseout"===e||"pointerout"===e,(!(l="mouseover"===e||"pointerover"===e)||n===ye||!(c=n.relatedTarget||n.fromElement)||!ba(c)&&!c[ma])&&(u||l)&&(l=a.window===a?a:(l=a.ownerDocument)?l.defaultView||l.parentWindow:window,u?(u=r,null!==(c=(c=n.relatedTarget||n.toElement)?ba(c):null)&&(c!==(d=Ge(c))||5!==c.tag&&6!==c.tag)&&(c=null)):(u=null,c=r),u!==c)){if(s=mn,g="onMouseLeave",f="onMouseEnter",m="mouse","pointerout"!==e&&"pointerover"!==e||(s=In,g="onPointerLeave",f="onPointerEnter",m="pointer"),d=null==u?l:ya(u),p=null==c?l:ya(c),(l=new s(g,m+"leave",u,n,a)).target=d,l.relatedTarget=p,g=null,ba(a)===r&&((s=new s(f,m+"enter",c,n,a)).target=p,s.relatedTarget=d,g=s),d=g,u&&c)e:{for(f=c,m=0,p=s=u;p;p=$r(p))m++;for(p=0,g=f;g;g=$r(g))p++;for(;0<m-p;)s=$r(s),m--;for(;0<p-m;)f=$r(f),p--;for(;m--;){if(s===f||null!==f&&s===f.alternate)break e;s=$r(s),f=$r(f)}s=null}else s=null;null!==u&&Qr(i,l,u,s,!1),null!==c&&null!==d&&Qr(i,d,c,s,!0)}if("select"===(u=(l=r?ya(r):window).nodeName&&l.nodeName.toLowerCase())||"input"===u&&"file"===l.type)var h=Jn;else if(qn(l))if(Kn)h=ir;else{h=ar;var v=rr}else(u=l.nodeName)&&"input"===u.toLowerCase()&&("checkbox"===l.type||"radio"===l.type)&&(h=or);switch(h&&(h=h(e,r))?Hn(i,h,n,a):(v&&v(e,l,r),"focusout"===e&&(v=l._wrapperState)&&v.controlled&&"number"===l.type&&ee(l,"number",l.value)),v=r?ya(r):window,e){case"focusin":(qn(v)||"true"===v.contentEditable)&&(hr=v,vr=r,br=null);break;case"focusout":br=vr=hr=null;break;case"mousedown":Ar=!0;break;case"contextmenu":case"mouseup":case"dragend":Ar=!1,yr(i,n,a);break;case"selectionchange":if(gr)break;case"keydown":case"keyup":yr(i,n,a)}var b;if(_n)e:{switch(e){case"compositionstart":var A="onCompositionStart";break e;case"compositionend":A="onCompositionEnd";break e;case"compositionupdate":A="onCompositionUpdate";break e}A=void 0}else Gn?zn(e,n)&&(A="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(A="onCompositionStart");A&&(jn&&"ko"!==n.locale&&(Gn||"onCompositionStart"!==A?"onCompositionEnd"===A&&Gn&&(b=en()):(Xt="value"in(Kt=a)?Kt.value:Kt.textContent,Gn=!0)),0<(v=Vr(r,A)).length&&(A=new yn(A,e,null,n,a),i.push({event:A,listeners:v}),(b||null!==(b=Un(n)))&&(A.data=b))),(b=Fn?function(e,t){switch(e){case"compositionend":return Un(t);case"keypress":return 32!==t.which?null:(Mn=!0,Ln);case"textInput":return(e=t.data)===Ln&&Mn?null:e;default:return null}}(e,n):function(e,t){if(Gn)return"compositionend"===e||!_n&&zn(e,t)?(e=en(),Zt=Xt=Kt=null,Gn=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return jn&&"ko"!==t.locale?null:t.data}}(e,n))&&0<(r=Vr(r,"onBeforeInput")).length&&(a=new yn("onBeforeInput","beforeinput",null,n,a),i.push({event:a,listeners:r}),a.data=b)}Lr(i,t)}))}function Hr(e,t,n){return{instance:e,listener:t,currentTarget:n}}function Vr(e,t){for(var n=t+"Capture",r=[];null!==e;){var a=e,o=a.stateNode;5===a.tag&&null!==o&&(a=o,null!=(o=Ne(e,n))&&r.unshift(Hr(e,o,a)),null!=(o=Ne(e,t))&&r.push(Hr(e,o,a))),e=e.return}return r}function $r(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Qr(e,t,n,r,a){for(var o=t._reactName,i=[];null!==n&&n!==r;){var l=n,u=l.alternate,c=l.stateNode;if(null!==u&&u===r)break;5===l.tag&&null!==c&&(l=c,a?null!=(u=Ne(n,o))&&i.unshift(Hr(n,u,l)):a||null!=(u=Ne(n,o))&&i.push(Hr(n,u,l))),n=n.return}0!==i.length&&e.push({event:t,listeners:i})}var Yr=/\r\n?/g,Jr=/\u0000|\uFFFD/g;function Kr(e){return("string"==typeof e?e:""+e).replace(Yr,"\n").replace(Jr,"")}function Xr(e,t,n){if(t=Kr(t),Kr(e)!==t&&n)throw Error(o(425))}function Zr(){}var ea=null,ta=null;function na(e,t){return"textarea"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var ra="function"==typeof setTimeout?setTimeout:void 0,aa="function"==typeof clearTimeout?clearTimeout:void 0,oa="function"==typeof Promise?Promise:void 0,ia="function"==typeof queueMicrotask?queueMicrotask:void 0!==oa?function(e){return oa.resolve(null).then(e).catch(la)}:ra;function la(e){setTimeout((function(){throw e}))}function ua(e,t){var n=t,r=0;do{var a=n.nextSibling;if(e.removeChild(n),a&&8===a.nodeType)if("/$"===(n=a.data)){if(0===r)return e.removeChild(a),void Gt(t);r--}else"$"!==n&&"$?"!==n&&"$!"!==n||r++;n=a}while(n);Gt(t)}function ca(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break;if(8===t){if("$"===(t=e.data)||"$!"===t||"$?"===t)break;if("/$"===t)return null}}return e}function sa(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var da=Math.random().toString(36).slice(2),fa="__reactFiber$"+da,pa="__reactProps$"+da,ma="__reactContainer$"+da,ga="__reactEvents$"+da,ha="__reactListeners$"+da,va="__reactHandles$"+da;function ba(e){var t=e[fa];if(t)return t;for(var n=e.parentNode;n;){if(t=n[ma]||n[fa]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=sa(e);null!==e;){if(n=e[fa])return n;e=sa(e)}return t}n=(e=n).parentNode}return null}function Aa(e){return!(e=e[fa]||e[ma])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function ya(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(o(33))}function Ea(e){return e[pa]||null}var wa=[],Ca=-1;function xa(e){return{current:e}}function Sa(e){0>Ca||(e.current=wa[Ca],wa[Ca]=null,Ca--)}function ka(e,t){Ca++,wa[Ca]=e.current,e.current=t}var Da={},Ia=xa(Da),Pa=xa(!1),Ba=Da;function Oa(e,t){var n=e.type.contextTypes;if(!n)return Da;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var a,o={};for(a in n)o[a]=t[a];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=o),o}function Na(e){return null!=e.childContextTypes}function Ra(){Sa(Pa),Sa(Ia)}function _a(e,t,n){if(Ia.current!==Da)throw Error(o(168));ka(Ia,t),ka(Pa,n)}function Ta(e,t,n){var r=e.stateNode;if(t=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var a in r=r.getChildContext())if(!(a in t))throw Error(o(108,W(e)||"Unknown",a));return j({},n,r)}function Fa(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||Da,Ba=Ia.current,ka(Ia,e),ka(Pa,Pa.current),!0}function ja(e,t,n){var r=e.stateNode;if(!r)throw Error(o(169));n?(e=Ta(e,t,Ba),r.__reactInternalMemoizedMergedChildContext=e,Sa(Pa),Sa(Ia),ka(Ia,e)):Sa(Pa),ka(Pa,n)}var La=null,Ma=!1,za=!1;function Ua(e){null===La?La=[e]:La.push(e)}function Ga(){if(!za&&null!==La){za=!0;var e=0,t=At;try{var n=La;for(At=1;e<n.length;e++){var r=n[e];do{r=r(!0)}while(null!==r)}La=null,Ma=!1}catch(t){throw null!==La&&(La=La.slice(e+1)),$e(Ze,Ga),t}finally{At=t,za=!1}}return null}var Wa=[],qa=0,Ha=null,Va=0,$a=[],Qa=0,Ya=null,Ja=1,Ka="";function Xa(e,t){Wa[qa++]=Va,Wa[qa++]=Ha,Ha=e,Va=t}function Za(e,t,n){$a[Qa++]=Ja,$a[Qa++]=Ka,$a[Qa++]=Ya,Ya=e;var r=Ja;e=Ka;var a=32-it(r)-1;r&=~(1<<a),n+=1;var o=32-it(t)+a;if(30<o){var i=a-a%5;o=(r&(1<<i)-1).toString(32),r>>=i,a-=i,Ja=1<<32-it(t)+a|n<<a|r,Ka=o+e}else Ja=1<<o|n<<a|r,Ka=e}function eo(e){null!==e.return&&(Xa(e,1),Za(e,1,0))}function to(e){for(;e===Ha;)Ha=Wa[--qa],Wa[qa]=null,Va=Wa[--qa],Wa[qa]=null;for(;e===Ya;)Ya=$a[--Qa],$a[Qa]=null,Ka=$a[--Qa],$a[Qa]=null,Ja=$a[--Qa],$a[Qa]=null}var no=null,ro=null,ao=!1,oo=null;function io(e,t){var n=Oc(5,null,null,0);n.elementType="DELETED",n.stateNode=t,n.return=e,null===(t=e.deletions)?(e.deletions=[n],e.flags|=16):t.push(n)}function lo(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,no=e,ro=ca(t.firstChild),!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,no=e,ro=null,!0);case 13:return null!==(t=8!==t.nodeType?null:t)&&(n=null!==Ya?{id:Ja,overflow:Ka}:null,e.memoizedState={dehydrated:t,treeContext:n,retryLane:1073741824},(n=Oc(18,null,null,0)).stateNode=t,n.return=e,e.child=n,no=e,ro=null,!0);default:return!1}}function uo(e){return 0!=(1&e.mode)&&0==(128&e.flags)}function co(e){if(ao){var t=ro;if(t){var n=t;if(!lo(e,t)){if(uo(e))throw Error(o(418));t=ca(n.nextSibling);var r=no;t&&lo(e,t)?io(r,n):(e.flags=-4097&e.flags|2,ao=!1,no=e)}}else{if(uo(e))throw Error(o(418));e.flags=-4097&e.flags|2,ao=!1,no=e}}}function so(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;no=e}function fo(e){if(e!==no)return!1;if(!ao)return so(e),ao=!0,!1;var t;if((t=3!==e.tag)&&!(t=5!==e.tag)&&(t="head"!==(t=e.type)&&"body"!==t&&!na(e.type,e.memoizedProps)),t&&(t=ro)){if(uo(e))throw po(),Error(o(418));for(;t;)io(e,t),t=ca(t.nextSibling)}if(so(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(o(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){ro=ca(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}ro=null}}else ro=no?ca(e.stateNode.nextSibling):null;return!0}function po(){for(var e=ro;e;)e=ca(e.nextSibling)}function mo(){ro=no=null,ao=!1}function go(e){null===oo?oo=[e]:oo.push(e)}var ho=y.ReactCurrentBatchConfig;function vo(e,t){if(e&&e.defaultProps){for(var n in t=j({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}var bo=xa(null),Ao=null,yo=null,Eo=null;function wo(){Eo=yo=Ao=null}function Co(e){var t=bo.current;Sa(bo),e._currentValue=t}function xo(e,t,n){for(;null!==e;){var r=e.alternate;if((e.childLanes&t)!==t?(e.childLanes|=t,null!==r&&(r.childLanes|=t)):null!==r&&(r.childLanes&t)!==t&&(r.childLanes|=t),e===n)break;e=e.return}}function So(e,t){Ao=e,Eo=yo=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!=(e.lanes&t)&&(yl=!0),e.firstContext=null)}function ko(e){var t=e._currentValue;if(Eo!==e)if(e={context:e,memoizedValue:t,next:null},null===yo){if(null===Ao)throw Error(o(308));yo=e,Ao.dependencies={lanes:0,firstContext:e}}else yo=yo.next=e;return t}var Do=null;function Io(e){null===Do?Do=[e]:Do.push(e)}function Po(e,t,n,r){var a=t.interleaved;return null===a?(n.next=n,Io(t)):(n.next=a.next,a.next=n),t.interleaved=n,Bo(e,r)}function Bo(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}var Oo=!1;function No(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Ro(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function _o(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function To(e,t,n){var r=e.updateQueue;if(null===r)return null;if(r=r.shared,0!=(2&Iu)){var a=r.pending;return null===a?t.next=t:(t.next=a.next,a.next=t),r.pending=t,Bo(e,n)}return null===(a=r.interleaved)?(t.next=t,Io(r)):(t.next=a.next,a.next=t),r.interleaved=t,Bo(e,n)}function Fo(e,t,n){if(null!==(t=t.updateQueue)&&(t=t.shared,0!=(4194240&n))){var r=t.lanes;n|=r&=e.pendingLanes,t.lanes=n,bt(e,n)}}function jo(e,t){var n=e.updateQueue,r=e.alternate;if(null!==r&&n===(r=r.updateQueue)){var a=null,o=null;if(null!==(n=n.firstBaseUpdate)){do{var i={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===o?a=o=i:o=o.next=i,n=n.next}while(null!==n);null===o?a=o=t:o=o.next=t}else a=o=t;return n={baseState:r.baseState,firstBaseUpdate:a,lastBaseUpdate:o,shared:r.shared,effects:r.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function Lo(e,t,n,r){var a=e.updateQueue;Oo=!1;var o=a.firstBaseUpdate,i=a.lastBaseUpdate,l=a.shared.pending;if(null!==l){a.shared.pending=null;var u=l,c=u.next;u.next=null,null===i?o=c:i.next=c,i=u;var s=e.alternate;null!==s&&(l=(s=s.updateQueue).lastBaseUpdate)!==i&&(null===l?s.firstBaseUpdate=c:l.next=c,s.lastBaseUpdate=u)}if(null!==o){var d=a.baseState;for(i=0,s=c=u=null,l=o;;){var f=l.lane,p=l.eventTime;if((r&f)===f){null!==s&&(s=s.next={eventTime:p,lane:0,tag:l.tag,payload:l.payload,callback:l.callback,next:null});e:{var m=e,g=l;switch(f=t,p=n,g.tag){case 1:if("function"==typeof(m=g.payload)){d=m.call(p,d,f);break e}d=m;break e;case 3:m.flags=-65537&m.flags|128;case 0:if(null==(f="function"==typeof(m=g.payload)?m.call(p,d,f):m))break e;d=j({},d,f);break e;case 2:Oo=!0}}null!==l.callback&&0!==l.lane&&(e.flags|=64,null===(f=a.effects)?a.effects=[l]:f.push(l))}else p={eventTime:p,lane:f,tag:l.tag,payload:l.payload,callback:l.callback,next:null},null===s?(c=s=p,u=d):s=s.next=p,i|=f;if(null===(l=l.next)){if(null===(l=a.shared.pending))break;l=(f=l).next,f.next=null,a.lastBaseUpdate=f,a.shared.pending=null}}if(null===s&&(u=d),a.baseState=u,a.firstBaseUpdate=c,a.lastBaseUpdate=s,null!==(t=a.shared.interleaved)){a=t;do{i|=a.lane,a=a.next}while(a!==t)}else null===o&&(a.shared.lanes=0);Fu|=i,e.lanes=i,e.memoizedState=d}}function Mo(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],a=r.callback;if(null!==a){if(r.callback=null,r=n,"function"!=typeof a)throw Error(o(191,a));a.call(r)}}}var zo=(new r.Component).refs;function Uo(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:j({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var Go={isMounted:function(e){return!!(e=e._reactInternals)&&Ge(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var r=ec(),a=tc(e),o=_o(r,a);o.payload=t,null!=n&&(o.callback=n),null!==(t=To(e,o,a))&&(nc(t,e,a,r),Fo(t,e,a))},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var r=ec(),a=tc(e),o=_o(r,a);o.tag=1,o.payload=t,null!=n&&(o.callback=n),null!==(t=To(e,o,a))&&(nc(t,e,a,r),Fo(t,e,a))},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=ec(),r=tc(e),a=_o(n,r);a.tag=2,null!=t&&(a.callback=t),null!==(t=To(e,a,r))&&(nc(t,e,r,n),Fo(t,e,r))}};function Wo(e,t,n,r,a,o,i){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,o,i):!(t.prototype&&t.prototype.isPureReactComponent&&ur(n,r)&&ur(a,o))}function qo(e,t,n){var r=!1,a=Da,o=t.contextType;return"object"==typeof o&&null!==o?o=ko(o):(a=Na(t)?Ba:Ia.current,o=(r=null!=(r=t.contextTypes))?Oa(e,a):Da),t=new t(n,o),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=Go,e.stateNode=t,t._reactInternals=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=a,e.__reactInternalMemoizedMaskedChildContext=o),t}function Ho(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&Go.enqueueReplaceState(t,t.state,null)}function Vo(e,t,n,r){var a=e.stateNode;a.props=n,a.state=e.memoizedState,a.refs=zo,No(e);var o=t.contextType;"object"==typeof o&&null!==o?a.context=ko(o):(o=Na(t)?Ba:Ia.current,a.context=Oa(e,o)),a.state=e.memoizedState,"function"==typeof(o=t.getDerivedStateFromProps)&&(Uo(e,t,o,n),a.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof a.getSnapshotBeforeUpdate||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||(t=a.state,"function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount(),t!==a.state&&Go.enqueueReplaceState(a,a.state,null),Lo(e,n,a,r),a.state=e.memoizedState),"function"==typeof a.componentDidMount&&(e.flags|=4194308)}function $o(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(o(309));var r=n.stateNode}if(!r)throw Error(o(147,e));var a=r,i=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===i?t.ref:(t=function(e){var t=a.refs;t===zo&&(t=a.refs={}),null===e?delete t[i]:t[i]=e},t._stringRef=i,t)}if("string"!=typeof e)throw Error(o(284));if(!n._owner)throw Error(o(290,e))}return e}function Qo(e,t){throw e=Object.prototype.toString.call(t),Error(o(31,"[object Object]"===e?"object with keys {"+Object.keys(t).join(", ")+"}":e))}function Yo(e){return(0,e._init)(e._payload)}function Jo(e){function t(t,n){if(e){var r=t.deletions;null===r?(t.deletions=[n],t.flags|=16):r.push(n)}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function a(e,t){return(e=Rc(e,t)).index=0,e.sibling=null,e}function i(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.flags|=2,n):r:(t.flags|=2,n):(t.flags|=1048576,n)}function l(t){return e&&null===t.alternate&&(t.flags|=2),t}function u(e,t,n,r){return null===t||6!==t.tag?((t=jc(n,e.mode,r)).return=e,t):((t=a(t,n)).return=e,t)}function c(e,t,n,r){var o=n.type;return o===C?d(e,t,n.props.children,r,n.key):null!==t&&(t.elementType===o||"object"==typeof o&&null!==o&&o.$$typeof===N&&Yo(o)===t.type)?((r=a(t,n.props)).ref=$o(e,t,n),r.return=e,r):((r=_c(n.type,n.key,n.props,null,e.mode,r)).ref=$o(e,t,n),r.return=e,r)}function s(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Lc(n,e.mode,r)).return=e,t):((t=a(t,n.children||[])).return=e,t)}function d(e,t,n,r,o){return null===t||7!==t.tag?((t=Tc(n,e.mode,r,o)).return=e,t):((t=a(t,n)).return=e,t)}function f(e,t,n){if("string"==typeof t&&""!==t||"number"==typeof t)return(t=jc(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case E:return(n=_c(t.type,t.key,t.props,null,e.mode,n)).ref=$o(e,null,t),n.return=e,n;case w:return(t=Lc(t,e.mode,n)).return=e,t;case N:return f(e,(0,t._init)(t._payload),n)}if(te(t)||T(t))return(t=Tc(t,e.mode,n,null)).return=e,t;Qo(e,t)}return null}function p(e,t,n,r){var a=null!==t?t.key:null;if("string"==typeof n&&""!==n||"number"==typeof n)return null!==a?null:u(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case E:return n.key===a?c(e,t,n,r):null;case w:return n.key===a?s(e,t,n,r):null;case N:return p(e,t,(a=n._init)(n._payload),r)}if(te(n)||T(n))return null!==a?null:d(e,t,n,r,null);Qo(e,n)}return null}function m(e,t,n,r,a){if("string"==typeof r&&""!==r||"number"==typeof r)return u(t,e=e.get(n)||null,""+r,a);if("object"==typeof r&&null!==r){switch(r.$$typeof){case E:return c(t,e=e.get(null===r.key?n:r.key)||null,r,a);case w:return s(t,e=e.get(null===r.key?n:r.key)||null,r,a);case N:return m(e,t,n,(0,r._init)(r._payload),a)}if(te(r)||T(r))return d(t,e=e.get(n)||null,r,a,null);Qo(t,r)}return null}function g(a,o,l,u){for(var c=null,s=null,d=o,g=o=0,h=null;null!==d&&g<l.length;g++){d.index>g?(h=d,d=null):h=d.sibling;var v=p(a,d,l[g],u);if(null===v){null===d&&(d=h);break}e&&d&&null===v.alternate&&t(a,d),o=i(v,o,g),null===s?c=v:s.sibling=v,s=v,d=h}if(g===l.length)return n(a,d),ao&&Xa(a,g),c;if(null===d){for(;g<l.length;g++)null!==(d=f(a,l[g],u))&&(o=i(d,o,g),null===s?c=d:s.sibling=d,s=d);return ao&&Xa(a,g),c}for(d=r(a,d);g<l.length;g++)null!==(h=m(d,a,g,l[g],u))&&(e&&null!==h.alternate&&d.delete(null===h.key?g:h.key),o=i(h,o,g),null===s?c=h:s.sibling=h,s=h);return e&&d.forEach((function(e){return t(a,e)})),ao&&Xa(a,g),c}function h(a,l,u,c){var s=T(u);if("function"!=typeof s)throw Error(o(150));if(null==(u=s.call(u)))throw Error(o(151));for(var d=s=null,g=l,h=l=0,v=null,b=u.next();null!==g&&!b.done;h++,b=u.next()){g.index>h?(v=g,g=null):v=g.sibling;var A=p(a,g,b.value,c);if(null===A){null===g&&(g=v);break}e&&g&&null===A.alternate&&t(a,g),l=i(A,l,h),null===d?s=A:d.sibling=A,d=A,g=v}if(b.done)return n(a,g),ao&&Xa(a,h),s;if(null===g){for(;!b.done;h++,b=u.next())null!==(b=f(a,b.value,c))&&(l=i(b,l,h),null===d?s=b:d.sibling=b,d=b);return ao&&Xa(a,h),s}for(g=r(a,g);!b.done;h++,b=u.next())null!==(b=m(g,a,h,b.value,c))&&(e&&null!==b.alternate&&g.delete(null===b.key?h:b.key),l=i(b,l,h),null===d?s=b:d.sibling=b,d=b);return e&&g.forEach((function(e){return t(a,e)})),ao&&Xa(a,h),s}return function e(r,o,i,u){if("object"==typeof i&&null!==i&&i.type===C&&null===i.key&&(i=i.props.children),"object"==typeof i&&null!==i){switch(i.$$typeof){case E:e:{for(var c=i.key,s=o;null!==s;){if(s.key===c){if((c=i.type)===C){if(7===s.tag){n(r,s.sibling),(o=a(s,i.props.children)).return=r,r=o;break e}}else if(s.elementType===c||"object"==typeof c&&null!==c&&c.$$typeof===N&&Yo(c)===s.type){n(r,s.sibling),(o=a(s,i.props)).ref=$o(r,s,i),o.return=r,r=o;break e}n(r,s);break}t(r,s),s=s.sibling}i.type===C?((o=Tc(i.props.children,r.mode,u,i.key)).return=r,r=o):((u=_c(i.type,i.key,i.props,null,r.mode,u)).ref=$o(r,o,i),u.return=r,r=u)}return l(r);case w:e:{for(s=i.key;null!==o;){if(o.key===s){if(4===o.tag&&o.stateNode.containerInfo===i.containerInfo&&o.stateNode.implementation===i.implementation){n(r,o.sibling),(o=a(o,i.children||[])).return=r,r=o;break e}n(r,o);break}t(r,o),o=o.sibling}(o=Lc(i,r.mode,u)).return=r,r=o}return l(r);case N:return e(r,o,(s=i._init)(i._payload),u)}if(te(i))return g(r,o,i,u);if(T(i))return h(r,o,i,u);Qo(r,i)}return"string"==typeof i&&""!==i||"number"==typeof i?(i=""+i,null!==o&&6===o.tag?(n(r,o.sibling),(o=a(o,i)).return=r,r=o):(n(r,o),(o=jc(i,r.mode,u)).return=r,r=o),l(r)):n(r,o)}}var Ko=Jo(!0),Xo=Jo(!1),Zo={},ei=xa(Zo),ti=xa(Zo),ni=xa(Zo);function ri(e){if(e===Zo)throw Error(o(174));return e}function ai(e,t){switch(ka(ni,t),ka(ti,e),ka(ei,Zo),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:ue(null,"");break;default:t=ue(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}Sa(ei),ka(ei,t)}function oi(){Sa(ei),Sa(ti),Sa(ni)}function ii(e){ri(ni.current);var t=ri(ei.current),n=ue(t,e.type);t!==n&&(ka(ti,e),ka(ei,n))}function li(e){ti.current===e&&(Sa(ei),Sa(ti))}var ui=xa(0);function ci(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(128&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var si=[];function di(){for(var e=0;e<si.length;e++)si[e]._workInProgressVersionPrimary=null;si.length=0}var fi=y.ReactCurrentDispatcher,pi=y.ReactCurrentBatchConfig,mi=0,gi=null,hi=null,vi=null,bi=!1,Ai=!1,yi=0,Ei=0;function wi(){throw Error(o(321))}function Ci(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!lr(e[n],t[n]))return!1;return!0}function xi(e,t,n,r,a,i){if(mi=i,gi=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,fi.current=null===e||null===e.memoizedState?ll:ul,e=n(r,a),Ai){i=0;do{if(Ai=!1,yi=0,25<=i)throw Error(o(301));i+=1,vi=hi=null,t.updateQueue=null,fi.current=cl,e=n(r,a)}while(Ai)}if(fi.current=il,t=null!==hi&&null!==hi.next,mi=0,vi=hi=gi=null,bi=!1,t)throw Error(o(300));return e}function Si(){var e=0!==yi;return yi=0,e}function ki(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===vi?gi.memoizedState=vi=e:vi=vi.next=e,vi}function Di(){if(null===hi){var e=gi.alternate;e=null!==e?e.memoizedState:null}else e=hi.next;var t=null===vi?gi.memoizedState:vi.next;if(null!==t)vi=t,hi=e;else{if(null===e)throw Error(o(310));e={memoizedState:(hi=e).memoizedState,baseState:hi.baseState,baseQueue:hi.baseQueue,queue:hi.queue,next:null},null===vi?gi.memoizedState=vi=e:vi=vi.next=e}return vi}function Ii(e,t){return"function"==typeof t?t(e):t}function Pi(e){var t=Di(),n=t.queue;if(null===n)throw Error(o(311));n.lastRenderedReducer=e;var r=hi,a=r.baseQueue,i=n.pending;if(null!==i){if(null!==a){var l=a.next;a.next=i.next,i.next=l}r.baseQueue=a=i,n.pending=null}if(null!==a){i=a.next,r=r.baseState;var u=l=null,c=null,s=i;do{var d=s.lane;if((mi&d)===d)null!==c&&(c=c.next={lane:0,action:s.action,hasEagerState:s.hasEagerState,eagerState:s.eagerState,next:null}),r=s.hasEagerState?s.eagerState:e(r,s.action);else{var f={lane:d,action:s.action,hasEagerState:s.hasEagerState,eagerState:s.eagerState,next:null};null===c?(u=c=f,l=r):c=c.next=f,gi.lanes|=d,Fu|=d}s=s.next}while(null!==s&&s!==i);null===c?l=r:c.next=u,lr(r,t.memoizedState)||(yl=!0),t.memoizedState=r,t.baseState=l,t.baseQueue=c,n.lastRenderedState=r}if(null!==(e=n.interleaved)){a=e;do{i=a.lane,gi.lanes|=i,Fu|=i,a=a.next}while(a!==e)}else null===a&&(n.lanes=0);return[t.memoizedState,n.dispatch]}function Bi(e){var t=Di(),n=t.queue;if(null===n)throw Error(o(311));n.lastRenderedReducer=e;var r=n.dispatch,a=n.pending,i=t.memoizedState;if(null!==a){n.pending=null;var l=a=a.next;do{i=e(i,l.action),l=l.next}while(l!==a);lr(i,t.memoizedState)||(yl=!0),t.memoizedState=i,null===t.baseQueue&&(t.baseState=i),n.lastRenderedState=i}return[i,r]}function Oi(){}function Ni(e,t){var n=gi,r=Di(),a=t(),i=!lr(r.memoizedState,a);if(i&&(r.memoizedState=a,yl=!0),r=r.queue,qi(Ti.bind(null,n,r,e),[e]),r.getSnapshot!==t||i||null!==vi&&1&vi.memoizedState.tag){if(n.flags|=2048,Mi(9,_i.bind(null,n,r,a,t),void 0,null),null===Pu)throw Error(o(349));0!=(30&mi)||Ri(n,t,a)}return a}function Ri(e,t,n){e.flags|=16384,e={getSnapshot:t,value:n},null===(t=gi.updateQueue)?(t={lastEffect:null,stores:null},gi.updateQueue=t,t.stores=[e]):null===(n=t.stores)?t.stores=[e]:n.push(e)}function _i(e,t,n,r){t.value=n,t.getSnapshot=r,Fi(t)&&ji(e)}function Ti(e,t,n){return n((function(){Fi(t)&&ji(e)}))}function Fi(e){var t=e.getSnapshot;e=e.value;try{var n=t();return!lr(e,n)}catch(e){return!0}}function ji(e){var t=Bo(e,1);null!==t&&nc(t,e,1,-1)}function Li(e){var t=ki();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Ii,lastRenderedState:e},t.queue=e,e=e.dispatch=nl.bind(null,gi,e),[t.memoizedState,e]}function Mi(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=gi.updateQueue)?(t={lastEffect:null,stores:null},gi.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function zi(){return Di().memoizedState}function Ui(e,t,n,r){var a=ki();gi.flags|=e,a.memoizedState=Mi(1|t,n,void 0,void 0===r?null:r)}function Gi(e,t,n,r){var a=Di();r=void 0===r?null:r;var o=void 0;if(null!==hi){var i=hi.memoizedState;if(o=i.destroy,null!==r&&Ci(r,i.deps))return void(a.memoizedState=Mi(t,n,o,r))}gi.flags|=e,a.memoizedState=Mi(1|t,n,o,r)}function Wi(e,t){return Ui(8390656,8,e,t)}function qi(e,t){return Gi(2048,8,e,t)}function Hi(e,t){return Gi(4,2,e,t)}function Vi(e,t){return Gi(4,4,e,t)}function $i(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function Qi(e,t,n){return n=null!=n?n.concat([e]):null,Gi(4,4,$i.bind(null,t,e),n)}function Yi(){}function Ji(e,t){var n=Di();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Ci(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function Ki(e,t){var n=Di();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Ci(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function Xi(e,t,n){return 0==(21&mi)?(e.baseState&&(e.baseState=!1,yl=!0),e.memoizedState=n):(lr(n,t)||(n=gt(),gi.lanes|=n,Fu|=n,e.baseState=!0),t)}function Zi(e,t){var n=At;At=0!==n&&4>n?n:4,e(!0);var r=pi.transition;pi.transition={};try{e(!1),t()}finally{At=n,pi.transition=r}}function el(){return Di().memoizedState}function tl(e,t,n){var r=tc(e);n={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null},rl(e)?al(t,n):null!==(n=Po(e,t,n,r))&&(nc(n,e,r,ec()),ol(n,t,r))}function nl(e,t,n){var r=tc(e),a={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null};if(rl(e))al(t,a);else{var o=e.alternate;if(0===e.lanes&&(null===o||0===o.lanes)&&null!==(o=t.lastRenderedReducer))try{var i=t.lastRenderedState,l=o(i,n);if(a.hasEagerState=!0,a.eagerState=l,lr(l,i)){var u=t.interleaved;return null===u?(a.next=a,Io(t)):(a.next=u.next,u.next=a),void(t.interleaved=a)}}catch(e){}null!==(n=Po(e,t,a,r))&&(nc(n,e,r,a=ec()),ol(n,t,r))}}function rl(e){var t=e.alternate;return e===gi||null!==t&&t===gi}function al(e,t){Ai=bi=!0;var n=e.pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}function ol(e,t,n){if(0!=(4194240&n)){var r=t.lanes;n|=r&=e.pendingLanes,t.lanes=n,bt(e,n)}}var il={readContext:ko,useCallback:wi,useContext:wi,useEffect:wi,useImperativeHandle:wi,useInsertionEffect:wi,useLayoutEffect:wi,useMemo:wi,useReducer:wi,useRef:wi,useState:wi,useDebugValue:wi,useDeferredValue:wi,useTransition:wi,useMutableSource:wi,useSyncExternalStore:wi,useId:wi,unstable_isNewReconciler:!1},ll={readContext:ko,useCallback:function(e,t){return ki().memoizedState=[e,void 0===t?null:t],e},useContext:ko,useEffect:Wi,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,Ui(4194308,4,$i.bind(null,t,e),n)},useLayoutEffect:function(e,t){return Ui(4194308,4,e,t)},useInsertionEffect:function(e,t){return Ui(4,2,e,t)},useMemo:function(e,t){var n=ki();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=ki();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:t},r.queue=e,e=e.dispatch=tl.bind(null,gi,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},ki().memoizedState=e},useState:Li,useDebugValue:Yi,useDeferredValue:function(e){return ki().memoizedState=e},useTransition:function(){var e=Li(!1),t=e[0];return e=Zi.bind(null,e[1]),ki().memoizedState=e,[t,e]},useMutableSource:function(){},useSyncExternalStore:function(e,t,n){var r=gi,a=ki();if(ao){if(void 0===n)throw Error(o(407));n=n()}else{if(n=t(),null===Pu)throw Error(o(349));0!=(30&mi)||Ri(r,t,n)}a.memoizedState=n;var i={value:n,getSnapshot:t};return a.queue=i,Wi(Ti.bind(null,r,i,e),[e]),r.flags|=2048,Mi(9,_i.bind(null,r,i,n,t),void 0,null),n},useId:function(){var e=ki(),t=Pu.identifierPrefix;if(ao){var n=Ka;t=":"+t+"R"+(n=(Ja&~(1<<32-it(Ja)-1)).toString(32)+n),0<(n=yi++)&&(t+="H"+n.toString(32)),t+=":"}else t=":"+t+"r"+(n=Ei++).toString(32)+":";return e.memoizedState=t},unstable_isNewReconciler:!1},ul={readContext:ko,useCallback:Ji,useContext:ko,useEffect:qi,useImperativeHandle:Qi,useInsertionEffect:Hi,useLayoutEffect:Vi,useMemo:Ki,useReducer:Pi,useRef:zi,useState:function(){return Pi(Ii)},useDebugValue:Yi,useDeferredValue:function(e){return Xi(Di(),hi.memoizedState,e)},useTransition:function(){return[Pi(Ii)[0],Di().memoizedState]},useMutableSource:Oi,useSyncExternalStore:Ni,useId:el,unstable_isNewReconciler:!1},cl={readContext:ko,useCallback:Ji,useContext:ko,useEffect:qi,useImperativeHandle:Qi,useInsertionEffect:Hi,useLayoutEffect:Vi,useMemo:Ki,useReducer:Bi,useRef:zi,useState:function(){return Bi(Ii)},useDebugValue:Yi,useDeferredValue:function(e){var t=Di();return null===hi?t.memoizedState=e:Xi(t,hi.memoizedState,e)},useTransition:function(){return[Bi(Ii)[0],Di().memoizedState]},useMutableSource:Oi,useSyncExternalStore:Ni,useId:el,unstable_isNewReconciler:!1};function sl(e,t){try{var n="",r=t;do{n+=U(r),r=r.return}while(r);var a=n}catch(e){a="\nError generating stack: "+e.message+"\n"+e.stack}return{value:e,source:t,stack:a,digest:null}}function dl(e,t,n){return{value:e,source:null,stack:null!=n?n:null,digest:null!=t?t:null}}function fl(e,t){try{console.error(t.value)}catch(e){setTimeout((function(){throw e}))}}var pl="function"==typeof WeakMap?WeakMap:Map;function ml(e,t,n){(n=_o(-1,n)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){qu||(qu=!0,Hu=r),fl(0,t)},n}function gl(e,t,n){(n=_o(-1,n)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var a=t.value;n.payload=function(){return r(a)},n.callback=function(){fl(0,t)}}var o=e.stateNode;return null!==o&&"function"==typeof o.componentDidCatch&&(n.callback=function(){fl(0,t),"function"!=typeof r&&(null===Vu?Vu=new Set([this]):Vu.add(this));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}function hl(e,t,n){var r=e.pingCache;if(null===r){r=e.pingCache=new pl;var a=new Set;r.set(t,a)}else void 0===(a=r.get(t))&&(a=new Set,r.set(t,a));a.has(n)||(a.add(n),e=Sc.bind(null,e,t,n),t.then(e,e))}function vl(e){do{var t;if((t=13===e.tag)&&(t=null===(t=e.memoizedState)||null!==t.dehydrated),t)return e;e=e.return}while(null!==e);return null}function bl(e,t,n,r,a){return 0==(1&e.mode)?(e===t?e.flags|=65536:(e.flags|=128,n.flags|=131072,n.flags&=-52805,1===n.tag&&(null===n.alternate?n.tag=17:((t=_o(-1,1)).tag=2,To(n,t,1))),n.lanes|=1),e):(e.flags|=65536,e.lanes=a,e)}var Al=y.ReactCurrentOwner,yl=!1;function El(e,t,n,r){t.child=null===e?Xo(t,null,n,r):Ko(t,e.child,n,r)}function wl(e,t,n,r,a){n=n.render;var o=t.ref;return So(t,a),r=xi(e,t,n,r,o,a),n=Si(),null===e||yl?(ao&&n&&eo(t),t.flags|=1,El(e,t,r,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~a,ql(e,t,a))}function Cl(e,t,n,r,a){if(null===e){var o=n.type;return"function"!=typeof o||Nc(o)||void 0!==o.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=_c(n.type,null,r,t,t.mode,a)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=o,xl(e,t,o,r,a))}if(o=e.child,0==(e.lanes&a)){var i=o.memoizedProps;if((n=null!==(n=n.compare)?n:ur)(i,r)&&e.ref===t.ref)return ql(e,t,a)}return t.flags|=1,(e=Rc(o,r)).ref=t.ref,e.return=t,t.child=e}function xl(e,t,n,r,a){if(null!==e){var o=e.memoizedProps;if(ur(o,r)&&e.ref===t.ref){if(yl=!1,t.pendingProps=r=o,0==(e.lanes&a))return t.lanes=e.lanes,ql(e,t,a);0!=(131072&e.flags)&&(yl=!0)}}return Dl(e,t,n,r,a)}function Sl(e,t,n){var r=t.pendingProps,a=r.children,o=null!==e?e.memoizedState:null;if("hidden"===r.mode)if(0==(1&t.mode))t.memoizedState={baseLanes:0,cachePool:null,transitions:null},ka(Ru,Nu),Nu|=n;else{if(0==(1073741824&n))return e=null!==o?o.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e,cachePool:null,transitions:null},t.updateQueue=null,ka(Ru,Nu),Nu|=e,null;t.memoizedState={baseLanes:0,cachePool:null,transitions:null},r=null!==o?o.baseLanes:n,ka(Ru,Nu),Nu|=r}else null!==o?(r=o.baseLanes|n,t.memoizedState=null):r=n,ka(Ru,Nu),Nu|=r;return El(e,t,a,n),t.child}function kl(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=512,t.flags|=2097152)}function Dl(e,t,n,r,a){var o=Na(n)?Ba:Ia.current;return o=Oa(t,o),So(t,a),n=xi(e,t,n,r,o,a),r=Si(),null===e||yl?(ao&&r&&eo(t),t.flags|=1,El(e,t,n,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~a,ql(e,t,a))}function Il(e,t,n,r,a){if(Na(n)){var o=!0;Fa(t)}else o=!1;if(So(t,a),null===t.stateNode)Wl(e,t),qo(t,n,r),Vo(t,n,r,a),r=!0;else if(null===e){var i=t.stateNode,l=t.memoizedProps;i.props=l;var u=i.context,c=n.contextType;c="object"==typeof c&&null!==c?ko(c):Oa(t,c=Na(n)?Ba:Ia.current);var s=n.getDerivedStateFromProps,d="function"==typeof s||"function"==typeof i.getSnapshotBeforeUpdate;d||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(l!==r||u!==c)&&Ho(t,i,r,c),Oo=!1;var f=t.memoizedState;i.state=f,Lo(t,r,i,a),u=t.memoizedState,l!==r||f!==u||Pa.current||Oo?("function"==typeof s&&(Uo(t,n,s,r),u=t.memoizedState),(l=Oo||Wo(t,n,l,r,f,u,c))?(d||"function"!=typeof i.UNSAFE_componentWillMount&&"function"!=typeof i.componentWillMount||("function"==typeof i.componentWillMount&&i.componentWillMount(),"function"==typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount()),"function"==typeof i.componentDidMount&&(t.flags|=4194308)):("function"==typeof i.componentDidMount&&(t.flags|=4194308),t.memoizedProps=r,t.memoizedState=u),i.props=r,i.state=u,i.context=c,r=l):("function"==typeof i.componentDidMount&&(t.flags|=4194308),r=!1)}else{i=t.stateNode,Ro(e,t),l=t.memoizedProps,c=t.type===t.elementType?l:vo(t.type,l),i.props=c,d=t.pendingProps,f=i.context,u="object"==typeof(u=n.contextType)&&null!==u?ko(u):Oa(t,u=Na(n)?Ba:Ia.current);var p=n.getDerivedStateFromProps;(s="function"==typeof p||"function"==typeof i.getSnapshotBeforeUpdate)||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(l!==d||f!==u)&&Ho(t,i,r,u),Oo=!1,f=t.memoizedState,i.state=f,Lo(t,r,i,a);var m=t.memoizedState;l!==d||f!==m||Pa.current||Oo?("function"==typeof p&&(Uo(t,n,p,r),m=t.memoizedState),(c=Oo||Wo(t,n,c,r,f,m,u)||!1)?(s||"function"!=typeof i.UNSAFE_componentWillUpdate&&"function"!=typeof i.componentWillUpdate||("function"==typeof i.componentWillUpdate&&i.componentWillUpdate(r,m,u),"function"==typeof i.UNSAFE_componentWillUpdate&&i.UNSAFE_componentWillUpdate(r,m,u)),"function"==typeof i.componentDidUpdate&&(t.flags|=4),"function"==typeof i.getSnapshotBeforeUpdate&&(t.flags|=1024)):("function"!=typeof i.componentDidUpdate||l===e.memoizedProps&&f===e.memoizedState||(t.flags|=4),"function"!=typeof i.getSnapshotBeforeUpdate||l===e.memoizedProps&&f===e.memoizedState||(t.flags|=1024),t.memoizedProps=r,t.memoizedState=m),i.props=r,i.state=m,i.context=u,r=c):("function"!=typeof i.componentDidUpdate||l===e.memoizedProps&&f===e.memoizedState||(t.flags|=4),"function"!=typeof i.getSnapshotBeforeUpdate||l===e.memoizedProps&&f===e.memoizedState||(t.flags|=1024),r=!1)}return Pl(e,t,n,r,o,a)}function Pl(e,t,n,r,a,o){kl(e,t);var i=0!=(128&t.flags);if(!r&&!i)return a&&ja(t,n,!1),ql(e,t,o);r=t.stateNode,Al.current=t;var l=i&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.flags|=1,null!==e&&i?(t.child=Ko(t,e.child,null,o),t.child=Ko(t,null,l,o)):El(e,t,l,o),t.memoizedState=r.state,a&&ja(t,n,!0),t.child}function Bl(e){var t=e.stateNode;t.pendingContext?_a(0,t.pendingContext,t.pendingContext!==t.context):t.context&&_a(0,t.context,!1),ai(e,t.containerInfo)}function Ol(e,t,n,r,a){return mo(),go(a),t.flags|=256,El(e,t,n,r),t.child}var Nl,Rl,_l,Tl={dehydrated:null,treeContext:null,retryLane:0};function Fl(e){return{baseLanes:e,cachePool:null,transitions:null}}function jl(e,t,n){var r,a=t.pendingProps,i=ui.current,l=!1,u=0!=(128&t.flags);if((r=u)||(r=(null===e||null!==e.memoizedState)&&0!=(2&i)),r?(l=!0,t.flags&=-129):null!==e&&null===e.memoizedState||(i|=1),ka(ui,1&i),null===e)return co(t),null!==(e=t.memoizedState)&&null!==(e=e.dehydrated)?(0==(1&t.mode)?t.lanes=1:"$!"===e.data?t.lanes=8:t.lanes=1073741824,null):(u=a.children,e=a.fallback,l?(a=t.mode,l=t.child,u={mode:"hidden",children:u},0==(1&a)&&null!==l?(l.childLanes=0,l.pendingProps=u):l=Fc(u,a,0,null),e=Tc(e,a,n,null),l.return=t,e.return=t,l.sibling=e,t.child=l,t.child.memoizedState=Fl(n),t.memoizedState=Tl,e):Ll(t,u));if(null!==(i=e.memoizedState)&&null!==(r=i.dehydrated))return function(e,t,n,r,a,i,l){if(n)return 256&t.flags?(t.flags&=-257,Ml(e,t,l,r=dl(Error(o(422))))):null!==t.memoizedState?(t.child=e.child,t.flags|=128,null):(i=r.fallback,a=t.mode,r=Fc({mode:"visible",children:r.children},a,0,null),(i=Tc(i,a,l,null)).flags|=2,r.return=t,i.return=t,r.sibling=i,t.child=r,0!=(1&t.mode)&&Ko(t,e.child,null,l),t.child.memoizedState=Fl(l),t.memoizedState=Tl,i);if(0==(1&t.mode))return Ml(e,t,l,null);if("$!"===a.data){if(r=a.nextSibling&&a.nextSibling.dataset)var u=r.dgst;return r=u,Ml(e,t,l,r=dl(i=Error(o(419)),r,void 0))}if(u=0!=(l&e.childLanes),yl||u){if(null!==(r=Pu)){switch(l&-l){case 4:a=2;break;case 16:a=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:a=32;break;case 536870912:a=268435456;break;default:a=0}0!==(a=0!=(a&(r.suspendedLanes|l))?0:a)&&a!==i.retryLane&&(i.retryLane=a,Bo(e,a),nc(r,e,a,-1))}return gc(),Ml(e,t,l,r=dl(Error(o(421))))}return"$?"===a.data?(t.flags|=128,t.child=e.child,t=Dc.bind(null,e),a._reactRetry=t,null):(e=i.treeContext,ro=ca(a.nextSibling),no=t,ao=!0,oo=null,null!==e&&($a[Qa++]=Ja,$a[Qa++]=Ka,$a[Qa++]=Ya,Ja=e.id,Ka=e.overflow,Ya=t),(t=Ll(t,r.children)).flags|=4096,t)}(e,t,u,a,r,i,n);if(l){l=a.fallback,u=t.mode,r=(i=e.child).sibling;var c={mode:"hidden",children:a.children};return 0==(1&u)&&t.child!==i?((a=t.child).childLanes=0,a.pendingProps=c,t.deletions=null):(a=Rc(i,c)).subtreeFlags=14680064&i.subtreeFlags,null!==r?l=Rc(r,l):(l=Tc(l,u,n,null)).flags|=2,l.return=t,a.return=t,a.sibling=l,t.child=a,a=l,l=t.child,u=null===(u=e.child.memoizedState)?Fl(n):{baseLanes:u.baseLanes|n,cachePool:null,transitions:u.transitions},l.memoizedState=u,l.childLanes=e.childLanes&~n,t.memoizedState=Tl,a}return e=(l=e.child).sibling,a=Rc(l,{mode:"visible",children:a.children}),0==(1&t.mode)&&(a.lanes=n),a.return=t,a.sibling=null,null!==e&&(null===(n=t.deletions)?(t.deletions=[e],t.flags|=16):n.push(e)),t.child=a,t.memoizedState=null,a}function Ll(e,t){return(t=Fc({mode:"visible",children:t},e.mode,0,null)).return=e,e.child=t}function Ml(e,t,n,r){return null!==r&&go(r),Ko(t,e.child,null,n),(e=Ll(t,t.pendingProps.children)).flags|=2,t.memoizedState=null,e}function zl(e,t,n){e.lanes|=t;var r=e.alternate;null!==r&&(r.lanes|=t),xo(e.return,t,n)}function Ul(e,t,n,r,a){var o=e.memoizedState;null===o?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailMode:a}:(o.isBackwards=t,o.rendering=null,o.renderingStartTime=0,o.last=r,o.tail=n,o.tailMode=a)}function Gl(e,t,n){var r=t.pendingProps,a=r.revealOrder,o=r.tail;if(El(e,t,r.children,n),0!=(2&(r=ui.current)))r=1&r|2,t.flags|=128;else{if(null!==e&&0!=(128&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&zl(e,n,t);else if(19===e.tag)zl(e,n,t);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(ka(ui,r),0==(1&t.mode))t.memoizedState=null;else switch(a){case"forwards":for(n=t.child,a=null;null!==n;)null!==(e=n.alternate)&&null===ci(e)&&(a=n),n=n.sibling;null===(n=a)?(a=t.child,t.child=null):(a=n.sibling,n.sibling=null),Ul(t,!1,a,n,o);break;case"backwards":for(n=null,a=t.child,t.child=null;null!==a;){if(null!==(e=a.alternate)&&null===ci(e)){t.child=a;break}e=a.sibling,a.sibling=n,n=a,a=e}Ul(t,!0,n,null,o);break;case"together":Ul(t,!1,null,null,void 0);break;default:t.memoizedState=null}return t.child}function Wl(e,t){0==(1&t.mode)&&null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2)}function ql(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),Fu|=t.lanes,0==(n&t.childLanes))return null;if(null!==e&&t.child!==e.child)throw Error(o(153));if(null!==t.child){for(n=Rc(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Rc(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function Hl(e,t){if(!ao)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function Vl(e){var t=null!==e.alternate&&e.alternate.child===e.child,n=0,r=0;if(t)for(var a=e.child;null!==a;)n|=a.lanes|a.childLanes,r|=14680064&a.subtreeFlags,r|=14680064&a.flags,a.return=e,a=a.sibling;else for(a=e.child;null!==a;)n|=a.lanes|a.childLanes,r|=a.subtreeFlags,r|=a.flags,a.return=e,a=a.sibling;return e.subtreeFlags|=r,e.childLanes=n,t}function $l(e,t,n){var r=t.pendingProps;switch(to(t),t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Vl(t),null;case 1:case 17:return Na(t.type)&&Ra(),Vl(t),null;case 3:return r=t.stateNode,oi(),Sa(Pa),Sa(Ia),di(),r.pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(fo(t)?t.flags|=4:null===e||e.memoizedState.isDehydrated&&0==(256&t.flags)||(t.flags|=1024,null!==oo&&(ic(oo),oo=null))),Vl(t),null;case 5:li(t);var a=ri(ni.current);if(n=t.type,null!==e&&null!=t.stateNode)Rl(e,t,n,r),e.ref!==t.ref&&(t.flags|=512,t.flags|=2097152);else{if(!r){if(null===t.stateNode)throw Error(o(166));return Vl(t),null}if(e=ri(ei.current),fo(t)){r=t.stateNode,n=t.type;var i=t.memoizedProps;switch(r[fa]=t,r[pa]=i,e=0!=(1&t.mode),n){case"dialog":Mr("cancel",r),Mr("close",r);break;case"iframe":case"object":case"embed":Mr("load",r);break;case"video":case"audio":for(a=0;a<Tr.length;a++)Mr(Tr[a],r);break;case"source":Mr("error",r);break;case"img":case"image":case"link":Mr("error",r),Mr("load",r);break;case"details":Mr("toggle",r);break;case"input":J(r,i),Mr("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!i.multiple},Mr("invalid",r);break;case"textarea":ae(r,i),Mr("invalid",r)}for(var u in be(n,i),a=null,i)if(i.hasOwnProperty(u)){var c=i[u];"children"===u?"string"==typeof c?r.textContent!==c&&(!0!==i.suppressHydrationWarning&&Xr(r.textContent,c,e),a=["children",c]):"number"==typeof c&&r.textContent!==""+c&&(!0!==i.suppressHydrationWarning&&Xr(r.textContent,c,e),a=["children",""+c]):l.hasOwnProperty(u)&&null!=c&&"onScroll"===u&&Mr("scroll",r)}switch(n){case"input":V(r),Z(r,i,!0);break;case"textarea":V(r),ie(r);break;case"select":case"option":break;default:"function"==typeof i.onClick&&(r.onclick=Zr)}r=a,t.updateQueue=r,null!==r&&(t.flags|=4)}else{u=9===a.nodeType?a:a.ownerDocument,"http://www.w3.org/1999/xhtml"===e&&(e=le(n)),"http://www.w3.org/1999/xhtml"===e?"script"===n?((e=u.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=u.createElement(n,{is:r.is}):(e=u.createElement(n),"select"===n&&(u=e,r.multiple?u.multiple=!0:r.size&&(u.size=r.size))):e=u.createElementNS(e,n),e[fa]=t,e[pa]=r,Nl(e,t),t.stateNode=e;e:{switch(u=Ae(n,r),n){case"dialog":Mr("cancel",e),Mr("close",e),a=r;break;case"iframe":case"object":case"embed":Mr("load",e),a=r;break;case"video":case"audio":for(a=0;a<Tr.length;a++)Mr(Tr[a],e);a=r;break;case"source":Mr("error",e),a=r;break;case"img":case"image":case"link":Mr("error",e),Mr("load",e),a=r;break;case"details":Mr("toggle",e),a=r;break;case"input":J(e,r),a=Y(e,r),Mr("invalid",e);break;case"option":default:a=r;break;case"select":e._wrapperState={wasMultiple:!!r.multiple},a=j({},r,{value:void 0}),Mr("invalid",e);break;case"textarea":ae(e,r),a=re(e,r),Mr("invalid",e)}for(i in be(n,a),c=a)if(c.hasOwnProperty(i)){var s=c[i];"style"===i?he(e,s):"dangerouslySetInnerHTML"===i?null!=(s=s?s.__html:void 0)&&de(e,s):"children"===i?"string"==typeof s?("textarea"!==n||""!==s)&&fe(e,s):"number"==typeof s&&fe(e,""+s):"suppressContentEditableWarning"!==i&&"suppressHydrationWarning"!==i&&"autoFocus"!==i&&(l.hasOwnProperty(i)?null!=s&&"onScroll"===i&&Mr("scroll",e):null!=s&&A(e,i,s,u))}switch(n){case"input":V(e),Z(e,r,!1);break;case"textarea":V(e),ie(e);break;case"option":null!=r.value&&e.setAttribute("value",""+q(r.value));break;case"select":e.multiple=!!r.multiple,null!=(i=r.value)?ne(e,!!r.multiple,i,!1):null!=r.defaultValue&&ne(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof a.onClick&&(e.onclick=Zr)}switch(n){case"button":case"input":case"select":case"textarea":r=!!r.autoFocus;break e;case"img":r=!0;break e;default:r=!1}}r&&(t.flags|=4)}null!==t.ref&&(t.flags|=512,t.flags|=2097152)}return Vl(t),null;case 6:if(e&&null!=t.stateNode)_l(0,t,e.memoizedProps,r);else{if("string"!=typeof r&&null===t.stateNode)throw Error(o(166));if(n=ri(ni.current),ri(ei.current),fo(t)){if(r=t.stateNode,n=t.memoizedProps,r[fa]=t,(i=r.nodeValue!==n)&&null!==(e=no))switch(e.tag){case 3:Xr(r.nodeValue,n,0!=(1&e.mode));break;case 5:!0!==e.memoizedProps.suppressHydrationWarning&&Xr(r.nodeValue,n,0!=(1&e.mode))}i&&(t.flags|=4)}else(r=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[fa]=t,t.stateNode=r}return Vl(t),null;case 13:if(Sa(ui),r=t.memoizedState,null===e||null!==e.memoizedState&&null!==e.memoizedState.dehydrated){if(ao&&null!==ro&&0!=(1&t.mode)&&0==(128&t.flags))po(),mo(),t.flags|=98560,i=!1;else if(i=fo(t),null!==r&&null!==r.dehydrated){if(null===e){if(!i)throw Error(o(318));if(!(i=null!==(i=t.memoizedState)?i.dehydrated:null))throw Error(o(317));i[fa]=t}else mo(),0==(128&t.flags)&&(t.memoizedState=null),t.flags|=4;Vl(t),i=!1}else null!==oo&&(ic(oo),oo=null),i=!0;if(!i)return 65536&t.flags?t:null}return 0!=(128&t.flags)?(t.lanes=n,t):((r=null!==r)!=(null!==e&&null!==e.memoizedState)&&r&&(t.child.flags|=8192,0!=(1&t.mode)&&(null===e||0!=(1&ui.current)?0===_u&&(_u=3):gc())),null!==t.updateQueue&&(t.flags|=4),Vl(t),null);case 4:return oi(),null===e&&Gr(t.stateNode.containerInfo),Vl(t),null;case 10:return Co(t.type._context),Vl(t),null;case 19:if(Sa(ui),null===(i=t.memoizedState))return Vl(t),null;if(r=0!=(128&t.flags),null===(u=i.rendering))if(r)Hl(i,!1);else{if(0!==_u||null!==e&&0!=(128&e.flags))for(e=t.child;null!==e;){if(null!==(u=ci(e))){for(t.flags|=128,Hl(i,!1),null!==(r=u.updateQueue)&&(t.updateQueue=r,t.flags|=4),t.subtreeFlags=0,r=n,n=t.child;null!==n;)e=r,(i=n).flags&=14680066,null===(u=i.alternate)?(i.childLanes=0,i.lanes=e,i.child=null,i.subtreeFlags=0,i.memoizedProps=null,i.memoizedState=null,i.updateQueue=null,i.dependencies=null,i.stateNode=null):(i.childLanes=u.childLanes,i.lanes=u.lanes,i.child=u.child,i.subtreeFlags=0,i.deletions=null,i.memoizedProps=u.memoizedProps,i.memoizedState=u.memoizedState,i.updateQueue=u.updateQueue,i.type=u.type,e=u.dependencies,i.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return ka(ui,1&ui.current|2),t.child}e=e.sibling}null!==i.tail&&Ke()>Gu&&(t.flags|=128,r=!0,Hl(i,!1),t.lanes=4194304)}else{if(!r)if(null!==(e=ci(u))){if(t.flags|=128,r=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),Hl(i,!0),null===i.tail&&"hidden"===i.tailMode&&!u.alternate&&!ao)return Vl(t),null}else 2*Ke()-i.renderingStartTime>Gu&&1073741824!==n&&(t.flags|=128,r=!0,Hl(i,!1),t.lanes=4194304);i.isBackwards?(u.sibling=t.child,t.child=u):(null!==(n=i.last)?n.sibling=u:t.child=u,i.last=u)}return null!==i.tail?(t=i.tail,i.rendering=t,i.tail=t.sibling,i.renderingStartTime=Ke(),t.sibling=null,n=ui.current,ka(ui,r?1&n|2:1&n),t):(Vl(t),null);case 22:case 23:return dc(),r=null!==t.memoizedState,null!==e&&null!==e.memoizedState!==r&&(t.flags|=8192),r&&0!=(1&t.mode)?0!=(1073741824&Nu)&&(Vl(t),6&t.subtreeFlags&&(t.flags|=8192)):Vl(t),null;case 24:case 25:return null}throw Error(o(156,t.tag))}function Ql(e,t){switch(to(t),t.tag){case 1:return Na(t.type)&&Ra(),65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 3:return oi(),Sa(Pa),Sa(Ia),di(),0!=(65536&(e=t.flags))&&0==(128&e)?(t.flags=-65537&e|128,t):null;case 5:return li(t),null;case 13:if(Sa(ui),null!==(e=t.memoizedState)&&null!==e.dehydrated){if(null===t.alternate)throw Error(o(340));mo()}return 65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 19:return Sa(ui),null;case 4:return oi(),null;case 10:return Co(t.type._context),null;case 22:case 23:return dc(),null;default:return null}}Nl=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Rl=function(e,t,n,r){var a=e.memoizedProps;if(a!==r){e=t.stateNode,ri(ei.current);var o,i=null;switch(n){case"input":a=Y(e,a),r=Y(e,r),i=[];break;case"select":a=j({},a,{value:void 0}),r=j({},r,{value:void 0}),i=[];break;case"textarea":a=re(e,a),r=re(e,r),i=[];break;default:"function"!=typeof a.onClick&&"function"==typeof r.onClick&&(e.onclick=Zr)}for(s in be(n,r),n=null,a)if(!r.hasOwnProperty(s)&&a.hasOwnProperty(s)&&null!=a[s])if("style"===s){var u=a[s];for(o in u)u.hasOwnProperty(o)&&(n||(n={}),n[o]="")}else"dangerouslySetInnerHTML"!==s&&"children"!==s&&"suppressContentEditableWarning"!==s&&"suppressHydrationWarning"!==s&&"autoFocus"!==s&&(l.hasOwnProperty(s)?i||(i=[]):(i=i||[]).push(s,null));for(s in r){var c=r[s];if(u=null!=a?a[s]:void 0,r.hasOwnProperty(s)&&c!==u&&(null!=c||null!=u))if("style"===s)if(u){for(o in u)!u.hasOwnProperty(o)||c&&c.hasOwnProperty(o)||(n||(n={}),n[o]="");for(o in c)c.hasOwnProperty(o)&&u[o]!==c[o]&&(n||(n={}),n[o]=c[o])}else n||(i||(i=[]),i.push(s,n)),n=c;else"dangerouslySetInnerHTML"===s?(c=c?c.__html:void 0,u=u?u.__html:void 0,null!=c&&u!==c&&(i=i||[]).push(s,c)):"children"===s?"string"!=typeof c&&"number"!=typeof c||(i=i||[]).push(s,""+c):"suppressContentEditableWarning"!==s&&"suppressHydrationWarning"!==s&&(l.hasOwnProperty(s)?(null!=c&&"onScroll"===s&&Mr("scroll",e),i||u===c||(i=[])):(i=i||[]).push(s,c))}n&&(i=i||[]).push("style",n);var s=i;(t.updateQueue=s)&&(t.flags|=4)}},_l=function(e,t,n,r){n!==r&&(t.flags|=4)};var Yl=!1,Jl=!1,Kl="function"==typeof WeakSet?WeakSet:Set,Xl=null;function Zl(e,t){var n=e.ref;if(null!==n)if("function"==typeof n)try{n(null)}catch(n){xc(e,t,n)}else n.current=null}function eu(e,t,n){try{n()}catch(n){xc(e,t,n)}}var tu=!1;function nu(e,t,n){var r=t.updateQueue;if(null!==(r=null!==r?r.lastEffect:null)){var a=r=r.next;do{if((a.tag&e)===e){var o=a.destroy;a.destroy=void 0,void 0!==o&&eu(t,n,o)}a=a.next}while(a!==r)}}function ru(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.create;n.destroy=r()}n=n.next}while(n!==t)}}function au(e){var t=e.ref;if(null!==t){var n=e.stateNode;e.tag,e=n,"function"==typeof t?t(e):t.current=e}}function ou(e){var t=e.alternate;null!==t&&(e.alternate=null,ou(t)),e.child=null,e.deletions=null,e.sibling=null,5===e.tag&&null!==(t=e.stateNode)&&(delete t[fa],delete t[pa],delete t[ga],delete t[ha],delete t[va]),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function iu(e){return 5===e.tag||3===e.tag||4===e.tag}function lu(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||iu(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(2&e.flags)continue e;if(null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}function uu(e,t,n){var r=e.tag;if(5===r||6===r)e=e.stateNode,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!=(n=n._reactRootContainer)||null!==t.onclick||(t.onclick=Zr));else if(4!==r&&null!==(e=e.child))for(uu(e,t,n),e=e.sibling;null!==e;)uu(e,t,n),e=e.sibling}function cu(e,t,n){var r=e.tag;if(5===r||6===r)e=e.stateNode,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==r&&null!==(e=e.child))for(cu(e,t,n),e=e.sibling;null!==e;)cu(e,t,n),e=e.sibling}var su=null,du=!1;function fu(e,t,n){for(n=n.child;null!==n;)pu(e,t,n),n=n.sibling}function pu(e,t,n){if(ot&&"function"==typeof ot.onCommitFiberUnmount)try{ot.onCommitFiberUnmount(at,n)}catch(e){}switch(n.tag){case 5:Jl||Zl(n,t);case 6:var r=su,a=du;su=null,fu(e,t,n),du=a,null!==(su=r)&&(du?(e=su,n=n.stateNode,8===e.nodeType?e.parentNode.removeChild(n):e.removeChild(n)):su.removeChild(n.stateNode));break;case 18:null!==su&&(du?(e=su,n=n.stateNode,8===e.nodeType?ua(e.parentNode,n):1===e.nodeType&&ua(e,n),Gt(e)):ua(su,n.stateNode));break;case 4:r=su,a=du,su=n.stateNode.containerInfo,du=!0,fu(e,t,n),su=r,du=a;break;case 0:case 11:case 14:case 15:if(!Jl&&null!==(r=n.updateQueue)&&null!==(r=r.lastEffect)){a=r=r.next;do{var o=a,i=o.destroy;o=o.tag,void 0!==i&&(0!=(2&o)||0!=(4&o))&&eu(n,t,i),a=a.next}while(a!==r)}fu(e,t,n);break;case 1:if(!Jl&&(Zl(n,t),"function"==typeof(r=n.stateNode).componentWillUnmount))try{r.props=n.memoizedProps,r.state=n.memoizedState,r.componentWillUnmount()}catch(e){xc(n,t,e)}fu(e,t,n);break;case 21:fu(e,t,n);break;case 22:1&n.mode?(Jl=(r=Jl)||null!==n.memoizedState,fu(e,t,n),Jl=r):fu(e,t,n);break;default:fu(e,t,n)}}function mu(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new Kl),t.forEach((function(t){var r=Ic.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}function gu(e,t){var n=t.deletions;if(null!==n)for(var r=0;r<n.length;r++){var a=n[r];try{var i=e,l=t,u=l;e:for(;null!==u;){switch(u.tag){case 5:su=u.stateNode,du=!1;break e;case 3:case 4:su=u.stateNode.containerInfo,du=!0;break e}u=u.return}if(null===su)throw Error(o(160));pu(i,l,a),su=null,du=!1;var c=a.alternate;null!==c&&(c.return=null),a.return=null}catch(e){xc(a,t,e)}}if(12854&t.subtreeFlags)for(t=t.child;null!==t;)hu(t,e),t=t.sibling}function hu(e,t){var n=e.alternate,r=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(gu(t,e),vu(e),4&r){try{nu(3,e,e.return),ru(3,e)}catch(t){xc(e,e.return,t)}try{nu(5,e,e.return)}catch(t){xc(e,e.return,t)}}break;case 1:gu(t,e),vu(e),512&r&&null!==n&&Zl(n,n.return);break;case 5:if(gu(t,e),vu(e),512&r&&null!==n&&Zl(n,n.return),32&e.flags){var a=e.stateNode;try{fe(a,"")}catch(t){xc(e,e.return,t)}}if(4&r&&null!=(a=e.stateNode)){var i=e.memoizedProps,l=null!==n?n.memoizedProps:i,u=e.type,c=e.updateQueue;if(e.updateQueue=null,null!==c)try{"input"===u&&"radio"===i.type&&null!=i.name&&K(a,i),Ae(u,l);var s=Ae(u,i);for(l=0;l<c.length;l+=2){var d=c[l],f=c[l+1];"style"===d?he(a,f):"dangerouslySetInnerHTML"===d?de(a,f):"children"===d?fe(a,f):A(a,d,f,s)}switch(u){case"input":X(a,i);break;case"textarea":oe(a,i);break;case"select":var p=a._wrapperState.wasMultiple;a._wrapperState.wasMultiple=!!i.multiple;var m=i.value;null!=m?ne(a,!!i.multiple,m,!1):p!==!!i.multiple&&(null!=i.defaultValue?ne(a,!!i.multiple,i.defaultValue,!0):ne(a,!!i.multiple,i.multiple?[]:"",!1))}a[pa]=i}catch(t){xc(e,e.return,t)}}break;case 6:if(gu(t,e),vu(e),4&r){if(null===e.stateNode)throw Error(o(162));a=e.stateNode,i=e.memoizedProps;try{a.nodeValue=i}catch(t){xc(e,e.return,t)}}break;case 3:if(gu(t,e),vu(e),4&r&&null!==n&&n.memoizedState.isDehydrated)try{Gt(t.containerInfo)}catch(t){xc(e,e.return,t)}break;case 4:default:gu(t,e),vu(e);break;case 13:gu(t,e),vu(e),8192&(a=e.child).flags&&(i=null!==a.memoizedState,a.stateNode.isHidden=i,!i||null!==a.alternate&&null!==a.alternate.memoizedState||(Uu=Ke())),4&r&&mu(e);break;case 22:if(d=null!==n&&null!==n.memoizedState,1&e.mode?(Jl=(s=Jl)||d,gu(t,e),Jl=s):gu(t,e),vu(e),8192&r){if(s=null!==e.memoizedState,(e.stateNode.isHidden=s)&&!d&&0!=(1&e.mode))for(Xl=e,d=e.child;null!==d;){for(f=Xl=d;null!==Xl;){switch(m=(p=Xl).child,p.tag){case 0:case 11:case 14:case 15:nu(4,p,p.return);break;case 1:Zl(p,p.return);var g=p.stateNode;if("function"==typeof g.componentWillUnmount){r=p,n=p.return;try{t=r,g.props=t.memoizedProps,g.state=t.memoizedState,g.componentWillUnmount()}catch(e){xc(r,n,e)}}break;case 5:Zl(p,p.return);break;case 22:if(null!==p.memoizedState){Eu(f);continue}}null!==m?(m.return=p,Xl=m):Eu(f)}d=d.sibling}e:for(d=null,f=e;;){if(5===f.tag){if(null===d){d=f;try{a=f.stateNode,s?"function"==typeof(i=a.style).setProperty?i.setProperty("display","none","important"):i.display="none":(u=f.stateNode,l=null!=(c=f.memoizedProps.style)&&c.hasOwnProperty("display")?c.display:null,u.style.display=ge("display",l))}catch(t){xc(e,e.return,t)}}}else if(6===f.tag){if(null===d)try{f.stateNode.nodeValue=s?"":f.memoizedProps}catch(t){xc(e,e.return,t)}}else if((22!==f.tag&&23!==f.tag||null===f.memoizedState||f===e)&&null!==f.child){f.child.return=f,f=f.child;continue}if(f===e)break e;for(;null===f.sibling;){if(null===f.return||f.return===e)break e;d===f&&(d=null),f=f.return}d===f&&(d=null),f.sibling.return=f.return,f=f.sibling}}break;case 19:gu(t,e),vu(e),4&r&&mu(e);case 21:}}function vu(e){var t=e.flags;if(2&t){try{e:{for(var n=e.return;null!==n;){if(iu(n)){var r=n;break e}n=n.return}throw Error(o(160))}switch(r.tag){case 5:var a=r.stateNode;32&r.flags&&(fe(a,""),r.flags&=-33),cu(e,lu(e),a);break;case 3:case 4:var i=r.stateNode.containerInfo;uu(e,lu(e),i);break;default:throw Error(o(161))}}catch(t){xc(e,e.return,t)}e.flags&=-3}4096&t&&(e.flags&=-4097)}function bu(e,t,n){Xl=e,Au(e,t,n)}function Au(e,t,n){for(var r=0!=(1&e.mode);null!==Xl;){var a=Xl,o=a.child;if(22===a.tag&&r){var i=null!==a.memoizedState||Yl;if(!i){var l=a.alternate,u=null!==l&&null!==l.memoizedState||Jl;l=Yl;var c=Jl;if(Yl=i,(Jl=u)&&!c)for(Xl=a;null!==Xl;)u=(i=Xl).child,22===i.tag&&null!==i.memoizedState?wu(a):null!==u?(u.return=i,Xl=u):wu(a);for(;null!==o;)Xl=o,Au(o,t,n),o=o.sibling;Xl=a,Yl=l,Jl=c}yu(e)}else 0!=(8772&a.subtreeFlags)&&null!==o?(o.return=a,Xl=o):yu(e)}}function yu(e){for(;null!==Xl;){var t=Xl;if(0!=(8772&t.flags)){var n=t.alternate;try{if(0!=(8772&t.flags))switch(t.tag){case 0:case 11:case 15:Jl||ru(5,t);break;case 1:var r=t.stateNode;if(4&t.flags&&!Jl)if(null===n)r.componentDidMount();else{var a=t.elementType===t.type?n.memoizedProps:vo(t.type,n.memoizedProps);r.componentDidUpdate(a,n.memoizedState,r.__reactInternalSnapshotBeforeUpdate)}var i=t.updateQueue;null!==i&&Mo(t,i,r);break;case 3:var l=t.updateQueue;if(null!==l){if(n=null,null!==t.child)switch(t.child.tag){case 5:case 1:n=t.child.stateNode}Mo(t,l,n)}break;case 5:var u=t.stateNode;if(null===n&&4&t.flags){n=u;var c=t.memoizedProps;switch(t.type){case"button":case"input":case"select":case"textarea":c.autoFocus&&n.focus();break;case"img":c.src&&(n.src=c.src)}}break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:case 25:break;case 13:if(null===t.memoizedState){var s=t.alternate;if(null!==s){var d=s.memoizedState;if(null!==d){var f=d.dehydrated;null!==f&&Gt(f)}}}break;default:throw Error(o(163))}Jl||512&t.flags&&au(t)}catch(e){xc(t,t.return,e)}}if(t===e){Xl=null;break}if(null!==(n=t.sibling)){n.return=t.return,Xl=n;break}Xl=t.return}}function Eu(e){for(;null!==Xl;){var t=Xl;if(t===e){Xl=null;break}var n=t.sibling;if(null!==n){n.return=t.return,Xl=n;break}Xl=t.return}}function wu(e){for(;null!==Xl;){var t=Xl;try{switch(t.tag){case 0:case 11:case 15:var n=t.return;try{ru(4,t)}catch(e){xc(t,n,e)}break;case 1:var r=t.stateNode;if("function"==typeof r.componentDidMount){var a=t.return;try{r.componentDidMount()}catch(e){xc(t,a,e)}}var o=t.return;try{au(t)}catch(e){xc(t,o,e)}break;case 5:var i=t.return;try{au(t)}catch(e){xc(t,i,e)}}}catch(e){xc(t,t.return,e)}if(t===e){Xl=null;break}var l=t.sibling;if(null!==l){l.return=t.return,Xl=l;break}Xl=t.return}}var Cu,xu=Math.ceil,Su=y.ReactCurrentDispatcher,ku=y.ReactCurrentOwner,Du=y.ReactCurrentBatchConfig,Iu=0,Pu=null,Bu=null,Ou=0,Nu=0,Ru=xa(0),_u=0,Tu=null,Fu=0,ju=0,Lu=0,Mu=null,zu=null,Uu=0,Gu=1/0,Wu=null,qu=!1,Hu=null,Vu=null,$u=!1,Qu=null,Yu=0,Ju=0,Ku=null,Xu=-1,Zu=0;function ec(){return 0!=(6&Iu)?Ke():-1!==Xu?Xu:Xu=Ke()}function tc(e){return 0==(1&e.mode)?1:0!=(2&Iu)&&0!==Ou?Ou&-Ou:null!==ho.transition?(0===Zu&&(Zu=gt()),Zu):0!==(e=At)?e:e=void 0===(e=window.event)?16:Jt(e.type)}function nc(e,t,n,r){if(50<Ju)throw Ju=0,Ku=null,Error(o(185));vt(e,n,r),0!=(2&Iu)&&e===Pu||(e===Pu&&(0==(2&Iu)&&(ju|=n),4===_u&&lc(e,Ou)),rc(e,r),1===n&&0===Iu&&0==(1&t.mode)&&(Gu=Ke()+500,Ma&&Ga()))}function rc(e,t){var n=e.callbackNode;!function(e,t){for(var n=e.suspendedLanes,r=e.pingedLanes,a=e.expirationTimes,o=e.pendingLanes;0<o;){var i=31-it(o),l=1<<i,u=a[i];-1===u?0!=(l&n)&&0==(l&r)||(a[i]=pt(l,t)):u<=t&&(e.expiredLanes|=l),o&=~l}}(e,t);var r=ft(e,e===Pu?Ou:0);if(0===r)null!==n&&Qe(n),e.callbackNode=null,e.callbackPriority=0;else if(t=r&-r,e.callbackPriority!==t){if(null!=n&&Qe(n),1===t)0===e.tag?function(e){Ma=!0,Ua(e)}(uc.bind(null,e)):Ua(uc.bind(null,e)),ia((function(){0==(6&Iu)&&Ga()})),n=null;else{switch(yt(r)){case 1:n=Ze;break;case 4:n=et;break;case 16:default:n=tt;break;case 536870912:n=rt}n=Pc(n,ac.bind(null,e))}e.callbackPriority=t,e.callbackNode=n}}function ac(e,t){if(Xu=-1,Zu=0,0!=(6&Iu))throw Error(o(327));var n=e.callbackNode;if(wc()&&e.callbackNode!==n)return null;var r=ft(e,e===Pu?Ou:0);if(0===r)return null;if(0!=(30&r)||0!=(r&e.expiredLanes)||t)t=hc(e,r);else{t=r;var a=Iu;Iu|=2;var i=mc();for(Pu===e&&Ou===t||(Wu=null,Gu=Ke()+500,fc(e,t));;)try{bc();break}catch(t){pc(e,t)}wo(),Su.current=i,Iu=a,null!==Bu?t=0:(Pu=null,Ou=0,t=_u)}if(0!==t){if(2===t&&0!==(a=mt(e))&&(r=a,t=oc(e,a)),1===t)throw n=Tu,fc(e,0),lc(e,r),rc(e,Ke()),n;if(6===t)lc(e,r);else{if(a=e.current.alternate,0==(30&r)&&!function(e){for(var t=e;;){if(16384&t.flags){var n=t.updateQueue;if(null!==n&&null!==(n=n.stores))for(var r=0;r<n.length;r++){var a=n[r],o=a.getSnapshot;a=a.value;try{if(!lr(o(),a))return!1}catch(e){return!1}}}if(n=t.child,16384&t.subtreeFlags&&null!==n)n.return=t,t=n;else{if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return!0;t=t.return}t.sibling.return=t.return,t=t.sibling}}return!0}(a)&&(2===(t=hc(e,r))&&0!==(i=mt(e))&&(r=i,t=oc(e,i)),1===t))throw n=Tu,fc(e,0),lc(e,r),rc(e,Ke()),n;switch(e.finishedWork=a,e.finishedLanes=r,t){case 0:case 1:throw Error(o(345));case 2:case 5:Ec(e,zu,Wu);break;case 3:if(lc(e,r),(130023424&r)===r&&10<(t=Uu+500-Ke())){if(0!==ft(e,0))break;if(((a=e.suspendedLanes)&r)!==r){ec(),e.pingedLanes|=e.suspendedLanes&a;break}e.timeoutHandle=ra(Ec.bind(null,e,zu,Wu),t);break}Ec(e,zu,Wu);break;case 4:if(lc(e,r),(4194240&r)===r)break;for(t=e.eventTimes,a=-1;0<r;){var l=31-it(r);i=1<<l,(l=t[l])>a&&(a=l),r&=~i}if(r=a,10<(r=(120>(r=Ke()-r)?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*xu(r/1960))-r)){e.timeoutHandle=ra(Ec.bind(null,e,zu,Wu),r);break}Ec(e,zu,Wu);break;default:throw Error(o(329))}}}return rc(e,Ke()),e.callbackNode===n?ac.bind(null,e):null}function oc(e,t){var n=Mu;return e.current.memoizedState.isDehydrated&&(fc(e,t).flags|=256),2!==(e=hc(e,t))&&(t=zu,zu=n,null!==t&&ic(t)),e}function ic(e){null===zu?zu=e:zu.push.apply(zu,e)}function lc(e,t){for(t&=~Lu,t&=~ju,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-it(t),r=1<<n;e[n]=-1,t&=~r}}function uc(e){if(0!=(6&Iu))throw Error(o(327));wc();var t=ft(e,0);if(0==(1&t))return rc(e,Ke()),null;var n=hc(e,t);if(0!==e.tag&&2===n){var r=mt(e);0!==r&&(t=r,n=oc(e,r))}if(1===n)throw n=Tu,fc(e,0),lc(e,t),rc(e,Ke()),n;if(6===n)throw Error(o(345));return e.finishedWork=e.current.alternate,e.finishedLanes=t,Ec(e,zu,Wu),rc(e,Ke()),null}function cc(e,t){var n=Iu;Iu|=1;try{return e(t)}finally{0===(Iu=n)&&(Gu=Ke()+500,Ma&&Ga())}}function sc(e){null!==Qu&&0===Qu.tag&&0==(6&Iu)&&wc();var t=Iu;Iu|=1;var n=Du.transition,r=At;try{if(Du.transition=null,At=1,e)return e()}finally{At=r,Du.transition=n,0==(6&(Iu=t))&&Ga()}}function dc(){Nu=Ru.current,Sa(Ru)}function fc(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,aa(n)),null!==Bu)for(n=Bu.return;null!==n;){var r=n;switch(to(r),r.tag){case 1:null!=(r=r.type.childContextTypes)&&Ra();break;case 3:oi(),Sa(Pa),Sa(Ia),di();break;case 5:li(r);break;case 4:oi();break;case 13:case 19:Sa(ui);break;case 10:Co(r.type._context);break;case 22:case 23:dc()}n=n.return}if(Pu=e,Bu=e=Rc(e.current,null),Ou=Nu=t,_u=0,Tu=null,Lu=ju=Fu=0,zu=Mu=null,null!==Do){for(t=0;t<Do.length;t++)if(null!==(r=(n=Do[t]).interleaved)){n.interleaved=null;var a=r.next,o=n.pending;if(null!==o){var i=o.next;o.next=a,r.next=i}n.pending=r}Do=null}return e}function pc(e,t){for(;;){var n=Bu;try{if(wo(),fi.current=il,bi){for(var r=gi.memoizedState;null!==r;){var a=r.queue;null!==a&&(a.pending=null),r=r.next}bi=!1}if(mi=0,vi=hi=gi=null,Ai=!1,yi=0,ku.current=null,null===n||null===n.return){_u=1,Tu=t,Bu=null;break}e:{var i=e,l=n.return,u=n,c=t;if(t=Ou,u.flags|=32768,null!==c&&"object"==typeof c&&"function"==typeof c.then){var s=c,d=u,f=d.tag;if(0==(1&d.mode)&&(0===f||11===f||15===f)){var p=d.alternate;p?(d.updateQueue=p.updateQueue,d.memoizedState=p.memoizedState,d.lanes=p.lanes):(d.updateQueue=null,d.memoizedState=null)}var m=vl(l);if(null!==m){m.flags&=-257,bl(m,l,u,0,t),1&m.mode&&hl(i,s,t),c=s;var g=(t=m).updateQueue;if(null===g){var h=new Set;h.add(c),t.updateQueue=h}else g.add(c);break e}if(0==(1&t)){hl(i,s,t),gc();break e}c=Error(o(426))}else if(ao&&1&u.mode){var v=vl(l);if(null!==v){0==(65536&v.flags)&&(v.flags|=256),bl(v,l,u,0,t),go(sl(c,u));break e}}i=c=sl(c,u),4!==_u&&(_u=2),null===Mu?Mu=[i]:Mu.push(i),i=l;do{switch(i.tag){case 3:i.flags|=65536,t&=-t,i.lanes|=t,jo(i,ml(0,c,t));break e;case 1:u=c;var b=i.type,A=i.stateNode;if(0==(128&i.flags)&&("function"==typeof b.getDerivedStateFromError||null!==A&&"function"==typeof A.componentDidCatch&&(null===Vu||!Vu.has(A)))){i.flags|=65536,t&=-t,i.lanes|=t,jo(i,gl(i,u,t));break e}}i=i.return}while(null!==i)}yc(n)}catch(e){t=e,Bu===n&&null!==n&&(Bu=n=n.return);continue}break}}function mc(){var e=Su.current;return Su.current=il,null===e?il:e}function gc(){0!==_u&&3!==_u&&2!==_u||(_u=4),null===Pu||0==(268435455&Fu)&&0==(268435455&ju)||lc(Pu,Ou)}function hc(e,t){var n=Iu;Iu|=2;var r=mc();for(Pu===e&&Ou===t||(Wu=null,fc(e,t));;)try{vc();break}catch(t){pc(e,t)}if(wo(),Iu=n,Su.current=r,null!==Bu)throw Error(o(261));return Pu=null,Ou=0,_u}function vc(){for(;null!==Bu;)Ac(Bu)}function bc(){for(;null!==Bu&&!Ye();)Ac(Bu)}function Ac(e){var t=Cu(e.alternate,e,Nu);e.memoizedProps=e.pendingProps,null===t?yc(e):Bu=t,ku.current=null}function yc(e){var t=e;do{var n=t.alternate;if(e=t.return,0==(32768&t.flags)){if(null!==(n=$l(n,t,Nu)))return void(Bu=n)}else{if(null!==(n=Ql(n,t)))return n.flags&=32767,void(Bu=n);if(null===e)return _u=6,void(Bu=null);e.flags|=32768,e.subtreeFlags=0,e.deletions=null}if(null!==(t=t.sibling))return void(Bu=t);Bu=t=e}while(null!==t);0===_u&&(_u=5)}function Ec(e,t,n){var r=At,a=Du.transition;try{Du.transition=null,At=1,function(e,t,n,r){do{wc()}while(null!==Qu);if(0!=(6&Iu))throw Error(o(327));n=e.finishedWork;var a=e.finishedLanes;if(null===n)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(o(177));e.callbackNode=null,e.callbackPriority=0;var i=n.lanes|n.childLanes;if(function(e,t){var n=e.pendingLanes&~t;e.pendingLanes=t,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=t,e.mutableReadLanes&=t,e.entangledLanes&=t,t=e.entanglements;var r=e.eventTimes;for(e=e.expirationTimes;0<n;){var a=31-it(n),o=1<<a;t[a]=0,r[a]=-1,e[a]=-1,n&=~o}}(e,i),e===Pu&&(Bu=Pu=null,Ou=0),0==(2064&n.subtreeFlags)&&0==(2064&n.flags)||$u||($u=!0,Pc(tt,(function(){return wc(),null}))),i=0!=(15990&n.flags),0!=(15990&n.subtreeFlags)||i){i=Du.transition,Du.transition=null;var l=At;At=1;var u=Iu;Iu|=4,ku.current=null,function(e,t){if(ea=qt,pr(e=fr())){if("selectionStart"in e)var n={start:e.selectionStart,end:e.selectionEnd};else e:{var r=(n=(n=e.ownerDocument)&&n.defaultView||window).getSelection&&n.getSelection();if(r&&0!==r.rangeCount){n=r.anchorNode;var a=r.anchorOffset,i=r.focusNode;r=r.focusOffset;try{n.nodeType,i.nodeType}catch(e){n=null;break e}var l=0,u=-1,c=-1,s=0,d=0,f=e,p=null;t:for(;;){for(var m;f!==n||0!==a&&3!==f.nodeType||(u=l+a),f!==i||0!==r&&3!==f.nodeType||(c=l+r),3===f.nodeType&&(l+=f.nodeValue.length),null!==(m=f.firstChild);)p=f,f=m;for(;;){if(f===e)break t;if(p===n&&++s===a&&(u=l),p===i&&++d===r&&(c=l),null!==(m=f.nextSibling))break;p=(f=p).parentNode}f=m}n=-1===u||-1===c?null:{start:u,end:c}}else n=null}n=n||{start:0,end:0}}else n=null;for(ta={focusedElem:e,selectionRange:n},qt=!1,Xl=t;null!==Xl;)if(e=(t=Xl).child,0!=(1028&t.subtreeFlags)&&null!==e)e.return=t,Xl=e;else for(;null!==Xl;){t=Xl;try{var g=t.alternate;if(0!=(1024&t.flags))switch(t.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==g){var h=g.memoizedProps,v=g.memoizedState,b=t.stateNode,A=b.getSnapshotBeforeUpdate(t.elementType===t.type?h:vo(t.type,h),v);b.__reactInternalSnapshotBeforeUpdate=A}break;case 3:var y=t.stateNode.containerInfo;1===y.nodeType?y.textContent="":9===y.nodeType&&y.documentElement&&y.removeChild(y.documentElement);break;default:throw Error(o(163))}}catch(e){xc(t,t.return,e)}if(null!==(e=t.sibling)){e.return=t.return,Xl=e;break}Xl=t.return}g=tu,tu=!1}(e,n),hu(n,e),mr(ta),qt=!!ea,ta=ea=null,e.current=n,bu(n,e,a),Je(),Iu=u,At=l,Du.transition=i}else e.current=n;if($u&&($u=!1,Qu=e,Yu=a),0===(i=e.pendingLanes)&&(Vu=null),function(e){if(ot&&"function"==typeof ot.onCommitFiberRoot)try{ot.onCommitFiberRoot(at,e,void 0,128==(128&e.current.flags))}catch(e){}}(n.stateNode),rc(e,Ke()),null!==t)for(r=e.onRecoverableError,n=0;n<t.length;n++)r((a=t[n]).value,{componentStack:a.stack,digest:a.digest});if(qu)throw qu=!1,e=Hu,Hu=null,e;0!=(1&Yu)&&0!==e.tag&&wc(),0!=(1&(i=e.pendingLanes))?e===Ku?Ju++:(Ju=0,Ku=e):Ju=0,Ga()}(e,t,n,r)}finally{Du.transition=a,At=r}return null}function wc(){if(null!==Qu){var e=yt(Yu),t=Du.transition,n=At;try{if(Du.transition=null,At=16>e?16:e,null===Qu)var r=!1;else{if(e=Qu,Qu=null,Yu=0,0!=(6&Iu))throw Error(o(331));var a=Iu;for(Iu|=4,Xl=e.current;null!==Xl;){var i=Xl,l=i.child;if(0!=(16&Xl.flags)){var u=i.deletions;if(null!==u){for(var c=0;c<u.length;c++){var s=u[c];for(Xl=s;null!==Xl;){var d=Xl;switch(d.tag){case 0:case 11:case 15:nu(8,d,i)}var f=d.child;if(null!==f)f.return=d,Xl=f;else for(;null!==Xl;){var p=(d=Xl).sibling,m=d.return;if(ou(d),d===s){Xl=null;break}if(null!==p){p.return=m,Xl=p;break}Xl=m}}}var g=i.alternate;if(null!==g){var h=g.child;if(null!==h){g.child=null;do{var v=h.sibling;h.sibling=null,h=v}while(null!==h)}}Xl=i}}if(0!=(2064&i.subtreeFlags)&&null!==l)l.return=i,Xl=l;else e:for(;null!==Xl;){if(0!=(2048&(i=Xl).flags))switch(i.tag){case 0:case 11:case 15:nu(9,i,i.return)}var b=i.sibling;if(null!==b){b.return=i.return,Xl=b;break e}Xl=i.return}}var A=e.current;for(Xl=A;null!==Xl;){var y=(l=Xl).child;if(0!=(2064&l.subtreeFlags)&&null!==y)y.return=l,Xl=y;else e:for(l=A;null!==Xl;){if(0!=(2048&(u=Xl).flags))try{switch(u.tag){case 0:case 11:case 15:ru(9,u)}}catch(e){xc(u,u.return,e)}if(u===l){Xl=null;break e}var E=u.sibling;if(null!==E){E.return=u.return,Xl=E;break e}Xl=u.return}}if(Iu=a,Ga(),ot&&"function"==typeof ot.onPostCommitFiberRoot)try{ot.onPostCommitFiberRoot(at,e)}catch(e){}r=!0}return r}finally{At=n,Du.transition=t}}return!1}function Cc(e,t,n){e=To(e,t=ml(0,t=sl(n,t),1),1),t=ec(),null!==e&&(vt(e,1,t),rc(e,t))}function xc(e,t,n){if(3===e.tag)Cc(e,e,n);else for(;null!==t;){if(3===t.tag){Cc(t,e,n);break}if(1===t.tag){var r=t.stateNode;if("function"==typeof t.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Vu||!Vu.has(r))){t=To(t,e=gl(t,e=sl(n,e),1),1),e=ec(),null!==t&&(vt(t,1,e),rc(t,e));break}}t=t.return}}function Sc(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),t=ec(),e.pingedLanes|=e.suspendedLanes&n,Pu===e&&(Ou&n)===n&&(4===_u||3===_u&&(130023424&Ou)===Ou&&500>Ke()-Uu?fc(e,0):Lu|=n),rc(e,t)}function kc(e,t){0===t&&(0==(1&e.mode)?t=1:(t=st,0==(130023424&(st<<=1))&&(st=4194304)));var n=ec();null!==(e=Bo(e,t))&&(vt(e,t,n),rc(e,n))}function Dc(e){var t=e.memoizedState,n=0;null!==t&&(n=t.retryLane),kc(e,n)}function Ic(e,t){var n=0;switch(e.tag){case 13:var r=e.stateNode,a=e.memoizedState;null!==a&&(n=a.retryLane);break;case 19:r=e.stateNode;break;default:throw Error(o(314))}null!==r&&r.delete(t),kc(e,n)}function Pc(e,t){return $e(e,t)}function Bc(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Oc(e,t,n,r){return new Bc(e,t,n,r)}function Nc(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Rc(e,t){var n=e.alternate;return null===n?((n=Oc(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.subtreeFlags=0,n.deletions=null),n.flags=14680064&e.flags,n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function _c(e,t,n,r,a,i){var l=2;if(r=e,"function"==typeof e)Nc(e)&&(l=1);else if("string"==typeof e)l=5;else e:switch(e){case C:return Tc(n.children,a,i,t);case x:l=8,a|=8;break;case S:return(e=Oc(12,n,t,2|a)).elementType=S,e.lanes=i,e;case P:return(e=Oc(13,n,t,a)).elementType=P,e.lanes=i,e;case B:return(e=Oc(19,n,t,a)).elementType=B,e.lanes=i,e;case R:return Fc(n,a,i,t);default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case k:l=10;break e;case D:l=9;break e;case I:l=11;break e;case O:l=14;break e;case N:l=16,r=null;break e}throw Error(o(130,null==e?e:typeof e,""))}return(t=Oc(l,n,t,a)).elementType=e,t.type=r,t.lanes=i,t}function Tc(e,t,n,r){return(e=Oc(7,e,r,t)).lanes=n,e}function Fc(e,t,n,r){return(e=Oc(22,e,r,t)).elementType=R,e.lanes=n,e.stateNode={isHidden:!1},e}function jc(e,t,n){return(e=Oc(6,e,null,t)).lanes=n,e}function Lc(e,t,n){return(t=Oc(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Mc(e,t,n,r,a){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=ht(0),this.expirationTimes=ht(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=ht(0),this.identifierPrefix=r,this.onRecoverableError=a,this.mutableSourceEagerHydrationData=null}function zc(e,t,n,r,a,o,i,l,u){return e=new Mc(e,t,n,l,u),1===t?(t=1,!0===o&&(t|=8)):t=0,o=Oc(3,null,null,t),e.current=o,o.stateNode=e,o.memoizedState={element:r,isDehydrated:n,cache:null,transitions:null,pendingSuspenseBoundaries:null},No(o),e}function Uc(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:w,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}function Gc(e){if(!e)return Da;e:{if(Ge(e=e._reactInternals)!==e||1!==e.tag)throw Error(o(170));var t=e;do{switch(t.tag){case 3:t=t.stateNode.context;break e;case 1:if(Na(t.type)){t=t.stateNode.__reactInternalMemoizedMergedChildContext;break e}}t=t.return}while(null!==t);throw Error(o(171))}if(1===e.tag){var n=e.type;if(Na(n))return Ta(e,n,t)}return t}function Wc(e,t,n,r,a,o,i,l,u){return(e=zc(n,r,!0,e,0,o,0,l,u)).context=Gc(null),n=e.current,(o=_o(r=ec(),a=tc(n))).callback=null!=t?t:null,To(n,o,a),e.current.lanes=a,vt(e,a,r),rc(e,r),e}function qc(e,t,n,r){var a=t.current,o=ec(),i=tc(a);return n=Gc(n),null===t.context?t.context=n:t.pendingContext=n,(t=_o(o,i)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),null!==(e=To(a,t,i))&&(nc(e,a,i,o),Fo(e,a,i)),i}function Hc(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function Vc(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function $c(e,t){Vc(e,t),(e=e.alternate)&&Vc(e,t)}Cu=function(e,t,n){if(null!==e)if(e.memoizedProps!==t.pendingProps||Pa.current)yl=!0;else{if(0==(e.lanes&n)&&0==(128&t.flags))return yl=!1,function(e,t,n){switch(t.tag){case 3:Bl(t),mo();break;case 5:ii(t);break;case 1:Na(t.type)&&Fa(t);break;case 4:ai(t,t.stateNode.containerInfo);break;case 10:var r=t.type._context,a=t.memoizedProps.value;ka(bo,r._currentValue),r._currentValue=a;break;case 13:if(null!==(r=t.memoizedState))return null!==r.dehydrated?(ka(ui,1&ui.current),t.flags|=128,null):0!=(n&t.child.childLanes)?jl(e,t,n):(ka(ui,1&ui.current),null!==(e=ql(e,t,n))?e.sibling:null);ka(ui,1&ui.current);break;case 19:if(r=0!=(n&t.childLanes),0!=(128&e.flags)){if(r)return Gl(e,t,n);t.flags|=128}if(null!==(a=t.memoizedState)&&(a.rendering=null,a.tail=null,a.lastEffect=null),ka(ui,ui.current),r)break;return null;case 22:case 23:return t.lanes=0,Sl(e,t,n)}return ql(e,t,n)}(e,t,n);yl=0!=(131072&e.flags)}else yl=!1,ao&&0!=(1048576&t.flags)&&Za(t,Va,t.index);switch(t.lanes=0,t.tag){case 2:var r=t.type;Wl(e,t),e=t.pendingProps;var a=Oa(t,Ia.current);So(t,n),a=xi(null,t,r,e,a,n);var i=Si();return t.flags|=1,"object"==typeof a&&null!==a&&"function"==typeof a.render&&void 0===a.$$typeof?(t.tag=1,t.memoizedState=null,t.updateQueue=null,Na(r)?(i=!0,Fa(t)):i=!1,t.memoizedState=null!==a.state&&void 0!==a.state?a.state:null,No(t),a.updater=Go,t.stateNode=a,a._reactInternals=t,Vo(t,r,e,n),t=Pl(null,t,r,!0,i,n)):(t.tag=0,ao&&i&&eo(t),El(null,t,a,n),t=t.child),t;case 16:r=t.elementType;e:{switch(Wl(e,t),e=t.pendingProps,r=(a=r._init)(r._payload),t.type=r,a=t.tag=function(e){if("function"==typeof e)return Nc(e)?1:0;if(null!=e){if((e=e.$$typeof)===I)return 11;if(e===O)return 14}return 2}(r),e=vo(r,e),a){case 0:t=Dl(null,t,r,e,n);break e;case 1:t=Il(null,t,r,e,n);break e;case 11:t=wl(null,t,r,e,n);break e;case 14:t=Cl(null,t,r,vo(r.type,e),n);break e}throw Error(o(306,r,""))}return t;case 0:return r=t.type,a=t.pendingProps,Dl(e,t,r,a=t.elementType===r?a:vo(r,a),n);case 1:return r=t.type,a=t.pendingProps,Il(e,t,r,a=t.elementType===r?a:vo(r,a),n);case 3:e:{if(Bl(t),null===e)throw Error(o(387));r=t.pendingProps,a=(i=t.memoizedState).element,Ro(e,t),Lo(t,r,null,n);var l=t.memoizedState;if(r=l.element,i.isDehydrated){if(i={element:r,isDehydrated:!1,cache:l.cache,pendingSuspenseBoundaries:l.pendingSuspenseBoundaries,transitions:l.transitions},t.updateQueue.baseState=i,t.memoizedState=i,256&t.flags){t=Ol(e,t,r,n,a=sl(Error(o(423)),t));break e}if(r!==a){t=Ol(e,t,r,n,a=sl(Error(o(424)),t));break e}for(ro=ca(t.stateNode.containerInfo.firstChild),no=t,ao=!0,oo=null,n=Xo(t,null,r,n),t.child=n;n;)n.flags=-3&n.flags|4096,n=n.sibling}else{if(mo(),r===a){t=ql(e,t,n);break e}El(e,t,r,n)}t=t.child}return t;case 5:return ii(t),null===e&&co(t),r=t.type,a=t.pendingProps,i=null!==e?e.memoizedProps:null,l=a.children,na(r,a)?l=null:null!==i&&na(r,i)&&(t.flags|=32),kl(e,t),El(e,t,l,n),t.child;case 6:return null===e&&co(t),null;case 13:return jl(e,t,n);case 4:return ai(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=Ko(t,null,r,n):El(e,t,r,n),t.child;case 11:return r=t.type,a=t.pendingProps,wl(e,t,r,a=t.elementType===r?a:vo(r,a),n);case 7:return El(e,t,t.pendingProps,n),t.child;case 8:case 12:return El(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(r=t.type._context,a=t.pendingProps,i=t.memoizedProps,l=a.value,ka(bo,r._currentValue),r._currentValue=l,null!==i)if(lr(i.value,l)){if(i.children===a.children&&!Pa.current){t=ql(e,t,n);break e}}else for(null!==(i=t.child)&&(i.return=t);null!==i;){var u=i.dependencies;if(null!==u){l=i.child;for(var c=u.firstContext;null!==c;){if(c.context===r){if(1===i.tag){(c=_o(-1,n&-n)).tag=2;var s=i.updateQueue;if(null!==s){var d=(s=s.shared).pending;null===d?c.next=c:(c.next=d.next,d.next=c),s.pending=c}}i.lanes|=n,null!==(c=i.alternate)&&(c.lanes|=n),xo(i.return,n,t),u.lanes|=n;break}c=c.next}}else if(10===i.tag)l=i.type===t.type?null:i.child;else if(18===i.tag){if(null===(l=i.return))throw Error(o(341));l.lanes|=n,null!==(u=l.alternate)&&(u.lanes|=n),xo(l,n,t),l=i.sibling}else l=i.child;if(null!==l)l.return=i;else for(l=i;null!==l;){if(l===t){l=null;break}if(null!==(i=l.sibling)){i.return=l.return,l=i;break}l=l.return}i=l}El(e,t,a.children,n),t=t.child}return t;case 9:return a=t.type,r=t.pendingProps.children,So(t,n),r=r(a=ko(a)),t.flags|=1,El(e,t,r,n),t.child;case 14:return a=vo(r=t.type,t.pendingProps),Cl(e,t,r,a=vo(r.type,a),n);case 15:return xl(e,t,t.type,t.pendingProps,n);case 17:return r=t.type,a=t.pendingProps,a=t.elementType===r?a:vo(r,a),Wl(e,t),t.tag=1,Na(r)?(e=!0,Fa(t)):e=!1,So(t,n),qo(t,r,a),Vo(t,r,a,n),Pl(null,t,r,!0,e,n);case 19:return Gl(e,t,n);case 22:return Sl(e,t,n)}throw Error(o(156,t.tag))};var Qc="function"==typeof reportError?reportError:function(e){console.error(e)};function Yc(e){this._internalRoot=e}function Jc(e){this._internalRoot=e}function Kc(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType)}function Xc(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Zc(){}function es(e,t,n,r,a){var o=n._reactRootContainer;if(o){var i=o;if("function"==typeof a){var l=a;a=function(){var e=Hc(i);l.call(e)}}qc(t,i,e,a)}else i=function(e,t,n,r,a){if(a){if("function"==typeof r){var o=r;r=function(){var e=Hc(i);o.call(e)}}var i=Wc(t,r,e,0,null,!1,0,"",Zc);return e._reactRootContainer=i,e[ma]=i.current,Gr(8===e.nodeType?e.parentNode:e),sc(),i}for(;a=e.lastChild;)e.removeChild(a);if("function"==typeof r){var l=r;r=function(){var e=Hc(u);l.call(e)}}var u=zc(e,0,!1,null,0,!1,0,"",Zc);return e._reactRootContainer=u,e[ma]=u.current,Gr(8===e.nodeType?e.parentNode:e),sc((function(){qc(t,u,n,r)})),u}(n,t,e,a,r);return Hc(i)}Jc.prototype.render=Yc.prototype.render=function(e){var t=this._internalRoot;if(null===t)throw Error(o(409));qc(e,t,null,null)},Jc.prototype.unmount=Yc.prototype.unmount=function(){var e=this._internalRoot;if(null!==e){this._internalRoot=null;var t=e.containerInfo;sc((function(){qc(null,e,null,null)})),t[ma]=null}},Jc.prototype.unstable_scheduleHydration=function(e){if(e){var t=xt();e={blockedOn:null,target:e,priority:t};for(var n=0;n<Rt.length&&0!==t&&t<Rt[n].priority;n++);Rt.splice(n,0,e),0===n&&jt(e)}},Et=function(e){switch(e.tag){case 3:var t=e.stateNode;if(t.current.memoizedState.isDehydrated){var n=dt(t.pendingLanes);0!==n&&(bt(t,1|n),rc(t,Ke()),0==(6&Iu)&&(Gu=Ke()+500,Ga()))}break;case 13:sc((function(){var t=Bo(e,1);if(null!==t){var n=ec();nc(t,e,1,n)}})),$c(e,1)}},wt=function(e){if(13===e.tag){var t=Bo(e,134217728);null!==t&&nc(t,e,134217728,ec()),$c(e,134217728)}},Ct=function(e){if(13===e.tag){var t=tc(e),n=Bo(e,t);null!==n&&nc(n,e,t,ec()),$c(e,t)}},xt=function(){return At},St=function(e,t){var n=At;try{return At=e,t()}finally{At=n}},we=function(e,t,n){switch(t){case"input":if(X(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var a=Ea(r);if(!a)throw Error(o(90));$(r),X(r,a)}}}break;case"textarea":oe(e,n);break;case"select":null!=(t=n.value)&&ne(e,!!n.multiple,t,!1)}},Ie=cc,Pe=sc;var ts={usingClientEntryPoint:!1,Events:[Aa,ya,Ea,ke,De,cc]},ns={findFiberByHostInstance:ba,bundleType:0,version:"18.2.0",rendererPackageName:"react-dom"},rs={bundleType:ns.bundleType,version:ns.version,rendererPackageName:ns.rendererPackageName,rendererConfig:ns.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:y.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=He(e))?null:e.stateNode},findFiberByHostInstance:ns.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.2.0-next-9e3b772b8-20220608"};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var as=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!as.isDisabled&&as.supportsFiber)try{at=as.inject(rs),ot=as}catch(se){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=ts,t.createPortal=function(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Kc(t))throw Error(o(200));return Uc(e,t,null,n)},t.createRoot=function(e,t){if(!Kc(e))throw Error(o(299));var n=!1,r="",a=Qc;return null!=t&&(!0===t.unstable_strictMode&&(n=!0),void 0!==t.identifierPrefix&&(r=t.identifierPrefix),void 0!==t.onRecoverableError&&(a=t.onRecoverableError)),t=zc(e,1,!1,null,0,n,0,r,a),e[ma]=t.current,Gr(8===e.nodeType?e.parentNode:e),new Yc(t)},t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"==typeof e.render)throw Error(o(188));throw e=Object.keys(e).join(","),Error(o(268,e))}return null===(e=He(t))?null:e.stateNode},t.flushSync=function(e){return sc(e)},t.hydrate=function(e,t,n){if(!Xc(t))throw Error(o(200));return es(null,e,t,!0,n)},t.hydrateRoot=function(e,t,n){if(!Kc(e))throw Error(o(405));var r=null!=n&&n.hydratedSources||null,a=!1,i="",l=Qc;if(null!=n&&(!0===n.unstable_strictMode&&(a=!0),void 0!==n.identifierPrefix&&(i=n.identifierPrefix),void 0!==n.onRecoverableError&&(l=n.onRecoverableError)),t=Wc(t,null,e,1,null!=n?n:null,a,0,i,l),e[ma]=t.current,Gr(e),r)for(e=0;e<r.length;e++)a=(a=(n=r[e])._getVersion)(n._source),null==t.mutableSourceEagerHydrationData?t.mutableSourceEagerHydrationData=[n,a]:t.mutableSourceEagerHydrationData.push(n,a);return new Jc(t)},t.render=function(e,t,n){if(!Xc(t))throw Error(o(200));return es(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!Xc(e))throw Error(o(40));return!!e._reactRootContainer&&(sc((function(){es(null,null,e,!1,(function(){e._reactRootContainer=null,e[ma]=null}))})),!0)},t.unstable_batchedUpdates=cc,t.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!Xc(n))throw Error(o(200));if(null==e||void 0===e._reactInternals)throw Error(o(38));return es(e,t,n,!1,r)},t.version="18.2.0-next-9e3b772b8-20220608"},745:(e,t,n)=>{"use strict";var r=n(935);t.s=r.createRoot,r.hydrateRoot},935:(e,t,n)=>{"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(448)},921:(e,t)=>{"use strict";var n="function"==typeof Symbol&&Symbol.for,r=n?Symbol.for("react.element"):60103,a=n?Symbol.for("react.portal"):60106,o=n?Symbol.for("react.fragment"):60107,i=n?Symbol.for("react.strict_mode"):60108,l=n?Symbol.for("react.profiler"):60114,u=n?Symbol.for("react.provider"):60109,c=n?Symbol.for("react.context"):60110,s=n?Symbol.for("react.async_mode"):60111,d=n?Symbol.for("react.concurrent_mode"):60111,f=n?Symbol.for("react.forward_ref"):60112,p=n?Symbol.for("react.suspense"):60113,m=n?Symbol.for("react.suspense_list"):60120,g=n?Symbol.for("react.memo"):60115,h=n?Symbol.for("react.lazy"):60116,v=n?Symbol.for("react.block"):60121,b=n?Symbol.for("react.fundamental"):60117,A=n?Symbol.for("react.responder"):60118,y=n?Symbol.for("react.scope"):60119;function E(e){if("object"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case r:switch(e=e.type){case s:case d:case o:case l:case i:case p:return e;default:switch(e=e&&e.$$typeof){case c:case f:case h:case g:case u:return e;default:return t}}case a:return t}}}function w(e){return E(e)===d}t.AsyncMode=s,t.ConcurrentMode=d,t.ContextConsumer=c,t.ContextProvider=u,t.Element=r,t.ForwardRef=f,t.Fragment=o,t.Lazy=h,t.Memo=g,t.Portal=a,t.Profiler=l,t.StrictMode=i,t.Suspense=p,t.isAsyncMode=function(e){return w(e)||E(e)===s},t.isConcurrentMode=w,t.isContextConsumer=function(e){return E(e)===c},t.isContextProvider=function(e){return E(e)===u},t.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===r},t.isForwardRef=function(e){return E(e)===f},t.isFragment=function(e){return E(e)===o},t.isLazy=function(e){return E(e)===h},t.isMemo=function(e){return E(e)===g},t.isPortal=function(e){return E(e)===a},t.isProfiler=function(e){return E(e)===l},t.isStrictMode=function(e){return E(e)===i},t.isSuspense=function(e){return E(e)===p},t.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===o||e===d||e===l||e===i||e===p||e===m||"object"==typeof e&&null!==e&&(e.$$typeof===h||e.$$typeof===g||e.$$typeof===u||e.$$typeof===c||e.$$typeof===f||e.$$typeof===b||e.$$typeof===A||e.$$typeof===y||e.$$typeof===v)},t.typeOf=E},864:(e,t,n)=>{"use strict";e.exports=n(921)},359:(e,t)=>{"use strict";var n=60103,r=60106,a=60107,o=60108,i=60114,l=60109,u=60110,c=60112,s=60113,d=60120,f=60115,p=60116;if("function"==typeof Symbol&&Symbol.for){var m=Symbol.for;n=m("react.element"),r=m("react.portal"),a=m("react.fragment"),o=m("react.strict_mode"),i=m("react.profiler"),l=m("react.provider"),u=m("react.context"),c=m("react.forward_ref"),s=m("react.suspense"),d=m("react.suspense_list"),f=m("react.memo"),p=m("react.lazy"),m("react.block"),m("react.server.block"),m("react.fundamental"),m("react.debug_trace_mode"),m("react.legacy_hidden")}t.isContextConsumer=function(e){return function(e){if("object"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case n:switch(e=e.type){case a:case i:case o:case s:case d:return e;default:switch(e=e&&e.$$typeof){case u:case c:case p:case f:case l:return e;default:return t}}case r:return t}}}(e)===u}},973:(e,t,n)=>{"use strict";e.exports=n(359)},408:(e,t)=>{"use strict";var n=Symbol.for("react.element"),r=Symbol.for("react.portal"),a=Symbol.for("react.fragment"),o=Symbol.for("react.strict_mode"),i=Symbol.for("react.profiler"),l=Symbol.for("react.provider"),u=Symbol.for("react.context"),c=Symbol.for("react.forward_ref"),s=Symbol.for("react.suspense"),d=Symbol.for("react.memo"),f=Symbol.for("react.lazy"),p=Symbol.iterator,m={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},g=Object.assign,h={};function v(e,t,n){this.props=e,this.context=t,this.refs=h,this.updater=n||m}function b(){}function A(e,t,n){this.props=e,this.context=t,this.refs=h,this.updater=n||m}v.prototype.isReactComponent={},v.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,t,"setState")},v.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},b.prototype=v.prototype;var y=A.prototype=new b;y.constructor=A,g(y,v.prototype),y.isPureReactComponent=!0;var E=Array.isArray,w=Object.prototype.hasOwnProperty,C={current:null},x={key:!0,ref:!0,__self:!0,__source:!0};function S(e,t,r){var a,o={},i=null,l=null;if(null!=t)for(a in void 0!==t.ref&&(l=t.ref),void 0!==t.key&&(i=""+t.key),t)w.call(t,a)&&!x.hasOwnProperty(a)&&(o[a]=t[a]);var u=arguments.length-2;if(1===u)o.children=r;else if(1<u){for(var c=Array(u),s=0;s<u;s++)c[s]=arguments[s+2];o.children=c}if(e&&e.defaultProps)for(a in u=e.defaultProps)void 0===o[a]&&(o[a]=u[a]);return{$$typeof:n,type:e,key:i,ref:l,props:o,_owner:C.current}}function k(e){return"object"==typeof e&&null!==e&&e.$$typeof===n}var D=/\/+/g;function I(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function P(e,t,a,o,i){var l=typeof e;"undefined"!==l&&"boolean"!==l||(e=null);var u=!1;if(null===e)u=!0;else switch(l){case"string":case"number":u=!0;break;case"object":switch(e.$$typeof){case n:case r:u=!0}}if(u)return i=i(u=e),e=""===o?"."+I(u,0):o,E(i)?(a="",null!=e&&(a=e.replace(D,"$&/")+"/"),P(i,t,a,"",(function(e){return e}))):null!=i&&(k(i)&&(i=function(e,t){return{$$typeof:n,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(i,a+(!i.key||u&&u.key===i.key?"":(""+i.key).replace(D,"$&/")+"/")+e)),t.push(i)),1;if(u=0,o=""===o?".":o+":",E(e))for(var c=0;c<e.length;c++){var s=o+I(l=e[c],c);u+=P(l,t,a,s,i)}else if(s=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=p&&e[p]||e["@@iterator"])?e:null}(e),"function"==typeof s)for(e=s.call(e),c=0;!(l=e.next()).done;)u+=P(l=l.value,t,a,s=o+I(l,c++),i);else if("object"===l)throw t=String(e),Error("Objects are not valid as a React child (found: "+("[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t)+"). If you meant to render a collection of children, use an array instead.");return u}function B(e,t,n){if(null==e)return e;var r=[],a=0;return P(e,r,"","",(function(e){return t.call(n,e,a++)})),r}function O(e){if(-1===e._status){var t=e._result;(t=t()).then((function(t){0!==e._status&&-1!==e._status||(e._status=1,e._result=t)}),(function(t){0!==e._status&&-1!==e._status||(e._status=2,e._result=t)})),-1===e._status&&(e._status=0,e._result=t)}if(1===e._status)return e._result.default;throw e._result}var N={current:null},R={transition:null},_={ReactCurrentDispatcher:N,ReactCurrentBatchConfig:R,ReactCurrentOwner:C};t.Children={map:B,forEach:function(e,t,n){B(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return B(e,(function(){t++})),t},toArray:function(e){return B(e,(function(e){return e}))||[]},only:function(e){if(!k(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},t.Component=v,t.Fragment=a,t.Profiler=i,t.PureComponent=A,t.StrictMode=o,t.Suspense=s,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=_,t.cloneElement=function(e,t,r){if(null==e)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var a=g({},e.props),o=e.key,i=e.ref,l=e._owner;if(null!=t){if(void 0!==t.ref&&(i=t.ref,l=C.current),void 0!==t.key&&(o=""+t.key),e.type&&e.type.defaultProps)var u=e.type.defaultProps;for(c in t)w.call(t,c)&&!x.hasOwnProperty(c)&&(a[c]=void 0===t[c]&&void 0!==u?u[c]:t[c])}var c=arguments.length-2;if(1===c)a.children=r;else if(1<c){u=Array(c);for(var s=0;s<c;s++)u[s]=arguments[s+2];a.children=u}return{$$typeof:n,type:e.type,key:o,ref:i,props:a,_owner:l}},t.createContext=function(e){return(e={$$typeof:u,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:l,_context:e},e.Consumer=e},t.createElement=S,t.createFactory=function(e){var t=S.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:c,render:e}},t.isValidElement=k,t.lazy=function(e){return{$$typeof:f,_payload:{_status:-1,_result:e},_init:O}},t.memo=function(e,t){return{$$typeof:d,type:e,compare:void 0===t?null:t}},t.startTransition=function(e){var t=R.transition;R.transition={};try{e()}finally{R.transition=t}},t.unstable_act=function(){throw Error("act(...) is not supported in production builds of React.")},t.useCallback=function(e,t){return N.current.useCallback(e,t)},t.useContext=function(e){return N.current.useContext(e)},t.useDebugValue=function(){},t.useDeferredValue=function(e){return N.current.useDeferredValue(e)},t.useEffect=function(e,t){return N.current.useEffect(e,t)},t.useId=function(){return N.current.useId()},t.useImperativeHandle=function(e,t,n){return N.current.useImperativeHandle(e,t,n)},t.useInsertionEffect=function(e,t){return N.current.useInsertionEffect(e,t)},t.useLayoutEffect=function(e,t){return N.current.useLayoutEffect(e,t)},t.useMemo=function(e,t){return N.current.useMemo(e,t)},t.useReducer=function(e,t,n){return N.current.useReducer(e,t,n)},t.useRef=function(e){return N.current.useRef(e)},t.useState=function(e){return N.current.useState(e)},t.useSyncExternalStore=function(e,t,n){return N.current.useSyncExternalStore(e,t,n)},t.useTransition=function(){return N.current.useTransition()},t.version="18.2.0"},294:(e,t,n)=>{"use strict";e.exports=n(408)},53:(e,t)=>{"use strict";function n(e,t){var n=e.length;e.push(t);e:for(;0<n;){var r=n-1>>>1,a=e[r];if(!(0<o(a,t)))break e;e[r]=t,e[n]=a,n=r}}function r(e){return 0===e.length?null:e[0]}function a(e){if(0===e.length)return null;var t=e[0],n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,a=e.length,i=a>>>1;r<i;){var l=2*(r+1)-1,u=e[l],c=l+1,s=e[c];if(0>o(u,n))c<a&&0>o(s,u)?(e[r]=s,e[c]=n,r=c):(e[r]=u,e[l]=n,r=l);else{if(!(c<a&&0>o(s,n)))break e;e[r]=s,e[c]=n,r=c}}}return t}function o(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}if("object"==typeof performance&&"function"==typeof performance.now){var i=performance;t.unstable_now=function(){return i.now()}}else{var l=Date,u=l.now();t.unstable_now=function(){return l.now()-u}}var c=[],s=[],d=1,f=null,p=3,m=!1,g=!1,h=!1,v="function"==typeof setTimeout?setTimeout:null,b="function"==typeof clearTimeout?clearTimeout:null,A="undefined"!=typeof setImmediate?setImmediate:null;function y(e){for(var t=r(s);null!==t;){if(null===t.callback)a(s);else{if(!(t.startTime<=e))break;a(s),t.sortIndex=t.expirationTime,n(c,t)}t=r(s)}}function E(e){if(h=!1,y(e),!g)if(null!==r(c))g=!0,R(w);else{var t=r(s);null!==t&&_(E,t.startTime-e)}}function w(e,n){g=!1,h&&(h=!1,b(k),k=-1),m=!0;var o=p;try{for(y(n),f=r(c);null!==f&&(!(f.expirationTime>n)||e&&!P());){var i=f.callback;if("function"==typeof i){f.callback=null,p=f.priorityLevel;var l=i(f.expirationTime<=n);n=t.unstable_now(),"function"==typeof l?f.callback=l:f===r(c)&&a(c),y(n)}else a(c);f=r(c)}if(null!==f)var u=!0;else{var d=r(s);null!==d&&_(E,d.startTime-n),u=!1}return u}finally{f=null,p=o,m=!1}}"undefined"!=typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var C,x=!1,S=null,k=-1,D=5,I=-1;function P(){return!(t.unstable_now()-I<D)}function B(){if(null!==S){var e=t.unstable_now();I=e;var n=!0;try{n=S(!0,e)}finally{n?C():(x=!1,S=null)}}else x=!1}if("function"==typeof A)C=function(){A(B)};else if("undefined"!=typeof MessageChannel){var O=new MessageChannel,N=O.port2;O.port1.onmessage=B,C=function(){N.postMessage(null)}}else C=function(){v(B,0)};function R(e){S=e,x||(x=!0,C())}function _(e,n){k=v((function(){e(t.unstable_now())}),n)}t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){g||m||(g=!0,R(w))},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):D=0<e?Math.floor(1e3/e):5},t.unstable_getCurrentPriorityLevel=function(){return p},t.unstable_getFirstCallbackNode=function(){return r(c)},t.unstable_next=function(e){switch(p){case 1:case 2:case 3:var t=3;break;default:t=p}var n=p;p=t;try{return e()}finally{p=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=function(){},t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=p;p=e;try{return t()}finally{p=n}},t.unstable_scheduleCallback=function(e,a,o){var i=t.unstable_now();switch(o="object"==typeof o&&null!==o&&"number"==typeof(o=o.delay)&&0<o?i+o:i,e){case 1:var l=-1;break;case 2:l=250;break;case 5:l=1073741823;break;case 4:l=1e4;break;default:l=5e3}return e={id:d++,callback:a,priorityLevel:e,startTime:o,expirationTime:l=o+l,sortIndex:-1},o>i?(e.sortIndex=o,n(s,e),null===r(c)&&e===r(s)&&(h?(b(k),k=-1):h=!0,_(E,o-i))):(e.sortIndex=l,n(c,e),g||m||(g=!0,R(w))),e},t.unstable_shouldYield=P,t.unstable_wrapCallback=function(e){var t=p;return function(){var n=p;p=t;try{return e.apply(this,arguments)}finally{p=n}}}},840:(e,t,n)=>{"use strict";e.exports=n(53)},774:e=>{e.exports=function(e,t,n,r){var a=n?n.call(r,e,t):void 0;if(void 0!==a)return!!a;if(e===t)return!0;if("object"!=typeof e||!e||"object"!=typeof t||!t)return!1;var o=Object.keys(e),i=Object.keys(t);if(o.length!==i.length)return!1;for(var l=Object.prototype.hasOwnProperty.bind(t),u=0;u<o.length;u++){var c=o[u];if(!l(c))return!1;var s=e[c],d=t[c];if(!1===(a=n?n.call(r,s,d,c):void 0)||void 0===a&&s!==d)return!1}return!0}},379:e=>{"use strict";var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var o={},i=[],l=0;l<e.length;l++){var u=e[l],c=r.base?u[0]+r.base:u[0],s=o[c]||0,d="".concat(c," ").concat(s);o[c]=s+1;var f=n(d),p={css:u[1],media:u[2],sourceMap:u[3],supports:u[4],layer:u[5]};if(-1!==f)t[f].references++,t[f].updater(p);else{var m=a(p,r);r.byIndex=l,t.splice(l,0,{identifier:d,updater:m,references:1})}i.push(d)}return i}function a(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,a){var o=r(e=e||[],a=a||{});return function(e){e=e||[];for(var i=0;i<o.length;i++){var l=n(o[i]);t[l].references--}for(var u=r(e,a),c=0;c<o.length;c++){var s=n(o[c]);0===t[s].references&&(t[s].updater(),t.splice(s,1))}o=u}}},569:e=>{"use strict";var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:e=>{"use strict";e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{"use strict";e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{"use strict";e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var a=void 0!==n.layer;a&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,a&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var o=n.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{"use strict";e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},e=>{e(e.s=793)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,